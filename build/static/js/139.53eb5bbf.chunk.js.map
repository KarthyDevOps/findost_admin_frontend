{"version":3,"sources":["component/common/NormalMultiSelect/Select.js"],"names":["SelectComponent","Component","render","name","className","value","label","handleChange","options","arrow","grayed","isMulti","isGrayed","disabled","placeholder","isClearable","borderRadius","isSearchable","this","props","customStyles","base","fontSize","color","fontWeight","lineHeight","opacity","indicatorSeparator","display","dropdownIndicator","padding","height","width","justifyContent","alignItems","singleValue","control","border","boxShadow","outline","background","paddingRight","React","createElement","concat","Fragment","Select","Object","assign","styles","isDisabled","onChange","classNamePrefix","components","DropdownIndicator","src","style"],"mappings":"kGAAA,6CAGA,MAAMA,UAAwBC,YAC5BC,SACE,IAAI,KACFC,EAAI,UACJC,EAAS,MACTC,EAAQ,GAAE,MACVC,EAAQ,GAAE,aACVC,EAAY,QACZC,EAAU,GAAE,MACZC,GAAQ,EAAK,OACbC,GAAS,EAAK,QACdC,GAAU,EAAK,SACfC,GAAW,EAAK,SAChBC,GAAW,EAAK,YAChBC,EAAc,GAAE,YAChBC,GAAc,EAAK,aACnBC,GAAe,EAAK,aACpBC,GAAe,GACbC,KAAKC,MAET,MAYMC,EAAe,CACnBN,YAAcO,IAAI,IACbA,EACHC,SAAU,GACVC,MAAO,OACPC,WAAY,IACZC,WAAY,GACZC,QAAS,KAEXC,mBAAqBN,IAAI,IACpBA,EACHO,QAAS,SAEXC,kBAAoBR,IAAI,IACnBA,EACHS,QAAS,EACTC,OAAQ,OACRC,MAAO,OACPT,MAAO,QACPK,QAAS,OACTK,eAAgB,SAChBC,WAAY,WAEdC,YAAcd,IAAI,IACbA,EACHE,MAAO,UACPC,WAAY,MAEdY,QAAUf,IAAI,IACTA,EACHL,aAAcA,EAAe,GAAK,EAClCqB,OAAQ,oBACRC,UAAW,eACXC,QAAS,KACTC,WAAY9B,EAAS,UAAY,cACjCqB,OAAQ,GACRU,aAAc,GACdH,UAAW,qCAIf,OACEI,IAAAC,cAAA,OAAKvC,UAAS,GAAAwC,OAAKnC,EAAQ,iBAAmB,WACjC,KAAVH,EACCoC,IAAAC,cAAA,WACED,IAAAC,cAAA,SAAOvC,UAAU,2BAA2BE,IAE5C,KACJoC,IAAAC,cAAAD,IAAAG,SAAA,KACEH,IAAAC,cAACG,IAAMC,OAAAC,OAAA,GACA9B,KAAKC,OAAS,GAAE,CACrBhB,KAAMA,EACNE,MAAOA,EACPG,QAASA,EACTG,QAASA,EACTsC,OAAQ7B,EACRhB,UAAWA,EACX8C,WAAYrC,EACZsC,SAAU5C,EACV6C,gBAAgB,SAChBtC,YAAaA,EACbC,YAAaA,EACbE,aAAcA,EACdoC,WAAY,CAAEC,kBA3EKnC,GAEvBkC,IAAWC,mBACTZ,IAAAC,cAACU,IAAWC,kBAAsBnC,EAChCuB,IAAAC,cAAA,aACI9B,GAAY6B,IAAAC,cAAA,OAAKY,IAAK,eAAgBC,MAAO,CAAExB,MAAO,mBA8EvDhC","file":"static/js/139.53eb5bbf.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport Select, { components } from \"react-select\";\r\n\r\nclass SelectComponent extends Component {\r\n  render() {\r\n    let {\r\n      name,\r\n      className,\r\n      value = \"\",\r\n      label = \"\",\r\n      handleChange,\r\n      options = [],\r\n      arrow = false,\r\n      grayed = false,\r\n      isMulti = false,\r\n      isGrayed = false,\r\n      disabled = false,\r\n      placeholder = \"\",\r\n      isClearable = false,\r\n      borderRadius = false,\r\n      isSearchable = false\r\n    } = this.props;\r\n\r\n    const DropdownIndicator = (props) => {\r\n      return (\r\n        components.DropdownIndicator && (\r\n          <components.DropdownIndicator {...props}>\r\n            <span>\r\n              {!disabled && <img src={\"dropDownIcon\"} style={{ width: \"100%\" }} />}\r\n            </span>\r\n          </components.DropdownIndicator>\r\n        )\r\n      );\r\n    };\r\n\r\n    const customStyles = {\r\n      placeholder: (base) => ({\r\n        ...base,\r\n        fontSize: 14,\r\n        color: \"#000\",\r\n        fontWeight: 500,\r\n        lineHeight: 16,\r\n        opacity: 0.8\r\n      }),\r\n      indicatorSeparator: (base) => ({\r\n        ...base,\r\n        display: \"none\"\r\n      }),\r\n      dropdownIndicator: (base) => ({\r\n        ...base,\r\n        padding: 0,\r\n        height: \"26px\",\r\n        width: \"26px\",\r\n        color: \"black\",\r\n        display: \"flex\",\r\n        justifyContent: \"center\",\r\n        alignItems: \"center\"\r\n      }),\r\n      singleValue: (base) => ({\r\n        ...base,\r\n        color: \"#222222\",\r\n        fontWeight: 600\r\n      }),\r\n      control: (base) => ({\r\n        ...base,\r\n        borderRadius: borderRadius ? 50 : 4,\r\n        border: \"1px solid #C7C7C7\",\r\n        boxShadow: \"0 !important\",\r\n        outline: \"0 \",\r\n        background: grayed ? \"#F1F1F1\" : \"transparent\",\r\n        height: 43,\r\n        paddingRight: 10,\r\n        boxShadow: \"0px 0px 1px rgba(0, 0, 0, 0.25)\"\r\n      })\r\n    };\r\n\r\n    return (\r\n      <div className={`${arrow ? \"select-section\" : \"Select\"}`}>\r\n        {label !== \"\" ? (\r\n          <div>\r\n            <label className=\"font-weight-normal mb-1\">{label}</label>\r\n          </div>\r\n        ) : null}\r\n        <>\r\n          <Select\r\n            {...(this.props || {})}\r\n            name={name}\r\n            value={value}\r\n            options={options}\r\n            isMulti={isMulti}\r\n            styles={customStyles}\r\n            className={className}\r\n            isDisabled={disabled}\r\n            onChange={handleChange}\r\n            classNamePrefix=\"Select\"\r\n            placeholder={placeholder}\r\n            isClearable={isClearable}\r\n            isSearchable={isSearchable}\r\n            components={{ DropdownIndicator }}\r\n          />\r\n        </>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default SelectComponent;\r\n"],"sourceRoot":""}