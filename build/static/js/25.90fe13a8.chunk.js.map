{"version":3,"sources":["component/common/ErrorMessage/index.js","component/Auth/Forgetpassword/index.js","component/common/NormalButton/NormalButton.js","component/common/InputBox/InputBox.js","assets/images/Frame.svg","assets/images/user.svg"],"names":["FormErrorMessage","_ref","error","type","messages","React","createElement","className","Forgetpassword","register","handleSubmit","errors","reset","setError","useForm","mode","src","login_logo","alt","InputBox","placeholder","Iconic","name","required","pattern","emailId","username_icon","onClick","history","push","NormalButton","loginButton1","label","async","body","email","inputs","response","forgotPassword","status","Toast","message","data","e","console","log","loginpage_frame","Component","render","id","addBnt","profileCreatNext","profileCreatNext1","profileCreatBack","uploadBrowseBtn","authButton1","disabled","authButton","loginButton","tableBtn","rightIcon","leftIcon","btnSecondary","profileBtn","outlineBtn","cancel","addProductbtn","isLoading","this","props","concat","Fragment","Oval","color","height","width","value","onChange","maxlength","icons","GB","onWheel","grayedBox","maxLength","Search","ref","defaultValue","event","currentTarget","blur","target","autoComplete","BsSearch","size","style","module","exports"],"mappings":"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","file":"static/js/25.90fe13a8.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nconst FormErrorMessage = ({ error, type, messages }) => {\r\n  if (!error) return null;\r\n\r\n  return (\r\n    <span className=\"text-danger fs-14\">\r\n      {messages[error.type] ? messages[error.type] : \"Error in field\"}\r\n    </span>\r\n  );\r\n};\r\nexport default FormErrorMessage;\r\n","import { useForm } from \"react-hook-form\";\r\nimport React, { useRef, useState } from \"react\";\r\n// Styles\r\nimport \"../Login/style.scss\";\r\nimport username_icon from \"../../../assets/images/user.svg\";\r\nimport login_logo from \"../../../assets/images/findostLogo.svg\";\r\nimport loginpage_frame from \"../../../assets/images/Frame.svg\";\r\n// Internal components\r\nimport FormErrorMessage from \"component/common/ErrorMessage\";\r\nimport NormalButton from \"component/common/NormalButton/NormalButton\";\r\nimport InputBox from \"component/common/InputBox/InputBox\";\r\n// Service\r\nimport { Toast } from \"service/toast\";\r\nimport { forgotPassword } from \"service/Auth\";\r\n// Helpers\r\nimport { history } from \"helpers\";\r\n\r\nconst Forgetpassword = () => {\r\n  const { register, handleSubmit, errors, reset, setError } = useForm({\r\n    mode: \"onChange\",\r\n  });\r\n\r\n  const onSubmit = async (inputs) => {\r\n    try {\r\n      const body = {\r\n        email: inputs.emailId,\r\n      };\r\n      let response = await forgotPassword(body);\r\n      if (response.status === 200) {\r\n        Toast({ type: \"success\", message: response.data.message });\r\n        reset({ emailId: \"\" });\r\n      } else {\r\n        Toast({ type: \"error\", message: response.data.message });\r\n        history.push(\"/auth/forget\")\r\n      }\r\n    } catch (e) {\r\n      console.log(\"e :>> \", e);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <form>\r\n      <div className=\"login_page\">\r\n        <div className=\"container-fluid\">\r\n          <div className=\"row \">\r\n            <div className=\" login_filed col-lg-5 \">\r\n              <div className=\"row page  mt-3\">\r\n                <div className=\"login_logo col-lg-12 \">\r\n                  <img\r\n                    className=\"mx-auto d-block\"\r\n                    src={login_logo}\r\n                    alt=\"\"\r\n                  ></img>\r\n                  <h6 className=\"login \">Forgot password</h6>\r\n                  <p className=\"text-center\">\r\n                    Please provide registered email id to send reset link\r\n                  </p>\r\n                </div>\r\n                <div className=\"userbox mt-3\">\r\n                  <InputBox\r\n                    className=\"login_input\"\r\n                    placeholder=\"Email Id\"\r\n                    Iconic\r\n                    errors={errors}\r\n                    name=\"emailId\"\r\n                    register={register({\r\n                      required: true,\r\n                      pattern: /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i,\r\n                    })}\r\n                  />\r\n                  <FormErrorMessage\r\n                    error={errors.emailId}\r\n                    messages={{\r\n                      required: \"Email Id is Required\",\r\n                      pattern: \"Invalid Email Id\",\r\n                    }}\r\n                  />\r\n                  <span className=\"userbox_icon\">\r\n                    <img src={username_icon} alt=\"\"></img>\r\n                  </span>\r\n                </div>\r\n                <div className=\"forget \">\r\n                  <span\r\n                    onClick={() => history.push(\"/auth/login\")}\r\n                    className=\"forget cursor-pointer\"\r\n                  >\r\n                    Login Instead\r\n                  </span>\r\n                  <div className=\"login_btn  mt-3\">\r\n                    <NormalButton\r\n                      loginButton1\r\n                      label=\"Send Reset Link\"\r\n                      onClick={handleSubmit(onSubmit)}\r\n                    />\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div className=\"login_frame ms-4 ps-5  col-lg-7\">\r\n              <div className=\"clip\"></div>\r\n              <div className=\"bg_slide\">\r\n                <img\r\n                  className=\" d-block mx-auto\"\r\n                  src={loginpage_frame}\r\n                  alt=\"\"\r\n                ></img>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default Forgetpassword;\r\n","import React, { Component } from \"react\";\r\nimport { Oval } from \"react-loader-spinner\";\r\n// import styles from \"./button.module.scss\";\r\nimport \"./normalButton.scss\";\r\n\r\nexport class NormalButton extends Component {\r\n  render() {\r\n    const {\r\n      className = \"\",\r\n      label = \"\",\r\n      onClick,\r\n      id,\r\n      addBnt,\r\n      profileCreatNext,\r\n      profileCreatNext1,\r\n      profileCreatBack,\r\n      uploadBrowseBtn,\r\n      authButton1,\r\n      type = \"submit\",\r\n      disabled = false,\r\n      authButton = false,\r\n      loginButton = false,\r\n      loginButton1 = false,\r\n      tableBtn = false,\r\n      rightIcon = \"\",\r\n      leftIcon = \"\",\r\n      btnSecondary = false,\r\n      profileBtn = false,\r\n      outlineBtn = false,\r\n      cancel = false,\r\n      addProductbtn = false,\r\n      isLoading = false, // Add isLoading prop for button loader\r\n    } = this.props;\r\n\r\n    return (\r\n      <div>\r\n        <button\r\n          id={id}\r\n          type={type}\r\n          className={`cursor-pointer \r\n                     ${authButton ? \"authButton\" : \"\"}\r\n                     ${profileCreatNext ? \"profileCreatNext\" : \"\"}\r\n                     ${profileCreatNext1 ? \"profileCreatNext1\" : \"\"}\r\n                     ${authButton1 ? \"authButton1\" : \"\"}\r\n                     ${profileCreatBack ? \"profileCreatBack\" : \"\"}\r\n                     ${loginButton ? \"loginButton\" : \"\"}\r\n                     ${loginButton1 ? \"loginButton1\" : \"\"}\r\n                     ${addBnt ? \"addBnt\" : \"\"}\r\n                     ${tableBtn ? \"tableBtn\" : \"\"}\r\n                     ${btnSecondary ? \"btnSecondary\" : \"\"}\r\n                     ${profileBtn ? \"profileBtn\" : \"\"}\r\n                     ${outlineBtn ? \"outlineBtn\" : \"\"}\r\n                     ${cancel ? \"cancelBtn \" : \"\"}\r\n                     ${addProductbtn ? \"addProductbtn \" : \"\"}\r\n                     ${uploadBrowseBtn ? \"uploadBrowseBtn \" : \"\"}\r\n                     ${className}`}\r\n          onClick={onClick}\r\n          disabled={disabled || isLoading}\r\n        >\r\n          {isLoading ? (\r\n            <span className=\"btn-loader  \">\r\n              {\" \"}\r\n              <>\r\n                <Oval color=\"#ffffff\" height={20} width={\"100%\"} />\r\n              </>\r\n              <>\r\n                <span className=\"m-3\">Loading</span>{\" \"}\r\n              </>\r\n            </span>\r\n          ) : (\r\n            <>\r\n              {leftIcon !== \"\" ? (\r\n                <span className={`btn-left-icon ${leftIcon}`}></span>\r\n              ) : null}\r\n              {label}\r\n              {rightIcon !== \"\" ? (\r\n                <span className={`btn-right-icon ${rightIcon}`}></span>\r\n              ) : null}\r\n            </>\r\n          )}\r\n        </button>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default NormalButton;\r\n","import React from \"react\";\r\nimport { BsSearch } from \"react-icons/bs\"\r\nimport \"./InputBox.scss\";\r\nconst InputBox = (props) => {\r\n  let {\r\n    placeholder = \"\",\r\n    register = {},\r\n    value = \"\",\r\n    type = \"text\",\r\n    onChange,\r\n    name = \"\",\r\n    maxlength = \"\",\r\n    icons = false,\r\n    GB = false,\r\n    onWheel = \"\",\r\n    grayedBox = false,\r\n    Iconic = false,\r\n    disabled = false,\r\n    maxLength,\r\n    Search = false,\r\n  } = props;\r\n  return (\r\n    <>\r\n      <div className=\"input_head\">\r\n        <input\r\n          disabled={disabled}\r\n          name={name}\r\n          placeholder={placeholder}\r\n          className={\r\n            disabled ? \"inputBoxGrayed\" :\r\n              grayedBox\r\n                ? \"inputBoxGrayed\"\r\n                : Iconic\r\n                  ? \"inputBoxStyle1\"\r\n                  : \"inputBoxStyle\"\r\n          }\r\n          ref={register}\r\n          defaultValue={value}\r\n          type={type}\r\n          maxLength={maxLength}\r\n          onWheel={(event) => event.currentTarget.blur()}\r\n          onChange={(e) => {\r\n            const body = {\r\n              target: {\r\n                name: e.target.name,\r\n                value: e.target.value,\r\n              },\r\n            };\r\n            if (onChange) onChange(body);\r\n          }}\r\n          autoComplete={\"off\"}\r\n        />\r\n        {Iconic && Search ? <i className=\"search_icon\"><BsSearch size={18} style={{ color: \"#7E7E7E\" }} /></i> : \"\"}\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default InputBox;\r\n","module.exports = __webpack_public_path__ + \"static/media/Frame.5d9e13ec.svg\";","module.exports = __webpack_public_path__ + \"static/media/user.c0982fd9.svg\";"],"sourceRoot":""}