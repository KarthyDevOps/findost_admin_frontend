{"version":3,"sources":["component/common/NormalButton/NormalButton.js","component/common/InputBox/InputBox.js","component/common/TableComp/TableComp.js","component/common/DeleteModal/DeleteModal.js","component/common/TableComp/EmptyTable.js","service/Communication.js","component/Dashboard/NotificationManagementComp/NotificationManagementComp.js","pages/Dashboard/NotificationManagement/NotificationManagement.js","assets/images/SuccessImg.svg","assets/images/ErrorImg.svg","assets/images/ReadImg.svg","assets/images/deleteIcon.svg","assets/images/editIcon.svg","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithoutHoles.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableSpread.js"],"names":["NormalButton","this","props","className","label","onClick","id","addBnt","profileCreatNext","profileCreatNext1","profileCreatBack","uploadBrowseBtn","authButton1","type","disabled","authButton","loginButton","loginButton1","tableBtn","rightIcon","leftIcon","btnSecondary","profileBtn","outlineBtn","cancel","addProductbtn","Component","InputBox","placeholder","register","value","onChange","name","maxlength","icons","GB","onWheel","grayedBox","Iconic","maxLength","Search","ref","defaultValue","event","currentTarget","blur","e","body","target","autoComplete","size","style","color","TableComp","data","EditAction","DeleteAction","ReadAction","includedKeys","pageCount","onPageChange","editRouteName","setCurrentPage","handleOpenModal","currentPage","onRowsSelect","useState","selectedRows","setSelectedRows","statusColors","active","inactive","open","accepted","inprogress","closed","failed","success","updatedRows","length","map","obj","_id","checked","key","width","rowId","includes","filter","handleRowSelect","item","hasOwnProperty","statusKey","toLowerCase","status","charAt","toUpperCase","slice","href","src","alt","moment","isValid","format","test","textOnlyValue","replace","editIcon","cursor","localStorage","removeItem","setItem","history","push","ReadImg","deleteIcon","previousLabel","nextLabel","selectedPage","selected","forcePage","containerClassName","previousClassName","nextClassName","pageClassName","breakClassName","activeClassName","DeleteModal","DeleteMessage","modalOpen","closeModal","handleDelete","centered","closable","ErrorImg","EmptyTable","i","getNotificationTemplateList","params","axios","method","url","endpoints","communication","NOTIFICATION_TEMPLATE_LIST","headers","Authorization","getItem","catch","axiosErrorHandler","request","addNotificationTemplate","NOTIFICATION_TEMPLATE_CREATE","getNotificationTemplate","NOTIFICATION_TEMPLATE_GET","deleteNotificationTemplate","NOTIFICATION_TEMPLATE_DELETE","bulkDeleteNotificationTemplate","updateNotificationTemplate","NOTIFICATION_TEMPLATE_UPDATE","getNotificationHistoryList","NOTIFICATION_HISTORY_LIST","addNotificationHistory","NOTIFICATION_HISTORY_CREATE","getNotificationHistory","NOTIFICATION_HISTORY_GET","deleteNotificationHistory","NOTIFICATION_HISTORY_DELETE","BulkDeleteNotificationHistory","updateNotificationHistory","NOTIFICATION_HISTORY_UPDATE","NotificationManagementComp","create","edit","view","remove","activeTab","setActiveTab","search","setSearch","templatedata","setTemplateData","historydata","setHistoryData","setPageCount","isLoading","setIsLoading","bulkDelete","setBulkDelete","deleteId","show","modalVisible","setModalVisible","tabValue","URL","document","searchParams","get","handleTab","tab","templateKeys","historyKeys","getTemplateList","page","limit","response","list","pageMeta","console","log","getHistoryList","handleDeleteItem","Toast","message","handlePageChange","handleSearchChange","useCallback","debounceFunction","handleBulk","Object","values","handleBulkDelete","ids","useEffect","loading","NotificationManagement","privilegesData","dispatch","useDispatch","notificationManagement","getadminPrivileges","redirectTo","checkAndReturnViewableComponent","to","module","exports","_toConsumableArray","arr","Array","isArray","arrayLikeToArray","iter","Symbol","iterator","from","unsupportedIterableToArray","TypeError"],"mappings":"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","file":"static/js/76.fc7cad3b.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\n// import styles from \"./button.module.scss\";\r\nimport \"./normalButton.scss\";\r\nexport class NormalButton extends Component {\r\n  render() {\r\n    const {\r\n      className = \"\",\r\n      label = \"\",\r\n      onClick,\r\n      id,\r\n      addBnt,\r\n      profileCreatNext,\r\n      profileCreatNext1,\r\n      profileCreatBack,\r\n      uploadBrowseBtn,\r\n      authButton1,\r\n      type = \"submit\",\r\n      disabled = false,\r\n      authButton = false,\r\n      loginButton = false,\r\n      loginButton1 = false,\r\n      tableBtn = false,\r\n      rightIcon = \"\",\r\n      leftIcon = \"\",\r\n      btnSecondary = false,\r\n      profileBtn = false,\r\n      outlineBtn = false,\r\n      cancel = false,\r\n      addProductbtn = false,\r\n    } = this.props;\r\n\r\n    return (\r\n      <div>\r\n        <button\r\n          id={id}\r\n          type={type}\r\n          className={`cursor-pointer \r\n                     ${authButton ? \"authButton\" : \"\"}\r\n                     ${profileCreatNext ? \"profileCreatNext\" : \"\"}\r\n                     ${profileCreatNext1 ? \"profileCreatNext1\" : \"\"}\r\n                     ${authButton1 ? \"authButton1\" : \"\"}\r\n                     ${profileCreatBack ? \"profileCreatBack\" : \"\"}\r\n                     ${loginButton ? \"loginButton\" : \"\"}\r\n                     ${loginButton1 ? \"loginButton1\" : \"\"}\r\n                     ${addBnt ? \"addBnt\" : \"\"}\r\n                     ${tableBtn ? \"tableBtn\" : \"\"}\r\n                     ${btnSecondary ? \"btnSecondary\" : \"\"}\r\n                     ${profileBtn ? \"profileBtn\" : \"\"}\r\n                     ${outlineBtn ? \"outlineBtn\" : \"\"}\r\n                     ${cancel ? \"cancelBtn \" : \"\"}\r\n                     ${addProductbtn ? \"addProductbtn \" : \"\"}\r\n                     ${uploadBrowseBtn ? \"uploadBrowseBtn \" : \"\"}\r\n                     ${className}`}\r\n          onClick={onClick}\r\n          disabled={disabled}\r\n        >\r\n          {leftIcon !== \"\" ? (\r\n            <span className={`btn-left-icon ${leftIcon}`}></span>\r\n          ) : null}\r\n          {label}\r\n          {rightIcon !== \"\" ? (\r\n            <span className={`btn-right-icon ${rightIcon}`}></span>\r\n          ) : null}\r\n        </button>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default NormalButton;\r\n","import React from \"react\";\r\nimport {BsSearch} from \"react-icons/bs\"\r\nimport \"./InputBox.scss\";\r\nconst InputBox = (props) => {\r\n  let {\r\n    placeholder = \"\",\r\n    register = {},\r\n    value = \"\",\r\n    type = \"text\",\r\n    onChange,\r\n    name = \"\",\r\n    maxlength = \"\",\r\n    icons = false,\r\n    GB = false,\r\n    onWheel = \"\",\r\n    grayedBox = false,\r\n    Iconic = false,\r\n    disabled = false,\r\n    maxLength,\r\n    Search = false,\r\n  } = props;\r\n  return (\r\n    <>\r\n    <div className=\"input_head\">\r\n      <input\r\n        disabled={disabled}\r\n        name={name}\r\n        placeholder={placeholder}\r\n        className={\r\n          grayedBox\r\n            ? \"inputBoxGrayed\"\r\n            : Iconic\r\n            ? \"inputBoxStyle1\"\r\n            : \"inputBoxStyle\"\r\n        }\r\n        ref={register}\r\n        defaultValue={value}\r\n        type={type}\r\n        maxLength={maxLength}\r\n        onWheel={(event) => event.currentTarget.blur()}\r\n        onChange={(e) => {\r\n          const body = {\r\n            target: {\r\n              name: e.target.name,\r\n              value: e.target.value,\r\n            },\r\n          };\r\n          if (onChange) onChange(body);\r\n        }}\r\n        autoComplete={\"off\"}\r\n      />\r\n      {Iconic && Search ?  <i className=\"search_icon\"><BsSearch size={18} style={{color : \"#7E7E7E\"}}/></i> : \"\"}\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default InputBox;\r\n","import React, { useState } from \"react\";\r\n// styles\r\nimport \"./style.scss\";\r\n// images\r\nimport editIcon from \"assets/images/editIcon.svg\";\r\nimport deleteIcon from \"assets/images/deleteIcon.svg\";\r\nimport ReadImg from \"assets/images/ReadImg.svg\";\r\n// services\r\nimport ReactPaginate from \"react-paginate\";\r\nimport { FaCaretLeft, FaCaretRight } from \"react-icons/fa\";\r\nimport moment from \"moment\";\r\n// helpers\r\nimport { history } from \"helpers\";\r\n\r\nfunction TableComp(props) {\r\n  const {\r\n    data,\r\n    EditAction,\r\n    DeleteAction,\r\n    ReadAction,\r\n    includedKeys,\r\n    pageCount,\r\n    onPageChange,\r\n    editRouteName,\r\n    setCurrentPage,\r\n    handleOpenModal,\r\n    currentPage,\r\n    onRowsSelect,\r\n  } = props;\r\n\r\n  const [selectedRows, setSelectedRows] = useState([]);\r\n  // Dynamic colors for Status KeyName\r\n  const statusColors = {\r\n    active: \"#27AE60\",\r\n    inactive: \"#EB5757\",\r\n    open: \"#EB5757\",\r\n    accepted: \"#2F80ED\",\r\n    inprogress: \"#F2C94C\",\r\n    closed: \"#27AE60\",\r\n    failed: \"#EB5757\",\r\n    success: \"#27AE60\",\r\n  };\r\n\r\n  const handlePageChange = (selectedPage) => {\r\n    setCurrentPage(selectedPage.selected + 1);\r\n    onPageChange(selectedPage.selected + 1);\r\n  };\r\n\r\n  const handleRowSelect = (rowId) => {\r\n    let updatedRows;\r\n    if (selectedRows.includes(rowId)) {\r\n      updatedRows = selectedRows.filter((id) => id !== rowId);\r\n    } else {\r\n      updatedRows = [...selectedRows, rowId];\r\n    }\r\n    setSelectedRows(updatedRows);\r\n    onRowsSelect(updatedRows);\r\n  };\r\n\r\n  const handleSelectAll = () => {\r\n    let updatedRows;\r\n    if (selectedRows.length === data.length) {\r\n      updatedRows = [];\r\n    } else {\r\n      const allRowIds = data.map((obj) => obj._id);\r\n      updatedRows = allRowIds;\r\n    }\r\n    setSelectedRows(updatedRows);\r\n    onRowsSelect(updatedRows);\r\n  };\r\n\r\n  return (\r\n    <div className=\"table-container\">\r\n      <table className=\"data-table\">\r\n        <thead>\r\n          <tr>\r\n            {DeleteAction && (\r\n              <th className=\"checkBox_place\">\r\n                <input\r\n                  type=\"checkbox\"\r\n                  onChange={handleSelectAll}\r\n                  checked={selectedRows.length === data.length}\r\n                  className=\"check_box cursor-pointer\"\r\n                />\r\n              </th>\r\n            )}\r\n            {includedKeys.map((key) => {\r\n              return (\r\n                <>\r\n                  <th className=\"\" key={key} style={{ ...(key?.width ? { width: key?.width } : {}) }}>\r\n                    {key.label}\r\n                  </th>\r\n                </>\r\n              );\r\n            })}\r\n\r\n            {(DeleteAction || ReadAction || EditAction) &&\r\n              <th className=\"action_place\" > Actions</th>\r\n            }\r\n          </tr>\r\n        </thead>\r\n\r\n        <tbody>\r\n          {data.map((obj) => {\r\n            return (\r\n              <tr key={obj.id}>\r\n                {DeleteAction && (\r\n                  <td className=\"checkBox_place\">\r\n                    <input\r\n                      type=\"checkbox\"\r\n                      onChange={() => handleRowSelect(obj._id)}\r\n                      checked={selectedRows.includes(obj._id)}\r\n                      className=\"check_box cursor-pointer\"\r\n                    />\r\n                  </td>\r\n                )}\r\n                {includedKeys.map((item) => {\r\n                  const key = item.value;\r\n                  // status keys color change\r\n                  if (obj.hasOwnProperty(key)) {\r\n                    const value = obj[key];\r\n                    const label = item.label;\r\n                    const statusKey = key.toLowerCase();\r\n                    if (statusKey.includes(\"status\")) {\r\n                      const status = value.toLowerCase();\r\n                      const color = statusColors[status] || \"black\";\r\n                      return (\r\n                        <td key={key}>\r\n                          <span style={{ color }}>\r\n                            {value.charAt(0).toUpperCase() + value.slice(1)}\r\n                          </span>\r\n                        </td>\r\n                      );\r\n                      // for id\r\n                    } else if (statusKey.includes(\"id\")) {\r\n                      return <td key={key}>{value}</td>;\r\n                      // date and time formatter\r\n                    } else if (statusKey.includes(\"producticons3\")) {\r\n                      return (\r\n                        <td key={key}>\r\n                          <a href={value} target=\"_blank\"><img src={value} alt={value} className=\"img\" />{\" \"}</a>\r\n                        </td>\r\n                      );\r\n                      // date and time formatter\r\n                    } else if (\r\n                      moment(value, \"YYYY-MM-DDTHH:mm:ss.SSSZ\", true).isValid()\r\n                    ) {\r\n                      return (\r\n                        <td key={key}>\r\n                          {moment(value).format(\"MMM DD YYYY hh:mm a\")}\r\n                        </td>\r\n                      );\r\n                      // for HTML tags\r\n                    } else if (\r\n                      typeof value === \"string\" &&\r\n                      /<[a-z][\\s\\S]*>/i.test(value)\r\n                    ) {\r\n                      const textOnlyValue = value.replace(/<[^>]+>/g, \"\");\r\n                      return <td key={key}>{textOnlyValue}</td>;\r\n                      // for boolean\r\n                    } else {\r\n                      return (\r\n                        <td key={key}>\r\n                          {typeof value === \"boolean\" ? (\r\n                            value ? (\r\n                              <span style={{ color: \"#1D9E00\" }}>Active</span>\r\n                            ) : (\r\n                              <span style={{ color: \"#DD2025\" }}>Inactive</span>\r\n                            )\r\n                          ) : (\r\n                            value\r\n                          )}\r\n                        </td>\r\n                      );\r\n                    }\r\n                  }\r\n                  return null;\r\n                })}\r\n\r\n                {(DeleteAction || ReadAction || EditAction) && (\r\n                  <td>\r\n                    <span className=\"actions\">\r\n                      {EditAction && (\r\n                        <img\r\n                          src={editIcon}\r\n                          alt=\"Edit\"\r\n                          style={{\r\n                            color: \"#B4B4B4\",\r\n                            cursor: \"pointer\",\r\n                          }}\r\n                          onClick={() => {\r\n                            localStorage.removeItem(\"editId\");\r\n                            localStorage.setItem(\"editId\", obj._id);\r\n                            history.push(`${editRouteName}`);\r\n                          }}\r\n                        />\r\n                      )}\r\n                      {ReadAction && (\r\n                        <img\r\n                          src={ReadImg}\r\n                          alt=\"read\"\r\n                          style={{\r\n                            color: \"#B4B4B4\",\r\n                            cursor: \"pointer\",\r\n                          }}\r\n                          onClick={() => {\r\n                            localStorage.removeItem(\"editId\");\r\n                            localStorage.setItem(\"editId\", obj._id);\r\n                            history.push(`${editRouteName}`);\r\n                          }}\r\n                        />\r\n                      )}\r\n                      {DeleteAction && (\r\n                        <img\r\n                          onClick={() => handleOpenModal(obj._id)}\r\n                          src={deleteIcon}\r\n                          alt=\"delete\"\r\n                          style={{\r\n                            color: \"#B4B4B4\",\r\n                            cursor: \"pointer\",\r\n                          }}\r\n                        />\r\n                      )}\r\n                    </span>\r\n                  </td>\r\n                )}\r\n              </tr>\r\n            );\r\n          })}\r\n        </tbody>\r\n      </table>\r\n      <div className=\"my-4\">\r\n        <ReactPaginate\r\n          previousLabel={<FaCaretLeft />}\r\n          nextLabel={<FaCaretRight />}\r\n          pageCount={pageCount}\r\n          onPageChange={handlePageChange}\r\n          forcePage={currentPage - 1}\r\n          containerClassName={\"pagination\"}\r\n          previousClassName={\"pagination-previous\"}\r\n          nextClassName={\"pagination-next\"}\r\n          pageClassName={\"pagination-item\"}\r\n          breakClassName={\"pagination-item\"}\r\n          activeClassName={\"active_page\"}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default TableComp;\r\n","import React, { useState } from \"react\";\r\nimport { Button, Modal } from \"antd\";\r\nimport \"./style.scss\";\r\nimport ErrorImg from \"assets/images/ErrorImg.svg\";\r\nimport successImg from \"assets/images/SuccessImg.svg\";\r\nimport NormalButton from \"../NormalButton/NormalButton\";\r\nconst DeleteModal = ({\r\n  DeleteMessage,\r\n  modalOpen,\r\n  closeModal,\r\n  handleDelete,\r\n}) => {\r\n  return (\r\n    <>\r\n      <Modal open={modalOpen} centered closable={false}>\r\n        <div className=\"p-5\">\r\n          {DeleteMessage && <p className=\"delete_text m-0\">{DeleteMessage}</p>}\r\n          {DeleteMessage && (\r\n            <div className=\"delete_Img\">\r\n              <img src={ErrorImg} alt=\"\" />\r\n            </div>\r\n          )}\r\n          {DeleteMessage && (\r\n            <div className=\"d-flex align-items-center \">\r\n              <div className=\"col-6 d-flex justify-content-end\">\r\n                <NormalButton\r\n                  className=\"DeleteNoBtn\"\r\n                  label={\"No\"}\r\n                  onClick={closeModal}\r\n                />\r\n              </div>\r\n              <div className=\"col-6 d-flex  justify-content-start\">\r\n                <NormalButton\r\n                  className=\"DeleteYesBtn\"\r\n                  label={\"Yes\"}\r\n                  onClick={handleDelete}\r\n                />\r\n              </div>\r\n            </div>\r\n          )}\r\n        </div>\r\n      </Modal>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default DeleteModal;\r\n","import React from \"react\";\r\n// styles\r\nimport \"./style.scss\";\r\n\r\nconst EmptyTable = (props) => {\r\n  const { EditAction, DeleteAction, ReadAction, includedKeys } = props;\r\n  return (\r\n    <div className=\"table-container\">\r\n      <table className=\"data-table\">\r\n        <thead>\r\n          <tr>\r\n            {DeleteAction && (\r\n              <th className=\"checkBox_place\">\r\n                <input\r\n                  type=\"checkbox\"\r\n                  //   onChange={handleSelectAll}\r\n                  //   checked={selectedRows.length === data.length}\r\n                  className=\"check_box cursor-pointer\"\r\n                />\r\n              </th>\r\n            )}\r\n            {includedKeys.map((key) => {\r\n              return (\r\n                <>\r\n                  <th\r\n                    className=\"\"\r\n                    key={key}\r\n                    style={{ ...(key?.width ? { width: key?.width } : {}) }}\r\n                  >\r\n                    {key.label}\r\n                  </th>\r\n                </>\r\n              );\r\n            })}\r\n\r\n            {(DeleteAction || ReadAction || EditAction) && (\r\n              <th className=\"action_place\"> Actions</th>\r\n            )}\r\n          </tr>\r\n        </thead>\r\n      </table>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default EmptyTable;\r\n","import axios from \"axios\";\r\nimport { history } from \"helpers\";\r\nimport { endpoints } from \"config/api\";\r\nimport { axiosErrorHandler } from \"./helpers/axiosHelpers\";\r\n\r\n// Notification Template\r\nexport const getNotificationTemplateList = async (params) => {\r\n  let request = await axios({\r\n    method: \"get\",\r\n    url: `${endpoints.communication.NOTIFICATION_TEMPLATE_LIST}`,\r\n    headers: {\r\n      Authorization: `Bearer ${localStorage.getItem(\"token\")}`,\r\n    },\r\n    params: params,\r\n  }).catch(axiosErrorHandler);\r\n  return request;\r\n};\r\n\r\nexport const addNotificationTemplate = async (data) => {\r\n  const request = await axios({\r\n    method: \"post\",\r\n    url: endpoints.communication.NOTIFICATION_TEMPLATE_CREATE,\r\n    headers: {\r\n      Authorization: `Bearer ${localStorage.getItem(\"token\")}`,\r\n    },\r\n    data: data,\r\n  }).catch(axiosErrorHandler);\r\n  return request;\r\n};\r\n\r\nexport const getNotificationTemplate = async (params) => {\r\n  const request = await axios({\r\n    method: \"get\",\r\n    url: endpoints.communication.NOTIFICATION_TEMPLATE_GET,\r\n    headers: {\r\n      Authorization: `Bearer ${localStorage.getItem(\"token\")}`,\r\n    },\r\n    params,\r\n  }).catch(axiosErrorHandler);\r\n  return request;\r\n};\r\n\r\nexport const deleteNotificationTemplate = async (params) => {\r\n  const request = await axios({\r\n    method: \"delete\",\r\n    url: endpoints.communication.NOTIFICATION_TEMPLATE_DELETE,\r\n    headers: {\r\n      Authorization: `Bearer ${localStorage.getItem(\"token\")}`,\r\n    },\r\n    params,\r\n  }).catch(axiosErrorHandler);\r\n  return request;\r\n};\r\n\r\nexport const bulkDeleteNotificationTemplate = async (body) => {\r\n  const request = await axios({\r\n    method: \"delete\",\r\n    url: endpoints.communication.NOTIFICATION_TEMPLATE_DELETE,\r\n    headers: {\r\n      Authorization: `Bearer ${localStorage.getItem(\"token\")}`,\r\n    },\r\n    data: body,\r\n  }).catch(axiosErrorHandler);\r\n  return request;\r\n};\r\n\r\nexport const updateNotificationTemplate = async (body, id) => {\r\n  const request = await axios({\r\n    method: \"put\",\r\n    url: `${endpoints.communication.NOTIFICATION_TEMPLATE_UPDATE}?notificationTemplateId=${id}`,\r\n    headers: {\r\n      Authorization: `Bearer ${localStorage.getItem(\"token\")}`,\r\n    },\r\n    data: body,\r\n  }).catch(axiosErrorHandler);\r\n  return request;\r\n};\r\n\r\n// Notification History\r\nexport const getNotificationHistoryList = async (params) => {\r\n  let request = await axios({\r\n    method: \"get\",\r\n    url: `${endpoints.communication.NOTIFICATION_HISTORY_LIST}`,\r\n    headers: {\r\n      Authorization: `Bearer ${localStorage.getItem(\"token\")}`,\r\n    },\r\n    params: params,\r\n  }).catch(axiosErrorHandler);\r\n  return request;\r\n};\r\n\r\nexport const addNotificationHistory = async (data) => {\r\n  const request = await axios({\r\n    method: \"post\",\r\n    url: endpoints.communication.NOTIFICATION_HISTORY_CREATE,\r\n    headers: {\r\n      Authorization: `Bearer ${localStorage.getItem(\"token\")}`,\r\n    },\r\n    data: data,\r\n  }).catch(axiosErrorHandler);\r\n  return request;\r\n};\r\n\r\nexport const getNotificationHistory = async (params) => {\r\n  const request = await axios({\r\n    method: \"get\",\r\n    url: endpoints.communication.NOTIFICATION_HISTORY_GET,\r\n    headers: {\r\n      Authorization: `Bearer ${localStorage.getItem(\"token\")}`,\r\n    },\r\n    params,\r\n  }).catch(axiosErrorHandler);\r\n  return request;\r\n};\r\n\r\nexport const deleteNotificationHistory = async (params) => {\r\n  const request = await axios({\r\n    method: \"delete\",\r\n    url: endpoints.communication.NOTIFICATION_HISTORY_DELETE,\r\n    headers: {\r\n      Authorization: `Bearer ${localStorage.getItem(\"token\")}`,\r\n    },\r\n    params,\r\n  }).catch(axiosErrorHandler);\r\n  return request;\r\n};\r\n\r\nexport const BulkDeleteNotificationHistory = async (body) => {\r\n  const request = await axios({\r\n    method: \"delete\",\r\n    url: endpoints.communication.NOTIFICATION_HISTORY_DELETE,\r\n    headers: {\r\n      Authorization: `Bearer ${localStorage.getItem(\"token\")}`,\r\n    },\r\n    data: body,\r\n  }).catch(axiosErrorHandler);\r\n  return request;\r\n};\r\n\r\nexport const updateNotificationHistory = async (body, id) => {\r\n  const request = await axios({\r\n    method: \"put\",\r\n    url: `${endpoints.communication.NOTIFICATION_HISTORY_UPDATE}?id=${id}`,\r\n    headers: {\r\n      Authorization: `Bearer ${localStorage.getItem(\"token\")}`,\r\n    },\r\n    data: body,\r\n  }).catch(axiosErrorHandler);\r\n  return request;\r\n};\r\n","import React, { useState, useEffect, useCallback } from \"react\";\r\n// styles\r\nimport \"./style.scss\";\r\n// internal component\r\nimport InputBox from \"component/common/InputBox/InputBox\";\r\nimport NormalButton from \"component/common/NormalButton/NormalButton\";\r\nimport TableComp from \"../../common/TableComp/TableComp\";\r\nimport Loader from \"component/common/Loader\";\r\nimport DeleteModal from \"component/common/DeleteModal/DeleteModal\";\r\n// services\r\nimport {\r\n  getNotificationTemplateList,\r\n  deleteNotificationTemplate,\r\n  getNotificationHistoryList,\r\n  BulkDeleteNotificationHistory,\r\n  deleteNotificationHistory,\r\n  bulkDeleteNotificationTemplate,\r\n} from \"service/Communication\";\r\nimport { Toast } from \"service/toast\";\r\n// helpers\r\nimport { debounceFunction, history } from \"helpers\";\r\nimport EmptyTable from \"component/common/TableComp/EmptyTable\";\r\n\r\nconst NotificationManagementComp = ({ create, view, edit, remove }) => {\r\n  const [activeTab, setActiveTab] = useState(0);\r\n  const [search, setSearch] = useState(\"\");\r\n  const [templatedata, setTemplateData] = useState();\r\n  const [historydata, setHistoryData] = useState();\r\n  const [pageCount, setPageCount] = useState(1);\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [bulkDelete, setBulkDelete] = useState(false);\r\n  const [deleteId, setDeleteId] = useState([]);\r\n  const [modalVisible, setModalVisible] = useState({\r\n    id: null,\r\n    show: false,\r\n  });\r\n\r\n  var url = new URL(document.URL);\r\n  const params = url.searchParams;\r\n  const tabValue = +params.get(\"tab\") ?? 0;\r\n\r\n  const handleTab = (tab) => {\r\n    setActiveTab(tab);\r\n    history.push(`notification-management?tab=${tab}`);\r\n  };\r\n\r\n  const templateKeys = [\r\n    {\r\n      label: \"Notification Id\",\r\n      value: \"notificationTemplateId\",\r\n      width: \"50%\",\r\n    },\r\n    {\r\n      label: \"Date and Time\",\r\n      value: \"createdAt\",\r\n    },\r\n    {\r\n      label: \"Notification Title\",\r\n      value: \"title\",\r\n      width: \"50%\",\r\n    },\r\n    {\r\n      label: \"Notification Description\",\r\n      value: \"description\",\r\n    },\r\n  ];\r\n\r\n  const historyKeys = [\r\n    {\r\n      label: \"Notification Id\",\r\n      value: \"notificationId\",\r\n      width: \"50%\",\r\n    },\r\n    // {\r\n    //   label: \"Notification Sent Status\",\r\n    //   value: \"notificationSentStatus\",\r\n    // },\r\n    {\r\n      label: \"Date and Time\",\r\n      value: \"createdAt\",\r\n    },\r\n    {\r\n      label: \"Notification Title\",\r\n      value: \"title\",\r\n      width: \"50%\",\r\n    },\r\n    {\r\n      label: \"Notification Content\",\r\n      value: \"description\",\r\n    },\r\n  ];\r\n\r\n  const getTemplateList = async (page) => {\r\n    try {\r\n      setIsLoading(true);\r\n      setBulkDelete(false);\r\n      let params = {\r\n        page: page,\r\n        limit: 10,\r\n        search: search,\r\n      };\r\n      let response = await getNotificationTemplateList(params);\r\n      if (response.status === 200 && response?.data?.data?.list.length > 0) {\r\n        setTemplateData(response?.data?.data?.list);\r\n        setPageCount(response?.data?.data?.pageMeta?.pageCount);\r\n        setCurrentPage(response?.data?.data?.pageMeta?.currentPage);\r\n      } else {\r\n        setTemplateData([]);\r\n      }\r\n    } catch (err) {\r\n      console.log(\"err :>> \", err);\r\n    } finally {\r\n      setIsLoading(false);\r\n    }\r\n  };\r\n\r\n  const getHistoryList = async (page) => {\r\n    try {\r\n      setIsLoading(true);\r\n      setBulkDelete(false);\r\n      let params = {\r\n        page: page,\r\n        limit: 10,\r\n        search: search,\r\n      };\r\n      let response = await getNotificationHistoryList(params);\r\n      if (response.status === 200 && response?.data?.data?.list.length > 0) {\r\n        setHistoryData(response?.data?.data?.list);\r\n        setPageCount(response?.data?.data?.pageMeta?.pageCount);\r\n        setCurrentPage(response?.data?.data?.pageMeta?.currentPage);\r\n      } else {\r\n        setTemplateData([]);\r\n      }\r\n    } catch (err) {\r\n      console.log(\"err :>> \", err);\r\n    } finally {\r\n      setIsLoading(false);\r\n    }\r\n  };\r\n\r\n  const handleOpenModal = (id) => {\r\n    setModalVisible({\r\n      id: id,\r\n      show: true,\r\n    });\r\n  };\r\n\r\n  const handleDeleteItem = async () => {\r\n    if (modalVisible.show && modalVisible.id) {\r\n      if (activeTab === 0) {\r\n        let params = {\r\n          id: modalVisible.id,\r\n        };\r\n        let response = await deleteNotificationTemplate(params);\r\n        if (response.status === 200) {\r\n          Toast({ type: \"success\", message: response.data.message });\r\n          getTemplateList(currentPage);\r\n        }\r\n      } else {\r\n        let params = {\r\n          id: modalVisible.id,\r\n        };\r\n        let response = await deleteNotificationHistory(params);\r\n        if (response.status === 200) {\r\n          Toast({ type: \"success\", message: response.data.message });\r\n          getHistoryList(currentPage);\r\n        }\r\n      }\r\n    }\r\n    setModalVisible({ show: false, id: null });\r\n  };\r\n\r\n  const handlePageChange = (page) => {\r\n    setCurrentPage(page);\r\n    if (activeTab === 0) {\r\n      getTemplateList(page);\r\n    } else {\r\n      getHistoryList(page);\r\n    }\r\n  };\r\n\r\n  const handleSearchChange = useCallback(\r\n    debounceFunction((value) => {\r\n      setSearch(value);\r\n    }, 500),\r\n    []\r\n  );\r\n\r\n  const handleBulk = async (id) => {\r\n    if (id.length > 0) {\r\n      setBulkDelete(true);\r\n      deleteId.length = 0;\r\n      deleteId.push(...Object.values(id));\r\n    } else {\r\n      setBulkDelete(false);\r\n    }\r\n  };\r\n\r\n  const handleBulkDelete = async () => {\r\n    if (activeTab === 0) {\r\n      if (deleteId.length > 0) {\r\n        let body = {\r\n          ids: deleteId,\r\n        };\r\n        let response = await bulkDeleteNotificationTemplate(body);\r\n        if (response.status === 200) {\r\n          Toast({ type: \"success\", message: response.data.message });\r\n          getTemplateList(currentPage);\r\n        } else {\r\n          Toast({ type: \"error\", message: response.data.message });\r\n        }\r\n      }\r\n      deleteId.length = 0;\r\n    } else {\r\n      if (deleteId.length > 0) {\r\n        let body = {\r\n          ids: deleteId,\r\n        };\r\n        let response = await BulkDeleteNotificationHistory(body);\r\n        if (response.status === 200) {\r\n          Toast({ type: \"success\", message: response.data.message });\r\n          getHistoryList(currentPage);\r\n        } else {\r\n          Toast({ type: \"error\", message: response.data.message });\r\n        }\r\n      }\r\n      deleteId.length = 0;\r\n    }\r\n    setModalVisible({ show: false, id: null });\r\n  };\r\n\r\n  useEffect(() => {\r\n    handleTab(tabValue);\r\n    if (tabValue === 1) {\r\n      getHistoryList(currentPage);\r\n    } else {\r\n      getTemplateList(currentPage);\r\n    }\r\n  }, [tabValue, search]);\r\n\r\n  return (\r\n    <div className=\"notification_container px-5 py-3\">\r\n      <p className=\"m-0\">Notification Management</p>\r\n      <div className=\"Tab_design pt-3 p-0\">\r\n        <div\r\n          className={\r\n            activeTab === 0 ? \"Tab_design_active\" : \"Tab_design_inActive\"\r\n          }\r\n          onClick={() => {\r\n            handleTab(0);\r\n            setCurrentPage(1);\r\n          }}\r\n        >\r\n          Notification Template\r\n        </div>\r\n        &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n        <div\r\n          className={\r\n            activeTab === 1 ? \"Tab_design_active\" : \"Tab_design_inActive\"\r\n          }\r\n          onClick={() => {\r\n            handleTab(1);\r\n            setCurrentPage(1);\r\n          }}\r\n        >\r\n          Notification History\r\n        </div>\r\n      </div>\r\n      {activeTab === 0 ? (\r\n        <>\r\n          <div className=\"row align-items-center\">\r\n            <div className=\"col-md-3 my-3\">\r\n              <InputBox\r\n                className=\"login_input Notification_input\"\r\n                type={\"text\"}\r\n                placeholder=\"Search by Id\"\r\n                name=\"search\"\r\n                Iconic\r\n                Search\r\n                value={search}\r\n                onChange={(e) => handleSearchChange(e.target.value)}\r\n              />\r\n            </div>\r\n            <div className=\"col-md-5 p-0\"></div>\r\n            <div className=\"col-md-2\">\r\n              {bulkDelete && remove && (\r\n                <NormalButton\r\n                  className=\"authButton1\"\r\n                  label={\"Delete\"}\r\n                  onClick={handleOpenModal}\r\n                />\r\n              )}\r\n            </div>\r\n            {create && (\r\n              <div className=\"col-md-2 m-0\">\r\n                <NormalButton\r\n                  loginButton1\r\n                  label={\"Create Notification\"}\r\n                  onClick={() => {\r\n                    localStorage.removeItem(\"editId\");\r\n                    history.push(\r\n                      \"/admin/notification-management/create-notification\"\r\n                    );\r\n                  }}\r\n                />\r\n              </div>\r\n            )}\r\n          </div>\r\n        </>\r\n      ) : (\r\n        <>\r\n          <div className=\"row p-0 align-items-center\">\r\n            <div className=\"col-md-3 my-3\">\r\n              <InputBox\r\n                className=\"login_input Notification_input\"\r\n                type={\"text\"}\r\n                placeholder=\"Search by Id\"\r\n                name=\"search\"\r\n                Iconic\r\n                Search\r\n                value={search}\r\n                onChange={(e) => handleSearchChange(e.target.value)}\r\n              />\r\n            </div>\r\n            <div className=\"col-md-5\"></div>\r\n            <div className=\"col-md-2\">\r\n              {bulkDelete && remove && (\r\n                <NormalButton\r\n                  className=\"authButton1\"\r\n                  label={\"Delete\"}\r\n                  onClick={handleOpenModal}\r\n                />\r\n              )}\r\n            </div>\r\n            {create && (\r\n              <div className=\"col-md-2 m-0\">\r\n                <NormalButton\r\n                  loginButton1\r\n                  label={\"Send Notification\"}\r\n                  onClick={() => {\r\n                    localStorage.removeItem(\"editId\");\r\n                    history.push(\r\n                      \"/admin/notification-management/send-notification\"\r\n                    );\r\n                  }}\r\n                />\r\n              </div>\r\n            )}\r\n          </div>\r\n        </>\r\n      )}\r\n      {isLoading ? (\r\n        <Loader\r\n          loading={isLoading}\r\n          className=\"d-flex align-items-center justify-content-center\"\r\n        />\r\n      ) : (\r\n        <div>\r\n          {activeTab === 0 && templatedata && templatedata.length > 0 ? (\r\n            <TableComp\r\n              data={templatedata}\r\n              EditAction={edit}\r\n              DeleteAction={remove}\r\n              includedKeys={templateKeys}\r\n              pageCount={pageCount}\r\n              onPageChange={handlePageChange}\r\n              currentPage={currentPage}\r\n              setCurrentPage={setCurrentPage}\r\n              editRouteName=\"/admin/notification-management/create-notification\"\r\n              handleOpenModal={handleOpenModal}\r\n              onRowsSelect={handleBulk}\r\n            />\r\n          ) : (\r\n            activeTab === 0 && (\r\n              <div className=\"\">\r\n                <EmptyTable\r\n                  EditAction={edit}\r\n                  DeleteAction={remove}\r\n                  includedKeys={templateKeys}\r\n                />\r\n                <span className=\"d-flex align-items-center justify-content-center mt-5 pt-5\">\r\n                  No Data Available\r\n                </span>\r\n              </div>\r\n            )\r\n          )}\r\n\r\n          {activeTab === 1 && historydata && historydata.length > 0 ? (\r\n            <TableComp\r\n              data={historydata}\r\n              EditAction={edit}\r\n              DeleteAction={remove}\r\n              includedKeys={historyKeys}\r\n              pageCount={pageCount}\r\n              onPageChange={handlePageChange}\r\n              currentPage={currentPage}\r\n              setCurrentPage={setCurrentPage}\r\n              editRouteName=\"/admin/notification-management/send-notification\"\r\n              handleOpenModal={handleOpenModal}\r\n              onRowsSelect={handleBulk}\r\n            />\r\n          ) : (\r\n            activeTab === 1 && (\r\n              <div className=\"\">\r\n                <EmptyTable\r\n                  EditAction={edit}\r\n                  DeleteAction={remove}\r\n                  includedKeys={historyKeys}\r\n                />\r\n                <span className=\"d-flex align-items-center justify-content-center mt-5 pt-5\">\r\n                  No Data Available\r\n                </span>\r\n              </div>\r\n            )\r\n          )}\r\n        </div>\r\n      )}\r\n      <div>\r\n        {\" \"}\r\n        <DeleteModal\r\n          modalOpen={modalVisible.show}\r\n          closeModal={() => setModalVisible({ id: null, show: false })}\r\n          handleDelete={\r\n            deleteId.length > 0 ? handleBulkDelete : handleDeleteItem\r\n          }\r\n          DeleteMessage={\r\n            activeTab === 0\r\n              ? \"Are you sure you want to delete Notification Template?\"\r\n              : \"Are you sure you want to delete Notification History?\"\r\n          }\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NotificationManagementComp;\r\n","import React, { useEffect } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\n// Internal Component\r\nimport NotificationManagementComp from 'component/Dashboard/NotificationManagementComp/NotificationManagementComp';\r\n// Helpers\r\nimport { checkAndReturnViewableComponent, history } from 'helpers';\r\nimport { getadminPrivileges } from \"helpers/privileges\";\r\n\r\nconst NotificationManagement = ({ privilegesData = {} }) => {\r\n  const dispatch = useDispatch();\r\n  const { notificationManagement = {} } = privilegesData || {};\r\n\r\n  useEffect(() => {\r\n    getadminPrivileges(dispatch);\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    const redirectTo = checkAndReturnViewableComponent(privilegesData, notificationManagement);\r\n    if (redirectTo) return history.push(redirectTo?.to);\r\n  }, [privilegesData]);\r\n\r\n  return (\r\n    <div><NotificationManagementComp {...notificationManagement} /> </div>\r\n  )\r\n}\r\n\r\nexport default NotificationManagement","module.exports = __webpack_public_path__ + \"static/media/SuccessImg.4b68588c.svg\";","module.exports = __webpack_public_path__ + \"static/media/ErrorImg.b30f2c03.svg\";","module.exports = __webpack_public_path__ + \"static/media/ReadImg.96474dd0.svg\";","module.exports = __webpack_public_path__ + \"static/media/deleteIcon.b8b189cc.svg\";","module.exports = __webpack_public_path__ + \"static/media/editIcon.d54ed3bb.svg\";","import arrayWithoutHoles from \"./arrayWithoutHoles\";\nimport iterableToArray from \"./iterableToArray\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray\";\nimport nonIterableSpread from \"./nonIterableSpread\";\nexport default function _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableSpread();\n}","import arrayLikeToArray from \"./arrayLikeToArray\";\nexport default function _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return arrayLikeToArray(arr);\n}","export default function _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && Symbol.iterator in Object(iter)) return Array.from(iter);\n}","export default function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}"],"sourceRoot":""}