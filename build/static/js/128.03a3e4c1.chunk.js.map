{"version":3,"sources":["component/Auth/Blogs/BlogsComp.js"],"names":["i","BlogsComp","useForm","mode","register","handleSubmit","errors","control","reset","setError","useState","sample","setSample","urlParams","URLSearchParams","window","location","search","token","get","blogId","getBlogDetails","params","id","getKnowledge","response","status","data","description","console","log","useEffect","history","push","processedHtml","replace","split","className","map","line","index","Fragment","key","dangerouslySetInnerHTML","__html","includes"],"mappings":";oLACA,kmGAAAA,GAAA,wBAAAA,EAAA,sBAAAA,GAAA,iBAAAA,GAAA,ssDAAAA,EAAA,yBAAAA,GAAA,IAAAA,EAAA,uBAAAA,GAAA,4bAAAA,EAAA,yBAAAA,GAAA,IAAAA,EAAA,uBAAAA,GAAA,yhBAAAA,EAAA,yBAAAA,GAAA,IAAAA,EAAA,uBAAAA,GAAA,qGAAAA,EAAA,yBAAAA,GAAA,IAAAA,EAAA,uBAAAA,GAAA,sQA2DeC,UAvDG,WAChB,MAAqEC,YAAQ,CAC3EC,KAAM,aAER,GAHgB,EAARC,SAAsB,EAAZC,aAAoB,EAANC,OAAe,EAAPC,QAAc,EAALC,MAAe,EAARC,SAG5BC,mBAAS,KAAG,mBAAjCC,EAAM,KAAEC,EAAS,KAClBC,EAAY,IAAIC,gBAAgBC,OAAOC,SAASC,QAChDC,EAAQL,EAAUM,IAAI,SACtBC,EAASP,EAAUM,IAAI,MAEvBE,EAAc,uCAAG,wFAIlB,OAJkB,SAEbC,EAAS,CACbC,GAAIH,GACJ,EAAD,OACoBI,uBAAaF,EAAQJ,GAAO,KAAD,EACxB,OADpBO,EAAQ,QACCC,QACXd,EAAkB,OAARa,QAAQ,IAARA,GAAmB,QAAX,EAARA,EAAUE,KAAKA,YAAI,WAAX,EAAR,EAAqBC,aAChC,gDAEDC,QAAQC,IAAI,SAAS,EAAD,IAAK,yDAE5B,kBAZmB,mCAcpBC,qBAAU,WACJb,GAASE,EACXC,IAEAW,UAAQC,KAAK,iBAEd,IAEH,IAAMC,EAAgBvB,EAAOwB,QAAQ,MAAO,QAAQC,MAAM,MAE1D,OACE,yBAAKC,UAAU,OACZH,EAAcI,KAAI,SAACC,EAAMC,GAAK,OAC7B,kBAAC,IAAMC,SAAQ,CAACC,IAAKF,GAClBD,GACC,yBACEI,wBAAyB,CACvBC,OAAQL,EAAKM,SAAS,QAClBN,EAAKJ,QACH,OACA,0CAEFI","file":"static/js/128.03a3e4c1.chunk.js","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { getKnowledge } from \"service/Cms\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { history } from \"helpers\";\r\n\r\nconst BlogsComp = () => {\r\n  const { register, handleSubmit, errors, control, reset, setError } = useForm({\r\n    mode: \"onChange\",\r\n  });\r\n  const [sample, setSample] = useState(\"\");\r\n  const urlParams = new URLSearchParams(window.location.search);\r\n  const token = urlParams.get(\"token\");\r\n  const blogId = urlParams.get(\"id\");\r\n\r\n  const getBlogDetails = async () => {\r\n    try {\r\n      const params = {\r\n        id: blogId,\r\n      };\r\n      let response = await getKnowledge(params, token);\r\n      if (response.status === 200) {\r\n        setSample(response?.data.data?.description);\r\n      }\r\n    } catch (e) {\r\n      console.log(\"e :>> \", e);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (token && blogId) {\r\n      getBlogDetails();\r\n    } else {\r\n      history.push(\"/auth/login\");\r\n    }\r\n  }, []);\r\n\r\n  const processedHtml = sample.replace(/></g, \">\\n<\").split(\"\\n\");\r\n\r\n  return (\r\n    <div className=\"p-5\">\r\n      {processedHtml.map((line, index) => (\r\n        <React.Fragment key={index}>\r\n          {line && (\r\n            <div\r\n              dangerouslySetInnerHTML={{\r\n                __html: line.includes(\"<img\")\r\n                  ? line.replace(\r\n                      \"<img\",\r\n                      '<img style=\"width:100px;height:100px;\"'\r\n                    )\r\n                  : line,\r\n              }}\r\n            />\r\n          )}\r\n        </React.Fragment>\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default BlogsComp;\r\n"],"sourceRoot":""}