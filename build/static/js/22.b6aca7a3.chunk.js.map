{"version":3,"sources":["component/Dashboard/Template Management/index.js","component/common/NormalButton/NormalButton.js","component/common/InputBox/InputBox.js","component/common/DropDown/DropDown.js","component/common/TableComp/TableComp.js","assets/images/ReadImg.svg","assets/images/deleteIcon.svg","assets/images/editIcon.svg"],"names":["i","TemplateManagementComp","useForm","mode","errors","register","handleSubmit","reset","setError","useState","pageCount","setCurrentPage","templateId","status","messagetype","messagetitle","messageDescription","data","searchStaff","useEffect","axios","get","console","log","fetchData","className","type","placeholder","name","Iconic","value","size","style","color","label","onClick","history","push","length","isCheck","EditAction","DeleteAction","includedKeys","onPageChange","page","editRouteName","NormalButton","this","props","id","addBnt","profileCreatNext","profileCreatNext1","profileCreatBack","authButton1","disabled","authButton","loginButton","tableBtn","rightIcon","leftIcon","btnSecondary","profileBtn","outlineBtn","cancel","addProductbtn","Component","InputBox","onChange","maxlength","icons","GB","onWheel","grayedBox","maxLength","Search","ref","defaultValue","event","currentTarget","blur","e","body","target","autoComplete","DropDown","options","isMulti","colourStyles","dropdownIndicator","styles","isClearable","components","IndicatorSeparator","TableComp","ReadAction","handleOpenModal","loading","setLoading","statusColors","active","inactive","open","accepted","inprogress","closed","failed","success","map","key","obj","item","hasOwnProperty","statusKey","toLowerCase","includes","charAt","toUpperCase","slice","src","editIcon","alt","cursor","_id","ReadImg","deleteIcon","previousLabel","nextLabel","selectedPage","selected","containerClassName","previousClassName","nextClassName","pageClassName","breakClassName","activeClassName","module","exports"],"mappings":"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","file":"static/js/22.b6aca7a3.chunk.js","sourcesContent":["import React, { useState, useEffect, Fragment } from \"react\";\r\nimport TableComp from \"../../common/TableComp/TableComp\";\r\nimport axios from \"axios\";\r\nimport InputBox from \"component/common/InputBox/InputBox\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport ReactSelect from \"react-select\";\r\n// import InputBox from \"component/common/InputBox/InputBox\";\r\nimport NormalButton from \"component/common/NormalButton/NormalButton\";\r\nimport \"./style.scss\";\r\nimport { history } from \"helpers\";\r\nimport {BsSearch} from \"react-icons/bs\"\r\nimport DropDown from \"component/common/DropDown/DropDown\";\r\n\r\n\r\nconst TemplateManagementComp = () => {\r\n  const { register, handleSubmit, errors, reset, setError } = useForm({\r\n    mode: \"onChange\",\r\n  });\r\n  const [pageCount, setPageCount] = useState(1);\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const [data, setData] = useState([\r\n    {\r\n      templateId: \"51322\",\r\n      status: \"inactive\",\r\n      messagetype: \"Template Message\",\r\n      messagetitle: \"open source\",\r\n      messageDescription:\"Nemo dolorem eum aliquam non.\"\r\n    },\r\n    {\r\n      templateId: \"51322\",\r\n      status: \"active\",\r\n      messagetype: \"Template Message\",\r\n      messagetitle: \"source\",\r\n      messageDescription:\"Nemo dolorem eum aliquam non.\"\r\n    },\r\n    {\r\n      templateId: \"51322\",\r\n      status: \"active\",\r\n      messagetype: \"Template Message\",\r\n      messagetitle: \"open source\",\r\n      messageDescription:\"Nemo dolorem eum aliquam non.\"\r\n    },\r\n    {\r\n      templateId: \"51322\",\r\n      status: \"active\",\r\n      messagetype: \"Template Message\",\r\n      messagetitle: \" edge\",\r\n      messageDescription:\"Nemo dolorem eum aliquam non.\"\r\n    },\r\n    {\r\n      templateId: \"51322\",\r\n      status: \"active\",\r\n      messagetype: \"Template Message\",\r\n      messagetitle: \"source\",\r\n      messageDescription:\"Nemo dolorem eum aliquam non.\"\r\n    },\r\n  ]);\r\n  const [searchStaff, setSearchStaff] = useState(\"\");\r\n  const includedKeys = [\r\n    {\r\n      label: \"Template Id\",\r\n      value: \"templateId\",\r\n    },\r\n    {\r\n      label: \"Status\",\r\n      value: \"status\",\r\n    },\r\n    {\r\n      label: \"Message Type\",\r\n      value: \"messagetype\",\r\n    },\r\n    {\r\n      label: \"Message Title\",\r\n      value: \"messagetitle\",\r\n    },\r\n    {\r\n      label: \"Message Description\",\r\n      value: \"messageDescription\",\r\n    },\r\n  ];\r\n\r\n  const handlePageChange = (page) => {\r\n    setCurrentPage(page);\r\n  };\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      try {\r\n        const response = await axios.get(\r\n          \"https://jsonplaceholder.typicode.com/posts\"\r\n        );\r\n        // setData(response.data);\r\n      } catch (error) {\r\n        console.log(error);\r\n      }\r\n    };\r\n    fetchData();\r\n  }, []);\r\n  return (\r\n    <Fragment>\r\n      <div className=\"staff_table px-5 pt-2\">\r\n        <p className=\"staff_title m-0\">Template Management</p>\r\n\r\n        <div className=\"row align-items-center px-3\">\r\n          <div className=\"col-md-10 col-12\">\r\n            <div className=\"row align-items-center\">\r\n              <div className=\"col-md-4 p-0 my-4 staff_Search\">\r\n                <InputBox\r\n                  className=\"login_input\"\r\n                  type={\"text\"}\r\n                  placeholder=\"Search by Template Id, Message Title\"\r\n                  errors={errors}\r\n                  name=\"search\"\r\n                  Iconic\r\n                  value={searchStaff}\r\n                  // onChange={(e) => {\r\n                  //   setsearch(e.target.value);\r\n                  //   setactivePage(1);\r\n                  // }}\r\n                />\r\n                <i className=\"search_iconic\"><BsSearch size={18} style={{color : \"#7E7E7E\"}}/></i>\r\n              </div>\r\n              <div className=\"col-md-3\">\r\n               <DropDown\r\n                  placeholder={\"Filter by Message Type\"}\r\n               />\r\n              </div>\r\n\r\n            </div>\r\n          </div>\r\n          <div className=\"col-md-2 col-12 p-0 m-0\">\r\n            <NormalButton\r\n              className=\"loginButton\"\r\n              label={\"Add Template \"}\r\n              onClick={() => history.push(\"/admin/template-management/add-template\")}\r\n            />\r\n          </div>\r\n        </div>\r\n        <div className=\"\">\r\n          {data.length > 0 ? (\r\n             <TableComp\r\n             data={data}\r\n             isCheck={true}\r\n             EditAction={true}\r\n\r\n             DeleteAction={true}\r\n             includedKeys={includedKeys}\r\n             pageCount={pageCount}\r\n             onPageChange={handlePageChange}\r\n             setCurrentPage={setCurrentPage}\r\n             editRouteName={\"/admin/template-management/add-template\"}\r\n           />\r\n          ) : (\r\n            <p className=\"text-center mt-5 fs-15\">No Data Available</p>\r\n          )}\r\n        </div>\r\n        {console.log(data, \"kkhkk\")}\r\n      </div>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default TemplateManagementComp;\r\n","import React, { Component } from \"react\";\r\n// import styles from \"./button.module.scss\";\r\nimport \"./normalButton.scss\";\r\nexport class NormalButton extends Component {\r\n  render() {\r\n    const {\r\n      className = \"\",\r\n      label = \"\",\r\n      onClick,\r\n      id,\r\n      addBnt,\r\n      profileCreatNext,\r\n      profileCreatNext1,\r\n      profileCreatBack,\r\n      authButton1,\r\n      type = \"submit\",\r\n      disabled = false,\r\n      authButton = false,\r\n      loginButton = false,\r\n      tableBtn = false,\r\n      rightIcon = \"\",\r\n      leftIcon=\"\",\r\n      btnSecondary = false,\r\n      profileBtn = false,\r\n      outlineBtn = false,\r\n      cancel =false,\r\n      addProductbtn= false,\r\n    } = this.props;\r\n\r\n    return (\r\n      <div>\r\n        <button\r\n          id={id}\r\n          type={type}\r\n          className={`cursor-pointer \r\n                     ${authButton ? \"authButton\" : \"\"}\r\n                     ${profileCreatNext ? \"profileCreatNext\" : \"\"}\r\n                     ${profileCreatNext1 ? \"profileCreatNext1\" : \"\"}\r\n                     ${authButton1 ? \"authButton1\" : \"\"}\r\n                     ${profileCreatBack ? \"profileCreatBack\" : \"\"}\r\n                     ${loginButton ? \"loginButton\" : \"\"}\r\n                     ${addBnt ? \"addBnt\" : \"\"}\r\n                     ${tableBtn ? \"tableBtn\" : \"\"}\r\n                     ${btnSecondary ? \"btnSecondary\" : \"\"}\r\n                     ${profileBtn ? \"profileBtn\" : \"\"}\r\n                     ${outlineBtn ? \"outlineBtn\" : \"\"}\r\n                     ${cancel? 'cancelBtn ':''}\r\n                     ${addProductbtn? 'addProductbtn ':''}\r\n                   \r\n                     ${className}`}\r\n          onClick={onClick}\r\n          disabled={disabled}\r\n        >\r\n          {leftIcon !== \"\" ? (\r\n            <span className={`btn-left-icon ${leftIcon}`}></span>\r\n          ) : null}\r\n          {label}\r\n          {rightIcon !== \"\" ? (\r\n            <span className={`btn-right-icon ${rightIcon}`}></span>\r\n          ) : null}\r\n        </button>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default NormalButton;\r\n","import React from \"react\";\r\nimport {BsSearch} from \"react-icons/bs\"\r\nimport \"./InputBox.scss\";\r\nconst InputBox = (props) => {\r\n  let {\r\n    placeholder = \"\",\r\n    register = {},\r\n    value = \"\",\r\n    type = \"text\",\r\n    onChange,\r\n    name = \"\",\r\n    maxlength = \"\",\r\n    icons = false,\r\n    GB = false,\r\n    onWheel = \"\",\r\n    grayedBox = false,\r\n    Iconic = false,\r\n    disabled = false,\r\n    maxLength,\r\n    Search = false,\r\n  } = props;\r\n  return (\r\n    <>\r\n    <div className=\"input_head\">\r\n      <input\r\n        disabled={disabled}\r\n        name={name}\r\n        placeholder={placeholder}\r\n        className={\r\n          grayedBox\r\n            ? \"inputBoxGrayed\"\r\n            : Iconic\r\n            ? \"inputBoxStyle1\"\r\n            : \"inputBoxStyle\"\r\n        }\r\n        ref={register}\r\n        defaultValue={value}\r\n        type={type}\r\n        maxLength={maxLength}\r\n        onWheel={(event) => event.currentTarget.blur()}\r\n        onChange={(e) => {\r\n          const body = {\r\n            target: {\r\n              name: e.target.name,\r\n              value: e.target.value,\r\n            },\r\n          };\r\n          if (onChange) onChange(body);\r\n        }}\r\n        autoComplete={\"off\"}\r\n      />\r\n      {Iconic && Search ?  <i className=\"search_icon\"><BsSearch size={18} style={{color : \"#7E7E7E\"}}/></i> : \"\"}\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default InputBox;\r\n","import React from \"react\";\r\nimport ReactSelect from \"react-select\";\r\nimport \"./style.scss\";\r\n\r\nconst DropDown = (props) => {\r\n  const { value, onChange, options, placeholder, isMulti } = props;\r\n\r\n  const colourStyles = {\r\n    dropdownIndicator: (styles) => ({\r\n      ...styles,\r\n      color: \"#000000\",\r\n    }),\r\n  };\r\n\r\n  return (\r\n    <ReactSelect\r\n      isMulti={isMulti}\r\n      value={value}\r\n      onChange={onChange}\r\n      options={options}\r\n      isClearable={false}\r\n      components={{\r\n        IndicatorSeparator: () => null,\r\n      }}\r\n      styles={colourStyles}\r\n      placeholder={placeholder}\r\n    />\r\n  );\r\n};\r\n\r\nexport default DropDown;\r\n","import React, { useState } from \"react\";\r\nimport ReactPaginate from \"react-paginate\";\r\nimport \"./style.scss\";\r\nimport { FaCaretLeft, FaCaretRight } from \"react-icons/fa\";\r\nimport Loader from \"component/common/Loader/index\";\r\nimport { useEffect } from \"react\";\r\nimport moment from \"moment\";\r\nimport editIcon from \"assets/images/editIcon.svg\";\r\nimport deleteIcon from \"assets/images/deleteIcon.svg\";\r\nimport ReadImg from \"assets/images/ReadImg.svg\";\r\nimport { history } from \"helpers\";\r\n\r\nfunction TableComp(props) {\r\n  const {\r\n    data,\r\n    isCheck,\r\n    EditAction,\r\n    DeleteAction,\r\n    ReadAction,\r\n    includedKeys,\r\n    pageCount,\r\n    onPageChange,\r\n    editRouteName,\r\n    setCurrentPage,\r\n    handleOpenModal,\r\n  } = props;\r\n\r\n  console.log(\"data :>> \", data);\r\n\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  const handlePageChange = (selectedPage) => {\r\n    setCurrentPage(selectedPage.selected);\r\n    onPageChange(selectedPage.selected + 1);\r\n  };\r\n\r\n  console.log(\"includedKeys :>> \", includedKeys);\r\n\r\n  // Dynamic colors for Status KeyName\r\n  const statusColors = {\r\n    active: \"#27AE60\",\r\n    inactive: \"#EB5757\",\r\n    open: \"#EB5757\",\r\n    accepted: \"#2F80ED\",\r\n    inprogress: \"#F2C94C\",\r\n    closed: \"#27AE60\",\r\n    failed: \"#EB5757\",\r\n    success: \"#27AE60\",\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (data && data.length > 0) {\r\n      setLoading(false);\r\n    } else {\r\n      setLoading(true);\r\n    }\r\n  }, [data]);\r\n\r\n  return (\r\n    <div className=\"table-container\">\r\n      {loading && (\r\n        <Loader\r\n          loading={loading}\r\n          className=\"d-flex align-items-center justify-content-center\"\r\n        />\r\n      )}\r\n      {!loading && (\r\n        <>\r\n          {data.length === 0 ? (\r\n            <p>No data available</p>\r\n          ) : (\r\n            <>\r\n              <table className=\"data-table\">\r\n                <thead>\r\n                  <tr>\r\n                    {isCheck ? (\r\n                      <th className=\"checkBox_place\">\r\n                        <input type=\"checkbox\" className=\"mt-2 check_box\" />\r\n                      </th>\r\n                    ) : (\r\n                      <></>\r\n                    )}\r\n                    {includedKeys.map((key) => {\r\n                      return (\r\n                        <>\r\n                          <th className=\"absorbing-column\" key={key}>\r\n                            {key.label}\r\n                          </th>\r\n                        </>\r\n                      );\r\n                    })}\r\n\r\n                    {!DeleteAction && !EditAction ? null : !DeleteAction ? (\r\n                      <th className=\"checkBox_place\"></th>\r\n                    ) : (\r\n                      <>\r\n                        <th className=\"checkBox_place\">Actions</th>\r\n                        <th className=\"checkBox_place\"></th>\r\n                      </>\r\n                    )}\r\n                  </tr>\r\n                </thead>\r\n                <tbody>\r\n                  {data.map((obj) => {\r\n                    return (\r\n                      <tr key={obj.id}>\r\n                        {isCheck && (\r\n                          <td className=\"checkBox_place\">\r\n                            <input type=\"checkbox\" className=\"mt-2 check_box\" />\r\n                          </td>\r\n                        )}\r\n                        {includedKeys.map((item) => {\r\n                          const key = item.value;\r\n                          if (obj.hasOwnProperty(key)) {\r\n                            const value = obj[key];\r\n                            const label = item.label;\r\n                            const statusKey = key.toLowerCase();\r\n                            if (statusKey.includes(\"status\")) {\r\n                              const status = value.toLowerCase();\r\n                              const color = statusColors[status] || \"black\";\r\n                              return (\r\n                                <td key={key}>\r\n                                  <span style={{ color }}>\r\n                                    {value.charAt(0).toUpperCase() +\r\n                                      value.slice(1)}\r\n                                  </span>\r\n                                </td>\r\n                              );\r\n                            } else if (statusKey.includes(\"date\")) {\r\n                              return <td key={key}>{value}</td>;\r\n                            } else {\r\n                              return (\r\n                                <td key={key}>\r\n                                  {typeof value === \"boolean\" ? (\r\n                                    value ? (\r\n                                      <span style={{ color: \"#1D9E00\" }}>\r\n                                        Active\r\n                                      </span>\r\n                                    ) : (\r\n                                      <span style={{ color: \"#DD2025\" }}>\r\n                                        InActive\r\n                                      </span>\r\n                                    )\r\n                                  ) : (\r\n                                    value\r\n                                  )}\r\n                                </td>\r\n                              );\r\n                            }\r\n                          }\r\n                          return null;\r\n                        })}\r\n\r\n                        {/* {includedKeys.map((item) => {\r\n                          const key = item.value;\r\n                          if (obj.hasOwnProperty(key)) {\r\n                            const value = obj[key];\r\n                            const label = item.label;\r\n                            const statusKey = key.toLowerCase();\r\n                            if (statusKey.includes(\"status\")) {\r\n                              const status = value.toLowerCase();\r\n                              const color = statusColors[status] || \"black\";\r\n                              return (\r\n                                <td key={key}>\r\n                                  <span style={{ color }}>\r\n                                    {value.charAt(0).toUpperCase() +\r\n                                      value.slice(1)}\r\n                                  </span>\r\n                                </td>\r\n                              );\r\n                            } else {\r\n                              return (\r\n                                <td key={key}>\r\n                                  {typeof value === \"string\" &&\r\n                                  moment(value, moment.ISO_8601).isValid() ? (\r\n                                    moment(value).format(\"MMM DD YYYY hh:mm a\")\r\n                                  ) : typeof value === \"boolean\" ? (\r\n                                    value ? (\r\n                                      <span>True</span>\r\n                                    ) : (\r\n                                      <span>False</span>\r\n                                    )\r\n                                  ) : (\r\n                                    value\r\n                                  )}\r\n                                </td>\r\n                              );\r\n                            }\r\n                          }\r\n                          return null;\r\n                        })} */}\r\n\r\n                        {EditAction && (\r\n                          <td>\r\n                            <img\r\n                              src={editIcon}\r\n                              alt=\"Edit\"\r\n                              style={{ color: \"#B4B4B4\", cursor: \"pointer\" }}\r\n                              onClick={() =>\r\n                                history.push(\r\n                                  `${editRouteName}?Editid=${obj._id}`\r\n                                )\r\n                              }\r\n                            />\r\n                          </td>\r\n                        )}\r\n                        {ReadAction && (\r\n                          <td>\r\n                            <img\r\n                              src={ReadImg}\r\n                              alt=\"read\"\r\n                              style={{ color: \"#B4B4B4\", cursor: \"pointer\" }}\r\n                              onClick={() =>\r\n                                history.push(\r\n                                  `${editRouteName}?Editid=${obj._id}`\r\n                                )\r\n                              }\r\n                            />\r\n                          </td>\r\n                        )}\r\n                        {DeleteAction && (\r\n                          <td onClick={() => handleOpenModal(obj._id)}>\r\n                            <img\r\n                              src={deleteIcon}\r\n                              alt=\"delete\"\r\n                              style={{ color: \"#B4B4B4\", cursor: \"pointer\" }}\r\n                            />\r\n                          </td>\r\n                        )}\r\n                      </tr>\r\n                    );\r\n                  })}\r\n                </tbody>\r\n              </table>\r\n\r\n              {data.length > 0 && (\r\n                <div className=\"my-4\">\r\n                  <ReactPaginate\r\n                    previousLabel={<FaCaretLeft />}\r\n                    nextLabel={<FaCaretRight />}\r\n                    pageCount={pageCount}\r\n                    onPageChange={handlePageChange}\r\n                    containerClassName={\"pagination\"}\r\n                    previousClassName={\"pagination-previous\"}\r\n                    nextClassName={\"pagination-next\"}\r\n                    pageClassName={\"pagination-item\"}\r\n                    breakClassName={\"pagination-item\"}\r\n                    activeClassName={\"active_page\"}\r\n                  />\r\n                </div>\r\n              )}\r\n            </>\r\n          )}\r\n        </>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default TableComp;\r\n","module.exports = __webpack_public_path__ + \"static/media/ReadImg.96474dd0.svg\";","module.exports = __webpack_public_path__ + \"static/media/deleteIcon.b8b189cc.svg\";","module.exports = __webpack_public_path__ + \"static/media/editIcon.d54ed3bb.svg\";"],"sourceRoot":""}