{"version":3,"sources":["component/Auth/Forgetpassword/index.js","pages/Auth/ForgetPassword.js"],"names":["i","Forgetpassword","props","useForm","mode","register","handleSubmit","errors","reset","setError","useState","onSubmit","useDispatch","inputs","history","push","className","src","login_logo","placeholder","Iconic","name","required","pattern","error","emailId","messages","username_icon","to","loginButton","label","loginpage_frame","Forget_Password","localStorage","getItem"],"mappings":";uVACA,kmGAAAA,GAAA,wBAAAA,EAAA,sBAAAA,GAAA,iBAAAA,GAAA,ssDAAAA,EAAA,yBAAAA,GAAA,IAAAA,EAAA,uBAAAA,GAAA,4bAAAA,EAAA,yBAAAA,GAAA,IAAAA,EAAA,uBAAAA,GAAA,yhBAAAA,EAAA,yBAAAA,GAAA,IAAAA,EAAA,uBAAAA,GAAA,qGAAAA,EAAA,yBAAAA,GAAA,IAAAA,EAAA,uBAAAA,GAAA,sQA+HeC,UApGQ,SAACC,GAAiC,IACvD,EAA4DC,YAAQ,CAClEC,KAAM,aADAC,EAAQ,EAARA,SAAUC,EAAY,EAAZA,aAAcC,EAAM,EAANA,OAGhC,GAH6C,EAALC,MAAe,EAARC,SAGjBC,mBAAS,KAAG,mBAC1C,GADc,KAAY,KACMA,mBAAS,KAAG,mBAGtCC,GAHS,KAAa,KACXC,cAEH,uCAAG,WAAOC,GAAM,iEAsB5BC,UAAQC,KAAK,uBAAuB,2CACrC,gBAvBa,uCAwBd,OACE,0BAAMJ,SAAUL,EAAaK,IAC3B,yBAAKK,UAAU,cACb,yBAAKA,UAAU,mBACb,yBAAKA,UAAU,QACb,yBAAKA,UAAU,0BACb,yBAAKA,UAAU,kBACb,yBAAKA,UAAU,yBACb,yBAAKA,UAAU,kBAAkBC,IAAKC,MAEtC,wBAAIF,UAAU,UAAS,mBAIvB,uBAAGA,UAAU,eAAc,wDAG7B,yBAAKA,UAAU,WACb,kBAAC,UAAQ,CACPA,UAAU,cACVG,YAAY,WACZC,QAAM,EACNb,OAAQA,EACRc,KAAK,UACLhB,SAAUA,EAAS,CACjBiB,UAAU,EACVC,QAAS,mBAGb,kBAAC,UAAgB,CACfC,MAAOjB,EAAOkB,QACdC,SAAU,CACRJ,SAAU,sBACVC,QAAS,qBAGb,0BAAMP,UAAU,gBACd,yBAAKC,IAAKU,QAId,yBAAKX,UAAU,WACb,kBAAC,IAAI,CAACY,GAAG,eACP,0BAAMZ,UAAU,UAAS,kBAE3B,yBAAKA,UAAU,mBAEb,kBAAC,UAAY,CAACa,aAAW,EAACC,MAAM,wBAQxC,yBAAKd,UAAU,mCACb,yBAAKA,UAAU,SACf,yBAAKA,UAAU,YACb,yBAAKA,UAAU,mBAAmBC,IAAKc,c,iCCtHvD,qDAgBeC,UAXS,WAEtB,OAAIC,aAAaC,QAAQ,SAAiB,kBAAC,WAAQ,CAACN,GAAI,WAGtD,6BACE,kBAAC,UAAc","file":"static/js/101.633a4856.chunk.js","sourcesContent":["import { useForm } from \"react-hook-form\";\r\nimport React, { useRef, useState } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { Toast } from \"service/toast\";\r\nimport { Link } from \"react-router-dom\";\r\n// Styles\r\nimport \"../Login/style.scss\";\r\nimport instagram_logo from \"../../../assets/images/instagram_icon.svg\";\r\nimport facebook_logo from \"../../../assets/images/facebook_icon.svg\";\r\nimport twitter_logo from \"../../../assets/images/twitter_icon.svg\";\r\nimport username_icon from \"../../../assets/images/user.svg\";\r\nimport login_logo from \"../../../assets/images/findostLogo.svg\";\r\nimport password_icon from \"../../../assets/images/lock.svg\";\r\nimport loginpage_frame from \"../../../assets/images/Frame.svg\";\r\n// Internal components\r\nimport LoginInput from \"component/common/LoginInput\";\r\nimport FormErrorMessage from \"component/common/ErrorMessage\";\r\nimport NormalButton from \"component/common/NormalButton/NormalButton\";\r\n\r\n// Service\r\nimport { SignInAPI } from \"service/Auth\";\r\n\r\n// Helpers\r\nimport { history } from \"helpers\";\r\nimport Privileges from \"helpers/privileges\";\r\nimport { Encrypt } from \"helpers\";\r\nimport InputBox from \"component/common/InputBox/InputBox\";\r\n\r\nconst Forgetpassword = (props, type = \"text\", label) => {\r\n  const { register, handleSubmit, errors, reset, setError } = useForm({\r\n    mode: \"onChange\",\r\n  });\r\n  const [emailId, setemailId] = useState(\"\");\r\n  const [password, setpassword] = useState(\"\");\r\n  const dispatch = useDispatch();\r\n\r\n  const onSubmit = async (inputs) => {\r\n    // const { data: { status, data } = {} } = await SignInAPI({\r\n    //   emailId: inputs?.emailId,\r\n    //   password: Encrypt(inputs?.password),\r\n    // });\r\n\r\n    // if (status !== 200 || !data?.token) {\r\n    //   if (data && /email/gi.test(data))\r\n    //     setError(\"emailId\", { type: \"invalid\", shouldFocus: true });\r\n    //   if (data && /password/gi.test(data))\r\n    //     setError(\"password\", { type: \"passowordNotMatch\", shouldFocus: true });\r\n\r\n    //   if (status === 400 && data) {\r\n    //     Toast({ type: \"error\", message: data });\r\n    //   }\r\n    //   return;\r\n    // }\r\n\r\n    // localStorage.removeItem(\"token\");\r\n    // localStorage.setItem(\"token\", data?.token);\r\n    // await dispatch(Privileges());\r\n    // reset({ emailId: \"\", password: \"\" });\r\n    history.push(\"/auth/resetpassword\");\r\n  };\r\n  return (\r\n    <form onSubmit={handleSubmit(onSubmit)}>\r\n      <div className=\"login_page\">\r\n        <div className=\"container-fluid\">\r\n          <div className=\"row \">\r\n            <div className=\" login_filed col-lg-5 \">\r\n              <div className=\"row page  mt-3\">\r\n                <div className=\"login_logo col-lg-12 \">\r\n                  <img className=\"mx-auto d-block\" src={login_logo}></img>\r\n\r\n                  <h6 className=\"login \">Forgot password</h6>\r\n                  {/* <h6 className=\"login \">Reset Password </h6> */}\r\n                  {/* <h6 className=\"login \">Login </h6> */}\r\n\r\n                  <p className=\"text-center\">Please provide registed email id to send reset link</p>\r\n                </div>\r\n\r\n                <div className=\"userbox\">\r\n                  <InputBox\r\n                    className=\"login_input\"\r\n                    placeholder=\"Email Id\"\r\n                    Iconic\r\n                    errors={errors}\r\n                    name=\"emailId\"\r\n                    register={register({\r\n                      required: true,\r\n                      pattern: /\\S+@\\S+\\.\\S+/,\r\n                    })}\r\n                  />\r\n                  <FormErrorMessage\r\n                    error={errors.emailId}\r\n                    messages={{\r\n                      required: \"Mail ID is required\",\r\n                      pattern: \"Invalid Mail ID\",\r\n                    }}\r\n                  />\r\n                  <span className=\"userbox_icon\">\r\n                    <img src={username_icon}></img>\r\n                  </span>\r\n                </div>\r\n\r\n                <div className=\"forget \">\r\n                  <Link to=\"/auth/login\">\r\n                    <span className=\"forget\">Login Instead</span>\r\n                  </Link>\r\n                  <div className=\"login_btn  mt-3\">\r\n                    {/* <NormalButton loginButton label=\"Login\" /> */}\r\n                    <NormalButton loginButton label=\"Send Reset Link\" />\r\n                    {/* <NormalButton loginButton label=\"confirm\" /> */}\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n\r\n            \r\n            <div className=\"login_frame ms-4 ps-5  col-lg-7\">\r\n              <div className=\"clip\"></div>\r\n              <div className=\"bg_slide\">\r\n                <img className=\" d-block mx-auto\" src={loginpage_frame}></img>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default Forgetpassword;\r\n","import React from \"react\";\r\nimport { Redirect } from 'react-router-dom';\r\n\r\nimport LoginComp from \"component/Auth/Login\";\r\nimport Forgetpassword from 'component/Auth/Forgetpassword'\r\nconst Forget_Password = () => {\r\n\r\n  if (localStorage.getItem('token')) return <Redirect to={'/admin'} />;\r\n\r\n  return (\r\n    <div>\r\n      <Forgetpassword />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Forget_Password;"],"sourceRoot":""}