{"version":3,"sources":["component/common/InputBox/InputBox.js","component/common/DropDown/DropDown.js","component/common/TableComp/TableComp.js","component/Dashboard/ClientsFamily/ClientsFamily.js","pages/Dashboard/ClientsFamilyPage/ClientsFamilyPage.js","assets/images/ReadImg.svg","assets/images/deleteIcon.svg","assets/images/editIcon.svg"],"names":["InputBox","props","placeholder","register","value","type","onChange","name","maxlength","icons","GB","onWheel","grayedBox","Iconic","disabled","maxLength","Search","className","ref","defaultValue","event","currentTarget","blur","e","body","target","autoComplete","size","style","color","DropDown","options","isMulti","colourStyles","dropdownIndicator","styles","isClearable","components","IndicatorSeparator","TableComp","data","isCheck","EditAction","DeleteAction","ReadAction","includedKeys","pageCount","onPageChange","editRouteName","setCurrentPage","handleOpenModal","console","log","useState","loading","setLoading","statusColors","active","inactive","open","accepted","inprogress","closed","failed","success","useEffect","length","map","key","label","obj","id","item","hasOwnProperty","statusKey","toLowerCase","includes","status","charAt","toUpperCase","slice","src","editIcon","alt","cursor","onClick","history","push","_id","ReadImg","deleteIcon","previousLabel","nextLabel","selectedPage","selected","containerClassName","previousClassName","nextClassName","pageClassName","breakClassName","activeClassName","ClientsFamily","clientId","clientName","emailId","dateOfBirth","relativeName","relationship","page","ClientsFamilyPage","module","exports"],"mappings":"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","file":"static/js/72.5003c024.chunk.js","sourcesContent":["import React from \"react\";\r\nimport {BsSearch} from \"react-icons/bs\"\r\nimport \"./InputBox.scss\";\r\nconst InputBox = (props) => {\r\n  let {\r\n    placeholder = \"\",\r\n    register = {},\r\n    value = \"\",\r\n    type = \"text\",\r\n    onChange,\r\n    name = \"\",\r\n    maxlength = \"\",\r\n    icons = false,\r\n    GB = false,\r\n    onWheel = \"\",\r\n    grayedBox = false,\r\n    Iconic = false,\r\n    disabled = false,\r\n    maxLength,\r\n    Search = false,\r\n  } = props;\r\n  return (\r\n    <>\r\n    <div className=\"input_head\">\r\n      <input\r\n        disabled={disabled}\r\n        name={name}\r\n        placeholder={placeholder}\r\n        className={\r\n          grayedBox\r\n            ? \"inputBoxGrayed\"\r\n            : Iconic\r\n            ? \"inputBoxStyle1\"\r\n            : \"inputBoxStyle\"\r\n        }\r\n        ref={register}\r\n        defaultValue={value}\r\n        type={type}\r\n        maxLength={maxLength}\r\n        onWheel={(event) => event.currentTarget.blur()}\r\n        onChange={(e) => {\r\n          const body = {\r\n            target: {\r\n              name: e.target.name,\r\n              value: e.target.value,\r\n            },\r\n          };\r\n          if (onChange) onChange(body);\r\n        }}\r\n        autoComplete={\"off\"}\r\n      />\r\n      {Iconic && Search ?  <i className=\"search_icon\"><BsSearch size={18} style={{color : \"#7E7E7E\"}}/></i> : \"\"}\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default InputBox;\r\n","import React from \"react\";\r\nimport ReactSelect from \"react-select\";\r\nimport \"./style.scss\";\r\n\r\nconst DropDown = (props) => {\r\n  const { value, onChange, options, placeholder, isMulti } = props;\r\n\r\n  const colourStyles = {\r\n    dropdownIndicator: (styles) => ({\r\n      ...styles,\r\n      color: \"#000000\",\r\n    }),\r\n  };\r\n\r\n  return (\r\n    <ReactSelect\r\n      isMulti={isMulti}\r\n      value={value}\r\n      onChange={onChange}\r\n      options={options}\r\n      isClearable={false}\r\n      components={{\r\n        IndicatorSeparator: () => null,\r\n      }}\r\n      styles={colourStyles}\r\n      placeholder={placeholder}\r\n    />\r\n  );\r\n};\r\n\r\nexport default DropDown;\r\n","import React, { useState } from \"react\";\r\nimport ReactPaginate from \"react-paginate\";\r\nimport \"./style.scss\";\r\nimport { FaCaretLeft, FaCaretRight } from \"react-icons/fa\";\r\nimport Loader from \"component/common/Loader/index\";\r\nimport { useEffect } from \"react\";\r\nimport moment from \"moment\";\r\nimport editIcon from \"assets/images/editIcon.svg\";\r\nimport deleteIcon from \"assets/images/deleteIcon.svg\";\r\nimport ReadImg from \"assets/images/ReadImg.svg\";\r\nimport { history } from \"helpers\";\r\n\r\nfunction TableComp(props) {\r\n  const {\r\n    data,\r\n    isCheck,\r\n    EditAction,\r\n    DeleteAction,\r\n    ReadAction,\r\n    includedKeys,\r\n    pageCount,\r\n    onPageChange,\r\n    editRouteName,\r\n    setCurrentPage,\r\n    handleOpenModal,\r\n  } = props;\r\n\r\n  console.log(\"data :>> \", data);\r\n\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  const handlePageChange = (selectedPage) => {\r\n    setCurrentPage(selectedPage.selected);\r\n    onPageChange(selectedPage.selected + 1);\r\n  };\r\n\r\n  console.log(\"includedKeys :>> \", includedKeys);\r\n\r\n  // Dynamic colors for Status KeyName\r\n  const statusColors = {\r\n    active: \"#27AE60\",\r\n    inactive: \"#EB5757\",\r\n    open: \"#EB5757\",\r\n    accepted: \"#2F80ED\",\r\n    inprogress: \"#F2C94C\",\r\n    closed: \"#27AE60\",\r\n    failed: \"#EB5757\",\r\n    success: \"#27AE60\",\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (data && data.length > 0) {\r\n      setLoading(false);\r\n    } else {\r\n      setLoading(true);\r\n    }\r\n  }, [data]);\r\n\r\n  return (\r\n    <div className=\"table-container\">\r\n      {loading && (\r\n        <Loader\r\n          loading={loading}\r\n          className=\"d-flex align-items-center justify-content-center\"\r\n        />\r\n      )}\r\n      {!loading && (\r\n        <>\r\n          {data.length === 0 ? (\r\n            <p>No data available</p>\r\n          ) : (\r\n            <>\r\n              <table className=\"data-table\">\r\n                <thead>\r\n                  <tr>\r\n                    {isCheck ? (\r\n                      <th className=\"checkBox_place\">\r\n                        <input type=\"checkbox\" className=\"mt-2 check_box\" />\r\n                      </th>\r\n                    ) : (\r\n                      <></>\r\n                    )}\r\n                    {includedKeys.map((key) => {\r\n                      return (\r\n                        <>\r\n                          <th className=\"absorbing-column\" key={key}>\r\n                            {key.label}\r\n                          </th>\r\n                        </>\r\n                      );\r\n                    })}\r\n\r\n                    {!DeleteAction && !EditAction ? null : !DeleteAction ? (\r\n                      <th className=\"checkBox_place\"></th>\r\n                    ) : (\r\n                      <>\r\n                        <th className=\"checkBox_place\">Actions</th>\r\n                        <th className=\"checkBox_place\"></th>\r\n                      </>\r\n                    )}\r\n                  </tr>\r\n                </thead>\r\n                <tbody>\r\n                  {data.map((obj) => {\r\n                    return (\r\n                      <tr key={obj.id}>\r\n                        {isCheck && (\r\n                          <td className=\"checkBox_place\">\r\n                            <input type=\"checkbox\" className=\"mt-2 check_box\" />\r\n                          </td>\r\n                        )}\r\n                        {includedKeys.map((item) => {\r\n                          const key = item.value;\r\n                          if (obj.hasOwnProperty(key)) {\r\n                            const value = obj[key];\r\n                            const label = item.label;\r\n                            const statusKey = key.toLowerCase();\r\n                            if (statusKey.includes(\"status\")) {\r\n                              const status = value.toLowerCase();\r\n                              const color = statusColors[status] || \"black\";\r\n                              return (\r\n                                <td key={key}>\r\n                                  <span style={{ color }}>\r\n                                    {value.charAt(0).toUpperCase() +\r\n                                      value.slice(1)}\r\n                                  </span>\r\n                                </td>\r\n                              );\r\n                            } else if (statusKey.includes(\"date\")) {\r\n                              return <td key={key}>{value}</td>;\r\n                            } else {\r\n                              return (\r\n                                <td key={key}>\r\n                                  {typeof value === \"boolean\" ? (\r\n                                    value ? (\r\n                                      <span style={{ color: \"#1D9E00\" }}>\r\n                                        Active\r\n                                      </span>\r\n                                    ) : (\r\n                                      <span style={{ color: \"#DD2025\" }}>\r\n                                        InActive\r\n                                      </span>\r\n                                    )\r\n                                  ) : (\r\n                                    value\r\n                                  )}\r\n                                </td>\r\n                              );\r\n                            }\r\n                          }\r\n                          return null;\r\n                        })}\r\n\r\n                        {/* {includedKeys.map((item) => {\r\n                          const key = item.value;\r\n                          if (obj.hasOwnProperty(key)) {\r\n                            const value = obj[key];\r\n                            const label = item.label;\r\n                            const statusKey = key.toLowerCase();\r\n                            if (statusKey.includes(\"status\")) {\r\n                              const status = value.toLowerCase();\r\n                              const color = statusColors[status] || \"black\";\r\n                              return (\r\n                                <td key={key}>\r\n                                  <span style={{ color }}>\r\n                                    {value.charAt(0).toUpperCase() +\r\n                                      value.slice(1)}\r\n                                  </span>\r\n                                </td>\r\n                              );\r\n                            } else {\r\n                              return (\r\n                                <td key={key}>\r\n                                  {typeof value === \"string\" &&\r\n                                  moment(value, moment.ISO_8601).isValid() ? (\r\n                                    moment(value).format(\"MMM DD YYYY hh:mm a\")\r\n                                  ) : typeof value === \"boolean\" ? (\r\n                                    value ? (\r\n                                      <span>True</span>\r\n                                    ) : (\r\n                                      <span>False</span>\r\n                                    )\r\n                                  ) : (\r\n                                    value\r\n                                  )}\r\n                                </td>\r\n                              );\r\n                            }\r\n                          }\r\n                          return null;\r\n                        })} */}\r\n\r\n                        {EditAction && (\r\n                          <td>\r\n                            <img\r\n                              src={editIcon}\r\n                              alt=\"Edit\"\r\n                              style={{ color: \"#B4B4B4\", cursor: \"pointer\" }}\r\n                              onClick={() =>\r\n                                history.push(\r\n                                  `${editRouteName}?Editid=${obj._id}`\r\n                                )\r\n                              }\r\n                            />\r\n                          </td>\r\n                        )}\r\n                        {ReadAction && (\r\n                          <td>\r\n                            <img\r\n                              src={ReadImg}\r\n                              alt=\"read\"\r\n                              style={{ color: \"#B4B4B4\", cursor: \"pointer\" }}\r\n                              onClick={() =>\r\n                                history.push(\r\n                                  `${editRouteName}?Editid=${obj._id}`\r\n                                )\r\n                              }\r\n                            />\r\n                          </td>\r\n                        )}\r\n                        {DeleteAction && (\r\n                          <td onClick={() => handleOpenModal(obj._id)}>\r\n                            <img\r\n                              src={deleteIcon}\r\n                              alt=\"delete\"\r\n                              style={{ color: \"#B4B4B4\", cursor: \"pointer\" }}\r\n                            />\r\n                          </td>\r\n                        )}\r\n                      </tr>\r\n                    );\r\n                  })}\r\n                </tbody>\r\n              </table>\r\n\r\n              {data.length > 0 && (\r\n                <div className=\"my-4\">\r\n                  <ReactPaginate\r\n                    previousLabel={<FaCaretLeft />}\r\n                    nextLabel={<FaCaretRight />}\r\n                    pageCount={pageCount}\r\n                    onPageChange={handlePageChange}\r\n                    containerClassName={\"pagination\"}\r\n                    previousClassName={\"pagination-previous\"}\r\n                    nextClassName={\"pagination-next\"}\r\n                    pageClassName={\"pagination-item\"}\r\n                    breakClassName={\"pagination-item\"}\r\n                    activeClassName={\"active_page\"}\r\n                  />\r\n                </div>\r\n              )}\r\n            </>\r\n          )}\r\n        </>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default TableComp;\r\n","import React, { useState } from \"react\";\r\nimport \"./style.scss\";\r\nimport InputBox from \"component/common/InputBox/InputBox\";\r\nimport DropDown from \"component/common/DropDown/DropDown\";\r\nimport TableComp from \"component/common/TableComp/TableComp\";\r\nconst ClientsFamily = () => {\r\n  const [pageCount, setPageCount] = useState(1);\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const [data, setData] = useState([\r\n    {\r\n      clientId: \"51322\",\r\n\r\n      clientName: \"Adrienne_Sauer\",\r\n      emailId: \"Rowland_Nader@gmail.com\",\r\n      dateOfBirth: \" Mar 20 1990\",\r\n\r\n      relativeName: \"Maggie Metz\",\r\n      relationship: \"married\",\r\n    },\r\n    {\r\n      clientId: \"51322\",\r\n\r\n      clientName: \"Ettie.OReilly97\",\r\n      emailId: \"Rowland_Nader@gmail.com\",\r\n      dateOfBirth: \"Mar 20 1990\",\r\n\r\n      relativeName: \"Maggie\",\r\n      relationship: \"married\",\r\n    },\r\n    {\r\n      clientId: \"51322\",\r\n\r\n      clientName: \"Adrienne_Sauer\",\r\n      emailId: \"Rowland_Nader@gmail.com\",\r\n      dateOfBirth: \"Mar 20 1990\",\r\n\r\n      relativeName: \" Metz\",\r\n      relationship: \"married\",\r\n    },\r\n    {\r\n      clientId: \"51322\",\r\n\r\n      clientName: \"Carlie_Conn\",\r\n      emailId: \"Rowland_Nader@gmail.com\",\r\n      dateOfBirth: \" Mar 20 1990\",\r\n\r\n      relativeName: \"Rosie West\",\r\n      relationship: \"married\",\r\n    },\r\n    {\r\n      clientId: \"51322\",\r\n\r\n      clientName: \"Adrienne_Sauer\",\r\n      emailId: \"Rowland_Nader@gmail.com\",\r\n      dateOfBirth: \"Mar 20 1990\",\r\n\r\n      relativeName: \"Rosie \",\r\n      relationship: \"married\",\r\n    },\r\n  ]);\r\n  const includedKeys = [\r\n    {\r\n      label: \"Client Id\",\r\n      value: \"clientId\",\r\n    },\r\n    {\r\n      label: \"Client Name\",\r\n      value: \"clientName\",\r\n    },\r\n    {\r\n      label: \"Email Id\",\r\n      value: \"emailId\",\r\n    },\r\n    {\r\n      label: \"Date of Birth\",\r\n      value: \"dateOfBirth\",\r\n    },\r\n    {\r\n      label: \"Relative Name\",\r\n      value: \"relativeName\",\r\n    },\r\n    {\r\n      label: \"Relationship\",\r\n      value: \"relationship\",\r\n    },\r\n  ];\r\n  const handlePageChange = (page) => {\r\n    setCurrentPage(page);\r\n  };\r\n\r\n  return (\r\n    <div className=\"px-5 py-3 clients_family\">\r\n      <h6>Client’s Family</h6>\r\n      <div className=\"row align-items-center\">\r\n        <div className=\"col-4\">\r\n          <InputBox\r\n            className=\"login_input Notification_input\"\r\n            type={\"text\"}\r\n            placeholder=\"Search by Id, Username, Email\"\r\n            name=\"search\"\r\n            Iconic\r\n            Search\r\n            // value={search}\r\n            // onChange={(e) => {\r\n            //   setsearch(e.target.value);\r\n            //   setactivePage(1);\r\n            // }}\r\n          />\r\n        </div>\r\n        <div className=\"col-2\">\r\n          <DropDown\r\n            // value={value}\r\n            placeholder=\"Filter by Role\"\r\n            // onChange={(e) => {}}\r\n            // options={options}\r\n          />\r\n        </div>\r\n        <div className=\"col-2\">\r\n          <DropDown\r\n            // value={value}\r\n            placeholder=\"Filter by Status\"\r\n            // onChange={(e) => {}}\r\n            // options={options}\r\n          />\r\n        </div>\r\n      </div>\r\n      <div className=\" mt-4 p-3\">\r\n        {data.length > 0 ? (\r\n          <TableComp\r\n            data={data}\r\n            isCheck={true}\r\n            EditAction={true}\r\n            DeleteAction={false}\r\n            includedKeys={includedKeys}\r\n            pageCount={pageCount}\r\n            onPageChange={handlePageChange}\r\n            setCurrentPage={setCurrentPage}\r\n            editRouteName={\"/admin/clients-family/edit-client\"}\r\n          />\r\n        ) : (\r\n          <p className=\"text-center mt-5 fs-15\">No Data Available</p>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ClientsFamily;\r\n","import React from \"react\";\r\nimport ClientFamily from \"component/Dashboard/ClientsFamily/ClientsFamily\";\r\n\r\nconst ClientsFamilyPage = () => {\r\n  return (\r\n    <div>\r\n      <ClientFamily />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ClientsFamilyPage;\r\n","module.exports = __webpack_public_path__ + \"static/media/ReadImg.96474dd0.svg\";","module.exports = __webpack_public_path__ + \"static/media/deleteIcon.b8b189cc.svg\";","module.exports = __webpack_public_path__ + \"static/media/editIcon.d54ed3bb.svg\";"],"sourceRoot":""}