{"version":3,"sources":["component/common/CheckBoxes/index.js","component/common/CheckBoxes/CheckBox.js","component/common/Icons.js","component/common/CheckBoxes/style.module.scss"],"names":["CheckBoxes","props","initialState","options","map","option","multiselect","value","includes","status","useState","checkBoxstatus","setCheckBoxStatus","onClickHandler","data","checkbox","filter","undefined","onSetValues","type","name","length","parent","subparent","ailment","isChanged","find","onFocus","useEffect","key","onClick","bind","isStroke","icon","label","CheckBox","className","style","radio","btn","stroked","active","children","circleLable","fontSize","Icon","module","exports"],"mappings":"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","file":"static/js/33.e43833ee.chunk.js","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\n\r\nimport CheckBox from \"./CheckBox\";\r\nimport Icon from \"../Icons\";\r\n\r\nconst CheckBoxes = props => {\r\n  const initialState = props?.options?.map(option => {\r\n    if (props.multiselect && props?.value?.includes(option.value))\r\n      return { ...option, status: true };\r\n    else if (props.value === option.value) {\r\n      return { ...option, status: true };\r\n    }\r\n    return option;\r\n  });\r\n  const [checkBoxstatus, setCheckBoxStatus] = useState(initialState || []);\r\n\r\n  useEffect(() => {\r\n    setCheckBoxStatus(initialState);\r\n  }, [props?.options?.[0]?.status, props.value]);\r\n\r\n  function onClickHandler(value) {\r\n    const data = checkBoxstatus.map(checkbox => {\r\n      if (value === checkbox.value && (!checkbox.status || props.multiselect)) {\r\n        return { ...checkbox, status: !checkbox.status };\r\n      } else if (value !== checkbox.value) {\r\n        if (props.multiselect) return checkbox;\r\n        return { ...checkbox, status: false };\r\n      } else {\r\n        return checkbox;\r\n      }\r\n    });\r\n    setCheckBoxStatus(data);\r\n\r\n    if (props.multiselect) {\r\n      const checkbox = data\r\n        .filter(checkbox => checkbox.status == true)\r\n        ?.map(checkbox =>\r\n          ![undefined, null].includes(checkbox.value) ? checkbox.value : null\r\n        );\r\n      props.onSetValues({\r\n        type: \"set\",\r\n        name: props.name,\r\n        value: checkbox?.length > 0 ? checkbox : null,\r\n        parent: props?.parent,\r\n        subparent: props?.subparent,\r\n        ailment: props?.ailment,\r\n        isChanged: true,\r\n      });\r\n    } else {\r\n      const checkbox = data.find(checkbox => checkbox.value == value);\r\n      if (checkbox)\r\n        props.onSetValues({\r\n          type: \"set\",\r\n          name: props.name,\r\n          value: checkbox?.value,\r\n          parent: props?.parent,\r\n          ailment: props?.ailment,\r\n          isChanged: true,\r\n        });\r\n    }\r\n    props?.onFocus && props.onFocus();\r\n  }\r\n\r\n  return (\r\n    <>\r\n      {checkBoxstatus.length > 0 &&\r\n        checkBoxstatus.map(checkbox => {\r\n          return (\r\n            <>\r\n              <CheckBox\r\n                key={checkbox?.value}\r\n                {...checkbox}\r\n                onClick={onClickHandler.bind(null, checkbox.value)}\r\n                isStroke={!!checkbox.isStroke}\r\n              >\r\n                {checkbox?.icon ? (\r\n                  <Icon icon={checkbox.icon} />\r\n                ) : (\r\n                  <span>{checkbox.label}</span>\r\n                )}\r\n              </CheckBox>\r\n            </>\r\n          );\r\n        })}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default CheckBoxes;\r\n","import React from 'react'\r\n\r\nimport style from './style.module.scss'\r\n\r\nconst CheckBox = props => {\r\n    return (\r\n        <span {...props} className={`${props.icon ? style.radio : style.btn} ${props.isStroke && style.stroked} ${props.status ? style.active : ''}`}\r\n        >\r\n            {props.children}\r\n            {props.icon && <span className={style.circleLable} style={{ fontSize: props.fontSize }}>{props.label}</span>}\r\n        </span>\r\n    )\r\n}\r\n\r\nexport default CheckBox;","import React from \"react\";\r\n\r\n// import { ReactComponent as Male } from \"assets/icons/male.svg\";\r\n// import { ReactComponent as Female } from \"assets/icons/female.svg\";\r\n\r\nconst Icon = props => {\r\n  // switch (props.icon) {\r\n  //   case \"male\":\r\n  //     return <Male />;\r\n  //   case \"female\":\r\n  //     return <Female />;\r\n  //   case \"trans\":\r\n  //     return <Female />;\r\n  //   case \"none\":\r\n  //     return <Female />;\r\n  //   default:\r\n  //     return <></>;\r\n  // }\r\n};\r\n\r\nexport default Icon;\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"radio\":\"style_radio__3mLDi\",\"stroked\":\"style_stroked__8MLgn\",\"active\":\"style_active__1j_dj\",\"circleLable\":\"style_circleLable__qL8oy\",\"btn\":\"style_btn__16ZDw\",\"fs-1\":\"style_fs-1__Qrjdc\"};"],"sourceRoot":""}