{"version":3,"sources":["component/common/NormalButton/NormalButton.js","component/common/InputBox/InputBox.js","component/common/TableComp/TableComp.js","component/common/DeleteModal/DeleteModal.js","service/Communication.js","component/Dashboard/NotificationManagementComp/NotificationManagementComp.js","pages/Dashboard/NotificationManagement/NotificationManagement.js","assets/images/SuccessImg.svg","assets/images/ReadImg.svg","assets/images/deleteIcon.svg","assets/images/editIcon.svg","assets/images/ErrorImg.svg","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithoutHoles.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableSpread.js"],"names":["NormalButton","this","props","className","label","onClick","id","addBnt","profileCreatNext","profileCreatNext1","profileCreatBack","authButton1","type","disabled","authButton","loginButton","tableBtn","rightIcon","leftIcon","btnSecondary","profileBtn","outlineBtn","cancel","addProductbtn","Component","InputBox","placeholder","register","value","onChange","name","maxlength","icons","GB","onWheel","grayedBox","Iconic","maxLength","Search","ref","defaultValue","event","currentTarget","blur","e","body","target","autoComplete","size","style","color","TableComp","data","isCheck","EditAction","DeleteAction","ReadAction","includedKeys","pageCount","onPageChange","editRouteName","setCurrentPage","handleOpenModal","currentPage","onRowsSelect","console","log","useState","selectedRows","setSelectedRows","statusColors","active","inactive","open","accepted","inprogress","closed","failed","success","updatedRows","length","map","obj","_id","checked","key","rowId","includes","filter","handleRowSelect","item","hasOwnProperty","statusKey","toLowerCase","status","charAt","toUpperCase","slice","moment","isValid","format","test","textOnlyValue","replace","src","editIcon","alt","cursor","localStorage","removeItem","setItem","history","push","ReadImg","deleteIcon","previousLabel","nextLabel","selectedPage","selected","forcePage","containerClassName","previousClassName","nextClassName","pageClassName","breakClassName","activeClassName","DeleteModal","DeleteMessage","modalOpen","closeModal","handleDelete","centered","closable","ErrorImg","i","getNotificationTemplateList","params","axios","method","url","endpoints","communication","NOTIFICATION_TEMPLATE_LIST","headers","Authorization","getItem","request","addNotificationTemplate","NOTIFICATION_TEMPLATE_CREATE","catch","axiosErrorHandler","getNotificationTemplate","NOTIFICATION_TEMPLATE_GET","deleteNotificationTemplate","NOTIFICATION_TEMPLATE_DELETE","bulkDeleteNotificationTemplate","updateNotificationTemplate","NOTIFICATION_TEMPLATE_UPDATE","getNotificationHistoryList","NOTIFICATION_HISTORY_LIST","addNotificationHistory","NOTIFICATION_HISTORY_CREATE","getNotificationHistory","NOTIFICATION_HISTORY_GET","deleteNotificationHistory","NOTIFICATION_HISTORY_DELETE","BulkDeleteNotificationHistory","updateNotificationHistory","NOTIFICATION_HISTORY_UPDATE","NotificationManagementComp","create","edit","view","remove","activeTab","setActiveTab","search","setSearch","templatedata","setTemplateData","historydata","setHistoryData","setPageCount","show","modalVisible","setModalVisible","isLoading","setIsLoading","bulkDelete","setBulkDelete","deleteId","handleTab","tab","tabValue","URL","document","searchParams","get","getTemplateList","page","limit","response","list","pageMeta","getHistoryList","handleDeleteItem","notificationTemplateId","Toast","message","notificationId","handlePageChange","useEffect","handleSearchChange","useCallback","debounceFunction","handleBulk","Object","values","handleBulkDelete","ids","loading","NotificationManagement","privilegesData","notificationManagement","redirectTo","checkAndReturnViewableComponent","module","exports","_toConsumableArray","arr","Array","isArray","arrayLikeToArray","iter","Symbol","iterator","from","unsupportedIterableToArray","TypeError"],"mappings":"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","file":"static/js/78.a42e9131.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\n// import styles from \"./button.module.scss\";\r\nimport \"./normalButton.scss\";\r\nexport class NormalButton extends Component {\r\n  render() {\r\n    const {\r\n      className = \"\",\r\n      label = \"\",\r\n      onClick,\r\n      id,\r\n      addBnt,\r\n      profileCreatNext,\r\n      profileCreatNext1,\r\n      profileCreatBack,\r\n      authButton1,\r\n      type = \"submit\",\r\n      disabled = false,\r\n      authButton = false,\r\n      loginButton = false,\r\n      tableBtn = false,\r\n      rightIcon = \"\",\r\n      leftIcon=\"\",\r\n      btnSecondary = false,\r\n      profileBtn = false,\r\n      outlineBtn = false,\r\n      cancel =false,\r\n      addProductbtn= false,\r\n    } = this.props;\r\n\r\n    return (\r\n      <div>\r\n        <button\r\n          id={id}\r\n          type={type}\r\n          className={`cursor-pointer \r\n                     ${authButton ? \"authButton\" : \"\"}\r\n                     ${profileCreatNext ? \"profileCreatNext\" : \"\"}\r\n                     ${profileCreatNext1 ? \"profileCreatNext1\" : \"\"}\r\n                     ${authButton1 ? \"authButton1\" : \"\"}\r\n                     ${profileCreatBack ? \"profileCreatBack\" : \"\"}\r\n                     ${loginButton ? \"loginButton\" : \"\"}\r\n                     ${addBnt ? \"addBnt\" : \"\"}\r\n                     ${tableBtn ? \"tableBtn\" : \"\"}\r\n                     ${btnSecondary ? \"btnSecondary\" : \"\"}\r\n                     ${profileBtn ? \"profileBtn\" : \"\"}\r\n                     ${outlineBtn ? \"outlineBtn\" : \"\"}\r\n                     ${cancel? 'cancelBtn ':''}\r\n                     ${addProductbtn? 'addProductbtn ':''}\r\n                   \r\n                     ${className}`}\r\n          onClick={onClick}\r\n          disabled={disabled}\r\n        >\r\n          {leftIcon !== \"\" ? (\r\n            <span className={`btn-left-icon ${leftIcon}`}></span>\r\n          ) : null}\r\n          {label}\r\n          {rightIcon !== \"\" ? (\r\n            <span className={`btn-right-icon ${rightIcon}`}></span>\r\n          ) : null}\r\n        </button>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default NormalButton;\r\n","import React from \"react\";\r\nimport {BsSearch} from \"react-icons/bs\"\r\nimport \"./InputBox.scss\";\r\nconst InputBox = (props) => {\r\n  let {\r\n    placeholder = \"\",\r\n    register = {},\r\n    value = \"\",\r\n    type = \"text\",\r\n    onChange,\r\n    name = \"\",\r\n    maxlength = \"\",\r\n    icons = false,\r\n    GB = false,\r\n    onWheel = \"\",\r\n    grayedBox = false,\r\n    Iconic = false,\r\n    disabled = false,\r\n    maxLength,\r\n    Search = false,\r\n  } = props;\r\n  return (\r\n    <>\r\n    <div className=\"input_head\">\r\n      <input\r\n        disabled={disabled}\r\n        name={name}\r\n        placeholder={placeholder}\r\n        className={\r\n          grayedBox\r\n            ? \"inputBoxGrayed\"\r\n            : Iconic\r\n            ? \"inputBoxStyle1\"\r\n            : \"inputBoxStyle\"\r\n        }\r\n        ref={register}\r\n        defaultValue={value}\r\n        type={type}\r\n        maxLength={maxLength}\r\n        onWheel={(event) => event.currentTarget.blur()}\r\n        onChange={(e) => {\r\n          const body = {\r\n            target: {\r\n              name: e.target.name,\r\n              value: e.target.value,\r\n            },\r\n          };\r\n          if (onChange) onChange(body);\r\n        }}\r\n        autoComplete={\"off\"}\r\n      />\r\n      {Iconic && Search ?  <i className=\"search_icon\"><BsSearch size={18} style={{color : \"#7E7E7E\"}}/></i> : \"\"}\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default InputBox;\r\n","import React, { useState } from \"react\";\r\nimport ReactPaginate from \"react-paginate\";\r\nimport \"./style.scss\";\r\nimport { FaCaretLeft, FaCaretRight } from \"react-icons/fa\";\r\nimport moment from \"moment\";\r\nimport editIcon from \"assets/images/editIcon.svg\";\r\nimport deleteIcon from \"assets/images/deleteIcon.svg\";\r\nimport ReadImg from \"assets/images/ReadImg.svg\";\r\nimport { history } from \"helpers\";\r\n\r\nfunction TableComp(props) {\r\n  const {\r\n    data,\r\n    isCheck,\r\n    EditAction,\r\n    DeleteAction,\r\n    ReadAction,\r\n    includedKeys,\r\n    pageCount,\r\n    onPageChange,\r\n    editRouteName,\r\n    setCurrentPage,\r\n    handleOpenModal,\r\n    currentPage,\r\n    onRowsSelect,\r\n  } = props;\r\n\r\n  console.log(\"data :>> \", data);\r\n  const [selectedRows, setSelectedRows] = useState([]);\r\n\r\n  const handleRowSelect = (rowId) => {\r\n    let updatedRows;\r\n    if (selectedRows.includes(rowId)) {\r\n      updatedRows = selectedRows.filter((id) => id !== rowId);\r\n    } else {\r\n      updatedRows = [...selectedRows, rowId];\r\n    }\r\n    setSelectedRows(updatedRows);\r\n    onRowsSelect(updatedRows);\r\n  };\r\n\r\n  const handleSelectAll = () => {\r\n    let updatedRows;\r\n    if (selectedRows.length === data.length) {\r\n      updatedRows = [];\r\n    } else {\r\n      const allRowIds = data.map((obj) => obj._id);\r\n      updatedRows = allRowIds;\r\n    }\r\n    setSelectedRows(updatedRows);\r\n    onRowsSelect(updatedRows);\r\n  };\r\n\r\n  const handlePageChange = (selectedPage) => {\r\n    setCurrentPage(selectedPage.selected + 1);\r\n    onPageChange(selectedPage.selected + 1);\r\n  };\r\n\r\n  // Dynamic colors for Status KeyName\r\n  const statusColors = {\r\n    active: \"#27AE60\",\r\n    inactive: \"#EB5757\",\r\n    open: \"#EB5757\",\r\n    accepted: \"#2F80ED\",\r\n    inprogress: \"#F2C94C\",\r\n    closed: \"#27AE60\",\r\n    failed: \"#EB5757\",\r\n    success: \"#27AE60\",\r\n  };\r\n\r\n  return (\r\n    <div className=\"table-container\">\r\n      <table className=\"data-table\">\r\n        <thead>\r\n          <tr>\r\n            {isCheck ? (\r\n              <th className=\"checkBox_place\">\r\n                <input\r\n                  type=\"checkbox\"\r\n                  onChange={handleSelectAll}\r\n                  checked={selectedRows.length === data.length}\r\n                  className=\"mt-2 check_box\"\r\n                />\r\n              </th>\r\n            ) : (\r\n              <></>\r\n            )}\r\n            {includedKeys.map((key) => {\r\n              return (\r\n                <>\r\n                  <th className=\"absorbing-column\" key={key}>\r\n                    {key.label}\r\n                  </th>\r\n                </>\r\n              );\r\n            })}\r\n\r\n            {!DeleteAction && !EditAction ? null : !DeleteAction ? (\r\n              <th className=\"checkBox_place\"></th>\r\n            ) : (\r\n              <>\r\n                <th className=\"checkBox_place\">Actions</th>\r\n                <th className=\"checkBox_place\"></th>\r\n              </>\r\n            )}\r\n          </tr>\r\n        </thead>\r\n\r\n        <tbody>\r\n          {data.map((obj) => {\r\n            return (\r\n              <tr key={obj.id}>\r\n                {isCheck && (\r\n                  <td className=\"checkBox_place\">\r\n                    <input\r\n                      type=\"checkbox\"\r\n                      onChange={() => handleRowSelect(obj._id)}\r\n                      checked={selectedRows.includes(obj._id)}\r\n                      className=\"mt-2 check_box\"\r\n                    />\r\n                  </td>\r\n                )}\r\n                {includedKeys.map((item) => {\r\n                  const key = item.value;\r\n                  // status keys color change\r\n                  if (obj.hasOwnProperty(key)) {\r\n                    const value = obj[key];\r\n                    const label = item.label;\r\n                    const statusKey = key.toLowerCase();\r\n                    if (statusKey.includes(\"status\")) {\r\n                      const status = value.toLowerCase();\r\n                      const color = statusColors[status] || \"black\";\r\n                      return (\r\n                        <td key={key}>\r\n                          <span style={{ color }}>\r\n                            {value.charAt(0).toUpperCase() + value.slice(1)}\r\n                          </span>\r\n                        </td>\r\n                      );\r\n                      // for id\r\n                    } else if (statusKey.includes(\"id\")) {\r\n                      return <td key={key}>{value}</td>;\r\n                      // date and time formatter\r\n                    } else if (\r\n                      moment(value, \"YYYY-MM-DDTHH:mm:ss.SSSZ\", true).isValid()\r\n                    ) {\r\n                      return (\r\n                        <td key={key}>\r\n                          {moment(value).format(\"MMM DD YYYY hh:mm a\")}\r\n                        </td>\r\n                      );\r\n                      // for HTML tags\r\n                    } else if (\r\n                      typeof value === \"string\" &&\r\n                      /<[a-z][\\s\\S]*>/i.test(value)\r\n                    ) {\r\n                      const textOnlyValue = value.replace(/<[^>]+>/g, \"\");\r\n                      return <td key={key}>{textOnlyValue}</td>;\r\n                      // for boolean\r\n                    } else {\r\n                      return (\r\n                        <td key={key}>\r\n                          {typeof value === \"boolean\" ? (\r\n                            value ? (\r\n                              <span style={{ color: \"#1D9E00\" }}>Active</span>\r\n                            ) : (\r\n                              <span style={{ color: \"#DD2025\" }}>Inactive</span>\r\n                            )\r\n                          ) : (\r\n                            value\r\n                          )}\r\n                        </td>\r\n                      );\r\n                    }\r\n                  }\r\n                  return null;\r\n                })}\r\n\r\n                {EditAction && (\r\n                  <td>\r\n                    <img\r\n                      src={editIcon}\r\n                      alt=\"Edit\"\r\n                      style={{\r\n                        color: \"#B4B4B4\",\r\n                        cursor: \"pointer\",\r\n                      }}\r\n                      onClick={() => {\r\n                        localStorage.removeItem(\"editId\");\r\n                        localStorage.setItem(\"editId\", obj._id);\r\n                        history.push(`${editRouteName}`);\r\n                      }}\r\n                    />\r\n                  </td>\r\n                )}\r\n                {ReadAction && (\r\n                  <td>\r\n                    <img\r\n                      src={ReadImg}\r\n                      alt=\"read\"\r\n                      style={{\r\n                        color: \"#B4B4B4\",\r\n                        cursor: \"pointer\",\r\n                      }}\r\n                      onClick={() => {\r\n                        localStorage.removeItem(\"editId\");\r\n                        localStorage.setItem(\"editId\", obj._id);\r\n                        history.push(`${editRouteName}`);\r\n                      }}\r\n                    />\r\n                  </td>\r\n                )}\r\n                {DeleteAction && (\r\n                  <td onClick={() => handleOpenModal(obj._id)}>\r\n                    <img\r\n                      src={deleteIcon}\r\n                      alt=\"delete\"\r\n                      style={{\r\n                        color: \"#B4B4B4\",\r\n                        cursor: \"pointer\",\r\n                      }}\r\n                    />\r\n                  </td>\r\n                )}\r\n              </tr>\r\n            );\r\n          })}\r\n        </tbody>\r\n      </table>\r\n\r\n      <div className=\"my-4\">\r\n        <ReactPaginate\r\n          previousLabel={<FaCaretLeft />}\r\n          nextLabel={<FaCaretRight />}\r\n          pageCount={pageCount}\r\n          onPageChange={handlePageChange}\r\n          forcePage={currentPage - 1}\r\n          containerClassName={\"pagination\"}\r\n          previousClassName={\"pagination-previous\"}\r\n          nextClassName={\"pagination-next\"}\r\n          pageClassName={\"pagination-item\"}\r\n          breakClassName={\"pagination-item\"}\r\n          activeClassName={\"active_page\"}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default TableComp;\r\n","import React, { useState } from \"react\";\r\nimport { Button, Modal } from \"antd\";\r\nimport \"./style.scss\";\r\nimport ErrorImg from \"assets/images/ErrorImg.svg\";\r\nimport successImg from \"assets/images/SuccessImg.svg\";\r\nimport NormalButton from \"../NormalButton/NormalButton\";\r\nconst DeleteModal = ({\r\n  DeleteMessage,\r\n  modalOpen,\r\n  closeModal,\r\n  handleDelete,\r\n}) => {\r\n  return (\r\n    <>\r\n      <Modal open={modalOpen} centered closable={false}>\r\n        <div className=\"p-5\">\r\n          {DeleteMessage && <p className=\"delete_text m-0\">{DeleteMessage}</p>}\r\n          {DeleteMessage && (\r\n            <div className=\"delete_Img\">\r\n              <img src={ErrorImg} alt=\"\" />\r\n            </div>\r\n          )}\r\n          {DeleteMessage && (\r\n            <div className=\"d-flex align-items-center justify-content-center\">\r\n              <div className=\"col-6\">\r\n                <NormalButton\r\n                  className=\"authButton1\"\r\n                  label={\"No\"}\r\n                  onClick={closeModal}\r\n                />\r\n              </div>\r\n              <div className=\"col-6\">\r\n                <NormalButton\r\n                  className=\"loginButton\"\r\n                  label={\"Yes\"}\r\n                  onClick={handleDelete}\r\n                />\r\n              </div>\r\n            </div>\r\n          )}\r\n        </div>\r\n      </Modal>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default DeleteModal;\r\n","import axios from \"axios\";\r\nimport { history } from \"helpers\";\r\nimport { endpoints } from \"config/api\";\r\nimport { axiosErrorHandler } from \"./helpers/axiosHelpers\";\r\n\r\n// Notification Template\r\nexport const getNotificationTemplateList = async (params) => {\r\n  let request = await axios({\r\n    method: \"get\",\r\n    url: `${endpoints.communication.NOTIFICATION_TEMPLATE_LIST}`,\r\n    headers: {\r\n      Authorization: `Bearer ${localStorage.getItem(\"token\")}`,\r\n    },\r\n    params: params,\r\n  });\r\n  return request;\r\n};\r\n\r\nexport const addNotificationTemplate = async (data) => {\r\n  const request = await axios({\r\n    method: \"post\",\r\n    url: endpoints.communication.NOTIFICATION_TEMPLATE_CREATE,\r\n    headers: {\r\n      Authorization: `Bearer ${localStorage.getItem(\"token\")}`,\r\n    },\r\n    data: data,\r\n  }).catch(axiosErrorHandler);\r\n  return request;\r\n};\r\n\r\nexport const getNotificationTemplate = async (params) => {\r\n  const request = await axios({\r\n    method: \"get\",\r\n    url: endpoints.communication.NOTIFICATION_TEMPLATE_GET,\r\n    headers: {\r\n      Authorization: `Bearer ${localStorage.getItem(\"token\")}`,\r\n    },\r\n    params,\r\n  }).catch(axiosErrorHandler);\r\n  return request;\r\n};\r\n\r\nexport const deleteNotificationTemplate = async (params) => {\r\n  const request = await axios({\r\n    method: \"delete\",\r\n    url: endpoints.communication.NOTIFICATION_TEMPLATE_DELETE,\r\n    headers: {\r\n      Authorization: `Bearer ${localStorage.getItem(\"token\")}`,\r\n    },\r\n    params,\r\n  }).catch(axiosErrorHandler);\r\n  return request;\r\n};\r\n\r\nexport const bulkDeleteNotificationTemplate = async (body) => {\r\n  const request = await axios({\r\n    method: \"delete\",\r\n    url: endpoints.communication.NOTIFICATION_TEMPLATE_DELETE,\r\n    headers: {\r\n      Authorization: `Bearer ${localStorage.getItem(\"token\")}`,\r\n    },\r\n    data: body,\r\n  }).catch(axiosErrorHandler);\r\n  return request;\r\n};\r\n\r\nexport const updateNotificationTemplate = async (body, id) => {\r\n  const request = await axios({\r\n    method: \"put\",\r\n    url: `${endpoints.communication.NOTIFICATION_TEMPLATE_UPDATE}?notificationTemplateId=${id}`,\r\n    headers: {\r\n      Authorization: `Bearer ${localStorage.getItem(\"token\")}`,\r\n    },\r\n    data: body,\r\n  }).catch(axiosErrorHandler);\r\n  return request;\r\n};\r\n\r\n// Notification History\r\nexport const getNotificationHistoryList = async (params) => {\r\n  let request = await axios({\r\n    method: \"get\",\r\n    url: `${endpoints.communication.NOTIFICATION_HISTORY_LIST}`,\r\n    headers: {\r\n      Authorization: `Bearer ${localStorage.getItem(\"token\")}`,\r\n    },\r\n    params: params,\r\n  });\r\n  return request;\r\n};\r\n\r\nexport const addNotificationHistory = async (data) => {\r\n  const request = await axios({\r\n    method: \"post\",\r\n    url: endpoints.communication.NOTIFICATION_HISTORY_CREATE,\r\n    headers: {\r\n      Authorization: `Bearer ${localStorage.getItem(\"token\")}`,\r\n    },\r\n    data: data,\r\n  }).catch(axiosErrorHandler);\r\n  return request;\r\n};\r\n\r\nexport const getNotificationHistory = async (params) => {\r\n  const request = await axios({\r\n    method: \"get\",\r\n    url: endpoints.communication.NOTIFICATION_HISTORY_GET,\r\n    headers: {\r\n      Authorization: `Bearer ${localStorage.getItem(\"token\")}`,\r\n    },\r\n    params,\r\n  }).catch(axiosErrorHandler);\r\n  return request;\r\n};\r\n\r\nexport const deleteNotificationHistory = async (params) => {\r\n  const request = await axios({\r\n    method: \"delete\",\r\n    url: endpoints.communication.NOTIFICATION_HISTORY_DELETE,\r\n    headers: {\r\n      Authorization: `Bearer ${localStorage.getItem(\"token\")}`,\r\n    },\r\n    params,\r\n  }).catch(axiosErrorHandler);\r\n  return request;\r\n};\r\n\r\nexport const BulkDeleteNotificationHistory = async (body) => {\r\n  const request = await axios({\r\n    method: \"delete\",\r\n    url: endpoints.communication.NOTIFICATION_HISTORY_DELETE,\r\n    headers: {\r\n      Authorization: `Bearer ${localStorage.getItem(\"token\")}`,\r\n    },\r\n    data: body,\r\n  }).catch(axiosErrorHandler);\r\n  return request;\r\n};\r\n\r\nexport const updateNotificationHistory = async (body, id) => {\r\n  const request = await axios({\r\n    method: \"put\",\r\n    url: `${endpoints.communication.NOTIFICATION_HISTORY_UPDATE}?id=${id}`,\r\n    headers: {\r\n      Authorization: `Bearer ${localStorage.getItem(\"token\")}`,\r\n    },\r\n    data: body,\r\n  }).catch(axiosErrorHandler);\r\n  return request;\r\n};\r\n","import React, { useState, useEffect } from \"react\";\r\nimport \"./style.scss\";\r\nimport { debounceFunction, history } from \"helpers\";\r\nimport InputBox from \"component/common/InputBox/InputBox\";\r\nimport NormalButton from \"component/common/NormalButton/NormalButton\";\r\nimport axios from \"axios\";\r\nimport TableComp from \"../../common/TableComp/TableComp\";\r\nimport DeleteModal from \"component/common/DeleteModal/DeleteModal\";\r\nimport {\r\n  getNotificationTemplateList,\r\n  deleteNotificationTemplate,\r\n  getNotificationHistoryList,\r\n  BulkDeleteNotificationHistory,\r\n  deleteNotificationHistory,\r\n  bulkDeleteNotificationTemplate,\r\n} from \"service/Communication\";\r\nimport { Toast } from \"service/toast\";\r\nimport Loader from \"component/common/Loader\";\r\nimport { useCallback } from \"react\";\r\n\r\nconst NotificationManagementComp = ({ create, view, edit, remove }) => {\r\n  const [activeTab, setActiveTab] = useState(0);\r\n  const [search, setSearch] = useState(\"\");\r\n  const [templatedata, setTemplateData] = useState();\r\n  const [historydata, setHistoryData] = useState();\r\n  const [pageCount, setPageCount] = useState(1);\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const [modalVisible, setModalVisible] = useState({\r\n    id: null,\r\n    show: false,\r\n  });\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [bulkDelete, setBulkDelete] = useState(false);\r\n  const [deleteId, setDeleteId] = useState([]);\r\n\r\n  const handleTab = (tab) => {\r\n    setActiveTab(tab);\r\n    history.push(`notification-management?tab=${tab}`);\r\n  };\r\n\r\n  var url = new URL(document.URL);\r\n  const params = url.searchParams;\r\n  const tabValue = +params.get(\"tab\") ?? 0;\r\n\r\n  const templateKeys = [\r\n    {\r\n      label: \"Notification Id\",\r\n      value: \"notificationTemplateId\",\r\n    },\r\n    {\r\n      label: \"Date and Time\",\r\n      value: \"createdAt\",\r\n    },\r\n    {\r\n      label: \"Notification Title\",\r\n      value: \"title\",\r\n    },\r\n    {\r\n      label: \"Notification Description\",\r\n      value: \"description\",\r\n    },\r\n  ];\r\n\r\n  const historyKeys = [\r\n    {\r\n      label: \"Notification Id\",\r\n      value: \"notificationId\",\r\n    },\r\n    // {\r\n    //   label: \"Notification Sent Status\",\r\n    //   value: \"notificationSentStatus\",\r\n    // },\r\n    {\r\n      label: \"Date and Time\",\r\n      value: \"createdAt\",\r\n    },\r\n    {\r\n      label: \"Notification Title\",\r\n      value: \"title\",\r\n    },\r\n    {\r\n      label: \"Notification Content\",\r\n      value: \"description\",\r\n    },\r\n  ];\r\n\r\n  const getTemplateList = async (page) => {\r\n    try {\r\n      setIsLoading(true);\r\n      let params = {\r\n        page: page,\r\n        limit: 10,\r\n        search: search,\r\n      };\r\n      let response = await getNotificationTemplateList(params);\r\n      if (response.status === 200) {\r\n        setTemplateData(response?.data?.data?.list.length > 0);\r\n        setPageCount(response?.data?.data?.pageMeta?.pageCount);\r\n        setCurrentPage(response?.data?.data?.pageMeta?.currentPage);\r\n      } else {\r\n        setTemplateData([]);\r\n      }\r\n    } catch (err) {\r\n      console.log(\"err :>> \", err);\r\n    } finally {\r\n      setIsLoading(false);\r\n    }\r\n  };\r\n\r\n  const getHistoryList = async (page) => {\r\n    try {\r\n      setIsLoading(true);\r\n      let params = {\r\n        page: page,\r\n        limit: 10,\r\n        search: search,\r\n      };\r\n      let response = await getNotificationHistoryList(params);\r\n      if (response.status === 200) {\r\n        setHistoryData(response?.data?.data?.list.length > 0);\r\n        setPageCount(response?.data?.data?.pageMeta?.pageCount);\r\n        setCurrentPage(response?.data?.data?.pageMeta?.currentPage);\r\n      } else {\r\n        setTemplateData([]);\r\n      }\r\n    } catch (err) {\r\n      console.log(\"err :>> \", err);\r\n    } finally {\r\n      setIsLoading(false);\r\n    }\r\n  };\r\n\r\n  const handleOpenModal = (id) => {\r\n    setModalVisible({\r\n      id: id,\r\n      show: true,\r\n    });\r\n  };\r\n\r\n  const handleDeleteItem = async () => {\r\n    if (modalVisible.show && modalVisible.id) {\r\n      if (activeTab === 0) {\r\n        let params = {\r\n          notificationTemplateId: modalVisible.id,\r\n        };\r\n        let response = await deleteNotificationTemplate(params);\r\n        if (response.status === 200) {\r\n          Toast({ type: \"success\", message: response.data.message });\r\n          getTemplateList(currentPage);\r\n        }\r\n      } else {\r\n        let params = {\r\n          notificationId: modalVisible.id,\r\n        };\r\n        let response = await deleteNotificationHistory(params);\r\n        if (response.status === 200) {\r\n          Toast({ type: \"success\", message: response.data.message });\r\n          getHistoryList(currentPage);\r\n        }\r\n      }\r\n    }\r\n    setModalVisible({ show: false, id: null });\r\n  };\r\n\r\n  const handlePageChange = (page) => {\r\n    setCurrentPage(page);\r\n    if (activeTab === 0) {\r\n      getTemplateList(page);\r\n    } else {\r\n      getHistoryList(page);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    handleTab(tabValue);\r\n    if (tabValue === 1) {\r\n      getHistoryList(currentPage);\r\n    } else {\r\n      getTemplateList(currentPage);\r\n    }\r\n  }, [tabValue, search]);\r\n\r\n  const handleSearchChange = useCallback(\r\n    debounceFunction((value) => {\r\n      setSearch(value);\r\n    }, 500),\r\n    []\r\n  );\r\n\r\n  const handleBulk = async (id) => {\r\n    if (id.length > 0) {\r\n      setBulkDelete(true);\r\n      deleteId.length = 0;\r\n      deleteId.push(...Object.values(id));\r\n    } else {\r\n      setBulkDelete(false);\r\n    }\r\n  };\r\n\r\n  const handleBulkDelete = async () => {\r\n    if (activeTab === 0) {\r\n      if (deleteId.length > 0) {\r\n        let body = {\r\n          ids: deleteId,\r\n        };\r\n        let response = await bulkDeleteNotificationTemplate(body);\r\n        if (response.status === 200) {\r\n          Toast({ type: \"success\", message: response.data.message });\r\n          getTemplateList(currentPage);\r\n        } else {\r\n          Toast({ type: \"error\", message: response.data.message });\r\n        }\r\n      }\r\n    } else {\r\n      if (deleteId.length > 0) {\r\n        let body = {\r\n          ids: deleteId,\r\n        };\r\n        let response = await BulkDeleteNotificationHistory(body);\r\n        if (response.status === 200) {\r\n          Toast({ type: \"success\", message: response.data.message });\r\n          getHistoryList(currentPage);\r\n        } else {\r\n          Toast({ type: \"error\", message: response.data.message });\r\n        }\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"notification_container px-5\">\r\n      <p className=\"m-0 pt-3\">Notification Management</p>\r\n      <div className=\"Tab_design pt-3 p-0\">\r\n        <div\r\n          className={\r\n            activeTab === 0 ? \"Tab_design_active\" : \"Tab_design_inActive\"\r\n          }\r\n          onClick={() => {\r\n            handleTab(0);\r\n            setCurrentPage(1);\r\n          }}\r\n        >\r\n          Notification Template\r\n        </div>\r\n        &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n        <div\r\n          className={\r\n            activeTab === 1 ? \"Tab_design_active\" : \"Tab_design_inActive\"\r\n          }\r\n          onClick={() => {\r\n            handleTab(1);\r\n            setCurrentPage(1);\r\n          }}\r\n        >\r\n          Notification History\r\n        </div>\r\n      </div>\r\n      {activeTab === 0 ? (\r\n        <>\r\n          <div className=\"row align-items-center\">\r\n            <div className=\"col-md-3 my-4\">\r\n              <InputBox\r\n                className=\"login_input Notification_input\"\r\n                type={\"text\"}\r\n                placeholder=\"Search by Id\"\r\n                name=\"search\"\r\n                Iconic\r\n                Search\r\n                value={search}\r\n                onChange={(e) => handleSearchChange(e.target.value)}\r\n              />\r\n            </div>\r\n            <div className=\"col-md-5 p-0\"></div>\r\n            <div className=\"col-md-2\">\r\n              {bulkDelete && (\r\n                <NormalButton\r\n                  className=\"authButton1\"\r\n                  label={\"Delete\"}\r\n                  onClick={handleBulkDelete}\r\n                />\r\n              )}\r\n            </div>\r\n            {create && (\r\n              <div className=\"col-md-2 m-0\">\r\n                <NormalButton\r\n                  className=\"loginButton\"\r\n                  label={\"Create Notification\"}\r\n                  onClick={() => {\r\n                    localStorage.removeItem(\"editId\");\r\n                    history.push(\r\n                      \"/admin/notification-management/create-notification\"\r\n                    );\r\n                  }}\r\n                />\r\n              </div>\r\n            )}\r\n          </div>\r\n        </>\r\n      ) : (\r\n        <>\r\n          <div className=\"row p-0 align-items-center\">\r\n            <div className=\"col-md-3 my-4\">\r\n              <InputBox\r\n                className=\"login_input Notification_input\"\r\n                type={\"text\"}\r\n                placeholder=\"Search by Id\"\r\n                name=\"search\"\r\n                Iconic\r\n                Search\r\n                value={search}\r\n                onChange={(e) => handleSearchChange(e.target.value)}\r\n              />\r\n            </div>\r\n            <div className=\"col-md-5\"></div>\r\n            <div className=\"col-md-2\">\r\n              {bulkDelete && (\r\n                <NormalButton\r\n                  className=\"authButton1\"\r\n                  label={\"Delete\"}\r\n                  onClick={handleBulkDelete}\r\n                />\r\n              )}\r\n            </div>\r\n            {create && (\r\n              <div className=\"col-md-2 m-0\">\r\n                <NormalButton\r\n                  className=\"loginButton\"\r\n                  label={\"Send Notification\"}\r\n                  onClick={() => {\r\n                    localStorage.removeItem(\"editId\");\r\n                    history.push(\r\n                      \"/admin/notification-management/send-notification\"\r\n                    );\r\n                  }}\r\n                />\r\n              </div>\r\n            )}\r\n          </div>\r\n        </>\r\n      )}\r\n      {isLoading ? (\r\n        <Loader\r\n          loading={isLoading}\r\n          className=\"d-flex align-items-center justify-content-center\"\r\n        />\r\n      ) : (\r\n        <div>\r\n          {activeTab === 0 && templatedata && templatedata.length > 0 ? (\r\n            <TableComp\r\n              data={templatedata}\r\n              isCheck={true}\r\n              EditAction={edit}\r\n              DeleteAction={remove}\r\n              includedKeys={templateKeys}\r\n              pageCount={pageCount}\r\n              onPageChange={handlePageChange}\r\n              currentPage={currentPage}\r\n              setCurrentPage={setCurrentPage}\r\n              editRouteName=\"/admin/notification-management/create-notification\"\r\n              handleOpenModal={handleOpenModal}\r\n              onRowsSelect={handleBulk}\r\n            />\r\n          ) : (\r\n            activeTab === 0 && (\r\n              <div className=\"d-flex align-items-center justify-content-center mt-5 pt-5\">\r\n                No Data Available\r\n              </div>\r\n            )\r\n          )}\r\n\r\n          {activeTab === 1 && historydata && historydata.length > 0 ? (\r\n            <TableComp\r\n              data={historydata}\r\n              isCheck={true}\r\n              EditAction={edit}\r\n              DeleteAction={remove}\r\n              includedKeys={historyKeys}\r\n              pageCount={pageCount}\r\n              onPageChange={handlePageChange}\r\n              currentPage={currentPage}\r\n              setCurrentPage={setCurrentPage}\r\n              editRouteName=\"/admin/notification-management/send-notification\"\r\n              handleOpenModal={handleOpenModal}\r\n              onRowsSelect={handleBulk}\r\n            />\r\n          ) : (\r\n            activeTab === 1 && (\r\n              <div className=\"d-flex align-items-center justify-content-center mt-5 pt-5\">\r\n                No Data Available\r\n              </div>\r\n            )\r\n          )}\r\n        </div>\r\n      )}\r\n      <div>\r\n        {\" \"}\r\n        <DeleteModal\r\n          modalOpen={modalVisible.show}\r\n          closeModal={() => setModalVisible({ id: null, show: false })}\r\n          handleDelete={handleDeleteItem}\r\n          DeleteMessage={\r\n            activeTab === 0\r\n              ? \"Are you sure you want to delete Notification Template?\"\r\n              : \"Are you sure you want to delete Notification History?\"\r\n          }\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NotificationManagementComp;\r\n","import React, { useEffect } from 'react';\r\nimport NotificationManagementComp from 'component/Dashboard/NotificationManagementComp/NotificationManagementComp';\r\nimport { Redirect } from 'react-router-dom';\r\nimport { checkAndReturnViewableComponent } from 'helpers';\r\n\r\nconst NotificationManagement = ({ privilegesData = {} }) => {\r\n  const { notificationManagement = {} } = privilegesData || {};\r\n\r\n  useEffect(() => {\r\n    const redirectTo = checkAndReturnViewableComponent(privilegesData, notificationManagement);\r\n    if (redirectTo) {\r\n      console.log(\"toto\", redirectTo)\r\n      // return <Redirect to={redirectData.to} />;\r\n    }\r\n  }, []);\r\n\r\n  return (\r\n    <div><NotificationManagementComp {...notificationManagement} /> </div>\r\n  )\r\n}\r\n\r\nexport default NotificationManagement","module.exports = __webpack_public_path__ + \"static/media/SuccessImg.4b68588c.svg\";","module.exports = __webpack_public_path__ + \"static/media/ReadImg.96474dd0.svg\";","module.exports = __webpack_public_path__ + \"static/media/deleteIcon.b8b189cc.svg\";","module.exports = __webpack_public_path__ + \"static/media/editIcon.d54ed3bb.svg\";","module.exports = __webpack_public_path__ + \"static/media/ErrorImg.b30f2c03.svg\";","import arrayWithoutHoles from \"./arrayWithoutHoles\";\nimport iterableToArray from \"./iterableToArray\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray\";\nimport nonIterableSpread from \"./nonIterableSpread\";\nexport default function _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableSpread();\n}","import arrayLikeToArray from \"./arrayLikeToArray\";\nexport default function _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return arrayLikeToArray(arr);\n}","export default function _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && Symbol.iterator in Object(iter)) return Array.from(iter);\n}","export default function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}"],"sourceRoot":""}