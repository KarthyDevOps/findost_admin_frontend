{"version":3,"sources":["component/common/DropDown/DropDown.js"],"names":["DropDown","props","value","onChange","options","placeholder","isMulti","controlShouldRenderValue","React","createElement","ReactSelect","isClearable","components","IndicatorSeparator","styles","option","cursor","dropdownIndicator","color"],"mappings":"sGAAA,2CAgDeA,UA5CGC,IAChB,MAAM,MACJC,EAAK,SACLC,EAAQ,QACRC,EAAO,YACPC,EAAW,QACXC,EAAO,yBACPC,GACEN,EAmBJ,OACEO,IAAAC,cAACC,IAAW,CACVJ,QAASA,EACTJ,MAAOA,EACPC,SAAUA,EACVC,QAASA,EACTO,aAAa,EACbJ,yBAA0BA,EAC1BK,WAAY,CACVC,mBAAoBA,IAAM,MAE5BC,OA5BiB,CACnBC,OAASD,IAAM,IACVA,EACHE,OAAQ,YAEVC,kBAAoBH,IAAM,IACrBA,EACHI,MAAO,UACPF,OAAQ,aAqBRX,YAAaA,M","file":"static/js/124.2120ab3a.chunk.js","sourcesContent":["import React from \"react\";\r\nimport ReactSelect from \"react-select\";\r\nimport \"./style.scss\";\r\n\r\nconst DropDown = (props) => {\r\n  const {\r\n    value,\r\n    onChange,\r\n    options,\r\n    placeholder,\r\n    isMulti,\r\n    controlShouldRenderValue,\r\n  } = props;\r\n\r\n  const colourStyles = {\r\n    option: (styles => ({\r\n      ...styles,\r\n      cursor: \"pointer\"\r\n    })),\r\n    dropdownIndicator: (styles) => ({\r\n      ...styles,\r\n      color: \"#000000\",\r\n      cursor: \"pointer\",\r\n    }),\r\n    // control: (base) => ({\r\n    //   ...base,\r\n    //   cursor: \"pointer\",\r\n    //   fontFamily: \"Helvetica\",\r\n    // }),\r\n  };\r\n\r\n  return (\r\n    <ReactSelect\r\n      isMulti={isMulti}\r\n      value={value}\r\n      onChange={onChange}\r\n      options={options}\r\n      isClearable={false}\r\n      controlShouldRenderValue={controlShouldRenderValue}\r\n      components={{\r\n        IndicatorSeparator: () => null,\r\n      }}\r\n      styles={colourStyles}\r\n      placeholder={placeholder}\r\n    />\r\n  );\r\n};\r\n\r\nexport default DropDown;\r\n"],"sourceRoot":""}