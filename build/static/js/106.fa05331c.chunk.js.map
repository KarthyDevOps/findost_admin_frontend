{"version":3,"sources":["component/common/TableComp/TableComp.js","assets/images/deleteIcon.svg","assets/images/editIcon.svg","assets/images/ReadImg.svg","assets/images/viewIcon.svg","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithoutHoles.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableSpread.js","../node_modules/antd/es/_util/reactNode.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js"],"names":["TableComp","props","data","EditAction","DeleteAction","ReadAction","includedKeys","pageCount","onPageChange","editRouteName","setCurrentPage","handleOpenModal","currentPage","onRowsSelect","calmanagement","management","client","useState","selectedRows","setSelectedRows","statusColors","active","inactive","open","accepted","inprogress","closed","failed","success","PENDING","COMPLETED","className","type","onChange","updatedRows","length","map","obj","_id","checked","key","style","width","label","id","rowId","includes","filter","handleRowSelect","item","value","nestedKeys","split","nestedKey","hasOwnProperty","moment","isValid","format","getValueForKey","statusKey","toLowerCase","status","color","charAt","toUpperCase","slice","title","href","target","src","alt","test","textOnlyValue","replace","editIcon","cursor","onClick","localStorage","removeItem","setItem","familyMember","history","push","viewIcon","ReadImg","deleteIcon","console","log","previousLabel","nextLabel","selectedPage","selected","forcePage","containerClassName","previousClassName","nextClassName","pageClassName","breakClassName","activeClassName","module","exports","_toConsumableArray","arr","Array","isArray","arrayLikeToArray","iter","Symbol","iterator","Object","from","unsupportedIterableToArray","TypeError","isValidElement","React","isFragment","child","cloneElement","element","replacement","replaceElement","_createForOfIteratorHelper","o","i","F","s","n","done","e","_e","f","it","err","normalCompletion","didErr","step","next","_e2"],"mappings":"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","file":"static/js/106.fa05331c.chunk.js","sourcesContent":["import React, { useState } from \"react\";\r\n// styles\r\nimport \"./style.scss\";\r\n// images\r\nimport editIcon from \"assets/images/editIcon.svg\";\r\nimport deleteIcon from \"assets/images/deleteIcon.svg\";\r\nimport ReadImg from \"assets/images/ReadImg.svg\";\r\nimport viewIcon from \"assets/images/viewIcon.svg\";\r\n// services\r\nimport ReactPaginate from \"react-paginate\";\r\nimport { FaCaretLeft, FaCaretRight } from \"react-icons/fa\";\r\nimport { Tooltip } from \"antd\";\r\nimport moment from \"moment\";\r\n// helpers\r\nimport { history } from \"helpers\";\r\n\r\nfunction TableComp(props) {\r\n  const {\r\n    data,\r\n    EditAction,\r\n    DeleteAction,\r\n    ReadAction,\r\n    includedKeys,\r\n    pageCount,\r\n    onPageChange,\r\n    editRouteName,\r\n    setCurrentPage,\r\n    handleOpenModal,\r\n    currentPage,\r\n    onRowsSelect,\r\n    calmanagement = false,\r\n    management = false,\r\n    client = false,\r\n  } = props;\r\n\r\n  const [selectedRows, setSelectedRows] = useState([]);\r\n  // Dynamic colors for Status KeyName\r\n  const statusColors = {\r\n    active: \"#27AE60\",\r\n    inactive: \"#EB5757\",\r\n    open: \"#EB5757\",\r\n    accepted: \"#2F80ED\",\r\n    inprogress: \"#F2C94C\",\r\n    closed: \"#27AE60\",\r\n    failed: \"#EB5757\",\r\n    success: \"#27AE60\",\r\n    PENDING: \"#EB5757\",\r\n    COMPLETED: \"#27AE60\",\r\n  };\r\n\r\n  const handlePageChange = (selectedPage) => {\r\n    setCurrentPage(selectedPage.selected + 1);\r\n    onPageChange(selectedPage.selected + 1);\r\n  };\r\n\r\n  const handleRowSelect = (rowId) => {\r\n    let updatedRows;\r\n    if (selectedRows.includes(rowId)) {\r\n      updatedRows = selectedRows.filter((id) => id !== rowId);\r\n    } else {\r\n      updatedRows = [...selectedRows, rowId];\r\n    }\r\n    setSelectedRows(updatedRows);\r\n    onRowsSelect(updatedRows);\r\n  };\r\n\r\n  const handleSelectAll = () => {\r\n    let updatedRows;\r\n    if (selectedRows.length === data.length) {\r\n      updatedRows = [];\r\n    } else {\r\n      const allRowIds = data.map((obj) => obj._id);\r\n      updatedRows = allRowIds;\r\n    }\r\n    setSelectedRows(updatedRows);\r\n    onRowsSelect(updatedRows);\r\n  };\r\n\r\n\r\n  const getValueForKey = (key, obj) => {\r\n    const nestedKeys = key.split(\".\");\r\n    let value = obj;\r\n    for (const nestedKey of nestedKeys) {\r\n      if (value.hasOwnProperty(nestedKey)) {\r\n        value = value[nestedKey];\r\n      } else {\r\n        return (value = \"-\");\r\n      }\r\n    }\r\n    if (\r\n      nestedKeys.includes(\"familyMember\") &&\r\n      typeof value === \"string\" &&\r\n      moment(value, \"YYYY-MM-DDTHH:mm:ss.SSSZ\", true).isValid()\r\n    ) {\r\n      return moment(value).format(\"MMM DD YYYY\");\r\n    } else {\r\n      return value;\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"table-container\">\r\n      <table className=\"data-table\">\r\n        <thead>\r\n          <tr>\r\n            {DeleteAction && (\r\n              <th className=\"checkBox_place\">\r\n                <input\r\n                  type=\"checkbox\"\r\n                  onChange={handleSelectAll}\r\n                  checked={selectedRows.length === data.length}\r\n                  className=\"check_box cursor-pointer\"\r\n                />\r\n              </th>\r\n            )}\r\n            {includedKeys.map((key) => {\r\n              return (\r\n                <>\r\n                  <th\r\n                    className=\"\"\r\n                    key={key}\r\n                    style={{ ...(key?.width ? { width: key?.width } : {}) }}\r\n                  >\r\n                    {key.label}\r\n                  </th>\r\n                </>\r\n              );\r\n            })}\r\n\r\n            {(DeleteAction || ReadAction || EditAction) && (\r\n              <th className=\"action_place\"> Actions</th>\r\n            )}\r\n          </tr>\r\n        </thead>\r\n\r\n        <tbody>\r\n          {data.map((obj) => {\r\n            return (\r\n              <tr key={obj.id}>\r\n                {DeleteAction && (\r\n                  <td className=\"checkBox_place\">\r\n                    <input\r\n                      type=\"checkbox\"\r\n                      onChange={() => handleRowSelect(obj._id)}\r\n                      checked={selectedRows.includes(obj._id)}\r\n                      className=\"check_box cursor-pointer\"\r\n                    />\r\n                  </td>\r\n                )}\r\n                {includedKeys.map((item) => {\r\n                  const key = item.value;\r\n                  const value = getValueForKey(key, obj);\r\n                  // status keys color change\r\n                  if (obj.hasOwnProperty(key)) {\r\n                    const value = obj[key];\r\n                    const label = item.label;\r\n                    const statusKey = key.toLowerCase();\r\n                    if (statusKey.includes(\"status\")) {\r\n                      const status = value.toLowerCase();\r\n                      const color = statusColors[status] || \"black\";\r\n                      return (\r\n                        <td key={key}>\r\n                          <span style={{ color }}>\r\n                            {value.charAt(0).toUpperCase() + value.slice(1)}\r\n                          </span>\r\n                        </td>\r\n                      );\r\n                      // for id\r\n                    } else if (statusKey.includes(\"aditionalinfo\")) {\r\n                      return (\r\n                        <Tooltip title={value} color={\"#fff\"} key={\"#fff\"}>\r\n                          <td key={key}>{value}</td>\r\n                        </Tooltip>\r\n                      );\r\n                    } else if (statusKey.includes(\"id\")) {\r\n                      return <td key={key}>{value}</td>;\r\n                    } else if (\r\n                      calmanagement &&\r\n                      statusKey.includes(\"description\")\r\n                    ) {\r\n                      return (\r\n                        <td key={key}>\r\n                          <a href={value} target=\"_blank\">\r\n                            {value}\r\n                          </a>\r\n                        </td>\r\n                      );\r\n                    } else if (statusKey.includes(\"type\")) {\r\n                      return (\r\n                        <td key={key}>\r\n                          {value.charAt(0).toUpperCase() + value.slice(1)}\r\n                        </td>\r\n                      );\r\n                    } else if (statusKey.includes(\"producticons3\")) {\r\n                      return (\r\n                        <td key={key}>\r\n                          <a href={value} target=\"_blank\">\r\n                            <img src={value} alt={value} className=\"img\" />{\" \"}\r\n                          </a>\r\n                        </td>\r\n                      );\r\n                    } else if (statusKey.includes(\"imageurls3\")) {\r\n                      return (\r\n                        <td key={key}>\r\n                          <a href={value} target=\"_blank\">\r\n                            <img src={value} alt={value} className=\"img\" />{\" \"}\r\n                          </a>\r\n                        </td>\r\n                      );\r\n                      // date formatter\r\n                    } else if (statusKey === \"date\") {\r\n                      return (\r\n                        <td key={key}>{moment(value).format(\"MMM DD YYYY\")}</td>\r\n                      );\r\n                      // date and time formatter\r\n                    } else if (\r\n                      moment(value, \"YYYY-MM-DDTHH:mm:ss.SSSZ\", true).isValid()\r\n                    ) {\r\n                      return (\r\n                        <td key={key}>\r\n                          {moment(value).format(\"MMM DD YYYY hh:mm a\")}\r\n                        </td>\r\n                      );\r\n                    } else if (\r\n                      typeof value === \"string\" &&\r\n                      /<[a-z][\\s\\S]*>/i.test(value)\r\n                    ) {\r\n                      const textOnlyValue = value.replace(/<[^>]+>/g, \"\");\r\n                      return <td key={key}>{textOnlyValue}</td>;\r\n                      // for boolean\r\n                    } else {\r\n                      return (\r\n                        <td key={key}>\r\n                          {typeof value === \"boolean\" ? (\r\n                            value ? (\r\n                              <span style={{ color: \"#1D9E00\" }}>Active</span>\r\n                            ) : (\r\n                              <span style={{ color: \"#DD2025\" }}>Inactive</span>\r\n                            )\r\n                          ) : (\r\n                            value\r\n                          )}\r\n                        </td>\r\n                      );\r\n                    }\r\n                  }\r\n                  return <td key={key}>{value}</td>;\r\n                })}\r\n                {(DeleteAction || ReadAction || EditAction) && (\r\n                  <td>\r\n                    <span className=\"actions\">\r\n                      {EditAction && (\r\n                        <img\r\n                          src={editIcon}\r\n                          alt=\"Edit\"\r\n                          style={{\r\n                            color: \"#B4B4B4\",\r\n                            cursor: \"pointer\",\r\n                          }}\r\n                          onClick={() => {\r\n                            localStorage.removeItem(\"editId\");\r\n                            localStorage.setItem(\"editId\", obj._id);\r\n                            { client && localStorage.setItem(\"clientId\", obj.familyMember._id); }\r\n                            localStorage.removeItem(\"editPage\");\r\n                            localStorage.setItem(\"editPage\", currentPage);\r\n                            history.push(`${editRouteName}`);\r\n                          }}\r\n                        />\r\n                      )}\r\n                      {ReadAction && (\r\n                        <img\r\n                          src={management ? viewIcon : ReadImg}\r\n                          alt=\"read\"\r\n                          style={{\r\n                            color: \"#B4B4B4\",\r\n                            cursor: \"pointer\",\r\n                          }}\r\n                          onClick={() => {\r\n                            localStorage.removeItem(\"viewId\");\r\n                            localStorage.setItem(\"viewId\", obj._id);\r\n                            history.push(`${editRouteName}`);\r\n                          }}\r\n                        />\r\n                      )}\r\n                      {!management && DeleteAction && (\r\n                        <img\r\n                          onClick={() => handleOpenModal(obj._id)}\r\n                          src={deleteIcon}\r\n                          alt=\"delete\"\r\n                          style={{\r\n                            color: \"#B4B4B4\",\r\n                            cursor: \"pointer\",\r\n                          }}\r\n                        />\r\n                      )}\r\n                    </span>\r\n                  </td>\r\n                )}\r\n              </tr>\r\n            );\r\n          })}\r\n        </tbody>\r\n        {console.log(management, \"mana\")}\r\n      </table>\r\n      <div className=\"my-4\">\r\n        <ReactPaginate\r\n          previousLabel={<FaCaretLeft />}\r\n          nextLabel={<FaCaretRight />}\r\n          pageCount={pageCount}\r\n          onPageChange={handlePageChange}\r\n          forcePage={currentPage - 1}\r\n          containerClassName={\"pagination\"}\r\n          previousClassName={\"pagination-previous\"}\r\n          nextClassName={\"pagination-next\"}\r\n          pageClassName={\"pagination-item\"}\r\n          breakClassName={\"pagination-item\"}\r\n          activeClassName={\"active_page\"}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default TableComp;\r\n","module.exports = __webpack_public_path__ + \"static/media/deleteIcon.b8b189cc.svg\";","module.exports = __webpack_public_path__ + \"static/media/editIcon.d54ed3bb.svg\";","module.exports = __webpack_public_path__ + \"static/media/ReadImg.96474dd0.svg\";","module.exports = __webpack_public_path__ + \"static/media/viewIcon.02c0b4b2.svg\";","import arrayWithoutHoles from \"./arrayWithoutHoles\";\nimport iterableToArray from \"./iterableToArray\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray\";\nimport nonIterableSpread from \"./nonIterableSpread\";\nexport default function _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableSpread();\n}","import arrayLikeToArray from \"./arrayLikeToArray\";\nexport default function _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return arrayLikeToArray(arr);\n}","export default function _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && Symbol.iterator in Object(iter)) return Array.from(iter);\n}","export default function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","import * as React from 'react';\nvar isValidElement = React.isValidElement;\nexport { isValidElement };\nexport function isFragment(child) {\n  return child && isValidElement(child) && child.type === React.Fragment;\n}\nexport function replaceElement(element, replacement, props) {\n  if (!isValidElement(element)) {\n    return replacement;\n  }\n  return /*#__PURE__*/React.cloneElement(element, typeof props === 'function' ? props(element.props || {}) : props);\n}\nexport function cloneElement(element, props) {\n  return replaceElement(element, element, props);\n}","import unsupportedIterableToArray from \"./unsupportedIterableToArray\";\nexport default function _createForOfIteratorHelper(o) {\n  if (typeof Symbol === \"undefined\" || o[Symbol.iterator] == null) {\n    if (Array.isArray(o) || (o = unsupportedIterableToArray(o))) {\n      var i = 0;\n\n      var F = function F() {};\n\n      return {\n        s: F,\n        n: function n() {\n          if (i >= o.length) return {\n            done: true\n          };\n          return {\n            done: false,\n            value: o[i++]\n          };\n        },\n        e: function e(_e) {\n          throw _e;\n        },\n        f: F\n      };\n    }\n\n    throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n  }\n\n  var it,\n      normalCompletion = true,\n      didErr = false,\n      err;\n  return {\n    s: function s() {\n      it = o[Symbol.iterator]();\n    },\n    n: function n() {\n      var step = it.next();\n      normalCompletion = step.done;\n      return step;\n    },\n    e: function e(_e2) {\n      didErr = true;\n      err = _e2;\n    },\n    f: function f() {\n      try {\n        if (!normalCompletion && it[\"return\"] != null) it[\"return\"]();\n      } finally {\n        if (didErr) throw err;\n      }\n    }\n  };\n}"],"sourceRoot":""}