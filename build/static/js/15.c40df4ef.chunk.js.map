{"version":3,"sources":["component/Dashboard/DashboardComp/index.js","service/leads.js"],"names":["i","DashboardComp","useState","apCount","completed","inprogress","rejected","apData","setApData","weeklyData","setWeeklyData","monthlyData","setMonthlyData","xaxis","setXaxis","xaxisMonth","setXaxisMonth","selectedOption","setSelectedOption","barSeries","map","x","name","data","barOptions","chart","type","animations","enabled","easing","animateGradually","delay","zoom","stacked","stroke","width","curve","categories","columnOptions","height","toolbar","show","plotOptions","bar","horizontal","columnWidth","endingShape","distributed","barHeight","dataLabels","position","legend","fill","opacity","tooltip","pieSeries","pieOptions","labels","noData","text","align","verticalAlign","offsetX","offsetY","style","color","undefined","fontSize","fontFamily","getLoginCount","loginCount","response","status","pre","getDashboard","getDashboardDetails","completedApCount","inProgressApCount","rejectedApCount","console","log","getLoginReport","weeklyReort","monthlyReort","response1","data1","y_axis","x_axis","useEffect","filteredColumnSeries","series","value","className","options","checkedChildren","unCheckedChildren","checked","onChange","backgroundColor","size","getLead","params","axios","method","url","endpoints","lead","LEAD_GET","headers","Authorization","localStorage","getItem","catch","axiosErrorHandler","request","getIpoList","IPO_LIST","DASHBOARD_DETAILS","updateIpo","body","IPO_UPDATE"],"mappings":"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","file":"static/js/15.c40df4ef.chunk.js","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport \"./style.scss\";\r\nimport Chart from \"react-apexcharts\";\r\nimport { Progress } from \"antd\";\r\nimport { loginCount, monthlyReort, weeklyReort } from \"service/Auth\";\r\nimport { getDashboardDetails } from \"service/leads\";\r\nimport { Switch } from \"antd\";\r\n\r\nconst DashboardComp = () => {\r\n  const [apData, setApData] = useState({\r\n    apCount: \"\",\r\n    completed: \"\",\r\n    inprogress: \"\",\r\n    rejected: \"\",\r\n  });\r\n\r\n  const [weeklyData, setWeeklyData] = useState([]);\r\n  const [monthlyData, setMonthlyData] = useState([]);\r\n  const [xaxis, setXaxis] = useState([]);\r\n  const [xaxisMonth, setXaxisMonth] = useState([]);\r\n  const [selectedOption, setSelectedOption] = useState(\"weekly\");\r\n\r\n  const handleToggle = (checked) => {\r\n    setSelectedOption(checked ? \"monthly\" : \"weekly\");\r\n  };\r\n\r\n  const barSeries = monthlyData.map((x) => ({\r\n    name: \"Count\",\r\n    data: x,\r\n  }));\r\n\r\n  const barOptions = {\r\n    chart: {\r\n      type: \"line\",\r\n      animations: {\r\n        enabled: false,\r\n        easing: \"linear\",\r\n        animateGradually: {\r\n          enabled: true,\r\n          delay: 150,\r\n        },\r\n      },\r\n      zoom: {\r\n        enabled: false,\r\n      },\r\n      stacked: false,\r\n    },\r\n    stroke: {\r\n      width: 2,\r\n      curve: \"straight\",\r\n    },\r\n    xaxis: {\r\n      categories: xaxisMonth.map((x) => x),\r\n    },\r\n  };\r\n\r\n  const columnOptions = {\r\n    chart: {\r\n      height: 350,\r\n      type: \"bar\",\r\n      toolbar: {\r\n        show: false,\r\n      },\r\n    },\r\n    plotOptions: {\r\n      bar: {\r\n        horizontal: false,\r\n        columnWidth: \"40%\",\r\n        endingShape: \"square\",\r\n        distributed: false,\r\n        barHeight: \"100%\",\r\n        dataLabels: {\r\n          position: \"top\",\r\n        },\r\n      },\r\n    },\r\n    legend: {\r\n      position: \"bottom\",\r\n    },\r\n    dataLabels: {\r\n      enabled: false,\r\n    },\r\n    xaxis: {\r\n      categories: xaxis.map((x) => x),\r\n    },\r\n    fill: {\r\n      opacity: 1,\r\n    },\r\n    tooltip: {\r\n      enabled: false,\r\n    },\r\n  };\r\n\r\n  const pieSeries = [apData?.completed, apData?.inprogress, apData?.rejected];\r\n\r\n  const pieOptions = {\r\n    chart: {\r\n      width: 380,\r\n      type: \"pie\",\r\n    },\r\n    legend: {\r\n      position: \"bottom\",\r\n    },\r\n    labels: [\"Completed AP\", \"Inprogress AP\", \"Rejected AP\"],\r\n    dataLabels: {\r\n      enabled: true,\r\n    },\r\n    tooltip: {\r\n      enabled: false,\r\n    },\r\n    stroke: {\r\n      show: false,\r\n    },\r\n    noData: {\r\n      text: \"No Data \",\r\n      align: \"center\",\r\n      verticalAlign: \"middle\",\r\n      offsetX: 0,\r\n      offsetY: 0,\r\n      style: {\r\n        color: undefined,\r\n        fontSize: \"14px\",\r\n        fontFamily: undefined,\r\n      },\r\n    },\r\n  };\r\n\r\n  const getLoginCount = async () => {\r\n    const response = await loginCount();\r\n    if (response.status === 200) {\r\n      let data = response?.data?.data;\r\n      setApData((pre) => ({\r\n        ...pre,\r\n        apCount: data,\r\n      }));\r\n    }\r\n  };\r\n\r\n  const getDashboard = async () => {\r\n    try {\r\n      const response = await getDashboardDetails();\r\n      if (response.status === 200) {\r\n        let data = response?.data?.data;\r\n        setApData((pre) => ({\r\n          ...pre,\r\n          completed: data?.completedApCount,\r\n          inprogress: data?.inProgressApCount,\r\n          rejected: data?.rejectedApCount,\r\n        }));\r\n      }\r\n    } catch (e) {\r\n      console.log(\"e\", e);\r\n    }\r\n  };\r\n\r\n  const getLoginReport = async () => {\r\n    try {\r\n      const response = await weeklyReort();\r\n      const response1 = await monthlyReort();\r\n      if (response.status === 200 && response1.status === 200) {\r\n        let data = response?.data?.data;\r\n        let data1 = response1?.data?.data;\r\n        setWeeklyData(data?.y_axis?.map((x) => x?.data));\r\n        setXaxis(data?.x_axis);\r\n        setMonthlyData(data1?.y_axis?.map((x) => x?.data));\r\n        setXaxisMonth(data1?.x_axis);\r\n      }\r\n    } catch (e) {\r\n      console.log(\"e\", e);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    getLoginCount();\r\n    getDashboard();\r\n    getLoginReport();\r\n  }, []);\r\n\r\n  const filteredColumnSeries = weeklyData.map((series) => ({\r\n    name: \"Count\",\r\n    data: series.map((value) => value),\r\n  }));\r\n\r\n  return (\r\n    <div className=\"DashBoard px-5 py-3\">\r\n      <p>Dashboard</p>\r\n      <div className=\"d-flex align-items-center flex-wrap justify-content-between gap-3\">\r\n        <div className=\"DashBoard_section section_scroll p-4 m-0\">\r\n          <p>Completed AP</p>\r\n          <span>{apData?.completed}</span>\r\n        </div>\r\n        <div className=\"DashBoard_section section_scroll p-4 m-0\">\r\n          <p>Inprogress AP</p>\r\n          <span>{apData?.inprogress}</span>\r\n        </div>\r\n        <div className=\"DashBoard_section section_scroll p-4 m-0\">\r\n          <p>Rejected AP</p>\r\n          <span>{apData?.rejected}</span>\r\n        </div>\r\n        <div className=\"DashBoard_section section_scroll p-4 m-0\">\r\n          <p>Number of Login Done By Today</p>\r\n          <span>{apData?.apCount}</span>\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"my-4\">\r\n        <div className=\"chart_background\">\r\n          <span className=\"px-2\">AP Status</span>\r\n          {/* {apData?.completed !== 0 &&\r\n          apData?.inprogress !== 0 &&\r\n          apData?.rejected !== 0 ? (\r\n            <> */}\r\n              <Chart\r\n                options={pieOptions}\r\n                series={pieSeries}\r\n                type=\"pie\"\r\n                height={250}\r\n              />\r\n            {/* </>\r\n          ) : (\r\n            <div className=\"d-flex justify-content-center\">\r\n              No Data Available\r\n            </div>\r\n          )} */}\r\n        </div>\r\n      </div>\r\n      <div className=\"my-4\">\r\n        <div className=\"chart_background\">\r\n          <div className=\"d-flex justify-content-between align-items-center toggle-area px-2\">\r\n            <span>\r\n              {selectedOption === \"monthly\"\r\n                ? \"Monthly Login Report\"\r\n                : \"Weekly Login Report\"}\r\n            </span>\r\n            <Switch\r\n              checkedChildren=\"Monthly\"\r\n              unCheckedChildren=\"Weekly\"\r\n              checked={selectedOption === \"monthly\"}\r\n              onChange={handleToggle}\r\n              style={{ backgroundColor: \"#e47718\" }}\r\n              size={\"default\"}\r\n            />\r\n          </div>\r\n          {selectedOption === \"monthly\" ? (\r\n            <>\r\n              <Chart\r\n                options={barOptions}\r\n                series={barSeries}\r\n                type=\"line\"\r\n                height={350}\r\n              />\r\n            </>\r\n          ) : (\r\n            <>\r\n              <Chart\r\n                options={columnOptions}\r\n                series={filteredColumnSeries}\r\n                type=\"bar\"\r\n                height={350}\r\n              />\r\n            </>\r\n          )}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DashboardComp;\r\n","import axios from \"axios\";\r\nimport { endpoints } from \"config/api\";\r\nimport { axiosErrorHandler } from \"./helpers/axiosHelpers\";\r\n\r\nexport const getLead = async (params) => {\r\n  const request = await axios({\r\n    method: \"get\",\r\n    url: endpoints.lead.LEAD_GET,\r\n    headers: {\r\n      Authorization: `Bearer ${localStorage.getItem(\"token\")}`,\r\n    },\r\n    params,\r\n  }).catch(axiosErrorHandler);\r\n  return request;\r\n};\r\n\r\nexport const getIpoList = async (params) => {\r\n  const request = await axios({\r\n    method: \"get\",\r\n    url: endpoints.lead.IPO_LIST,\r\n    headers: {\r\n      Authorization: `Bearer ${localStorage.getItem(\"token\")}`,\r\n    },\r\n    params,\r\n  }).catch(axiosErrorHandler);\r\n  return request;\r\n};\r\n\r\nexport const getDashboardDetails = async () => {\r\n  const request = await axios({\r\n    method: \"post\",\r\n    url: endpoints.lead.DASHBOARD_DETAILS,\r\n    headers: {\r\n      Authorization: `Bearer ${localStorage.getItem(\"token\")}`,\r\n    },\r\n  }).catch(axiosErrorHandler);\r\n  return request;\r\n};\r\n\r\nexport const updateIpo = async (body) => {\r\n  const request = await axios({\r\n    method: \"post\",\r\n    url: endpoints.lead.IPO_UPDATE,\r\n    headers: {\r\n      Authorization: `Bearer ${localStorage.getItem(\"token\")}`,\r\n    },\r\n    data: body,\r\n  }).catch(axiosErrorHandler);\r\n  return request;\r\n};\r\n"],"sourceRoot":""}