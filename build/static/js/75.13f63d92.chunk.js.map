{"version":3,"sources":["component/common/InputBox/InputBox.js","component/common/DropDown/DropDown.js","component/common/TableComp/TableComp.js","component/Dashboard/ClientsFamily/ClientsFamily.js","pages/Dashboard/ClientsFamilyPage/ClientsFamilyPage.js","assets/images/ReadImg.svg","assets/images/deleteIcon.svg","assets/images/editIcon.svg","../node_modules/@babel/runtime/helpers/esm/inherits.js"],"names":["InputBox","props","placeholder","register","value","type","onChange","name","maxlength","icons","GB","onWheel","grayedBox","Iconic","disabled","maxLength","Search","className","ref","defaultValue","event","currentTarget","blur","e","body","target","autoComplete","size","style","color","DropDown","options","isMulti","controlShouldRenderValue","colourStyles","dropdownIndicator","styles","isClearable","components","IndicatorSeparator","TableComp","data","isCheck","EditAction","DeleteAction","ReadAction","includedKeys","pageCount","onPageChange","editRouteName","setCurrentPage","handleOpenModal","currentPage","console","log","useState","loading","setLoading","statusColors","active","inactive","open","accepted","inprogress","closed","failed","success","useEffect","length","map","key","label","obj","id","item","hasOwnProperty","statusKey","toLowerCase","includes","status","charAt","toUpperCase","slice","moment","isValid","format","test","textOnlyValue","replace","src","editIcon","alt","cursor","onClick","localStorage","removeItem","setItem","_id","history","push","ReadImg","deleteIcon","previousLabel","nextLabel","selectedPage","selected","containerClassName","previousClassName","nextClassName","pageClassName","breakClassName","activeClassName","i","ClientsFamily","create","view","edit","remove","setPageCount","setData","fetchClientList","params","page","limit","search","getClientList","response","list","pageMeta","ClientsFamilyPage","privilegesData","clientFamilyManagement","redirectTo","checkAndReturnViewableComponent","module","exports","_inherits","subClass","superClass","TypeError","prototype","Object","constructor","writable","configurable","defineProperty"],"mappings":"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","file":"static/js/75.13f63d92.chunk.js","sourcesContent":["import React from \"react\";\r\nimport {BsSearch} from \"react-icons/bs\"\r\nimport \"./InputBox.scss\";\r\nconst InputBox = (props) => {\r\n  let {\r\n    placeholder = \"\",\r\n    register = {},\r\n    value = \"\",\r\n    type = \"text\",\r\n    onChange,\r\n    name = \"\",\r\n    maxlength = \"\",\r\n    icons = false,\r\n    GB = false,\r\n    onWheel = \"\",\r\n    grayedBox = false,\r\n    Iconic = false,\r\n    disabled = false,\r\n    maxLength,\r\n    Search = false,\r\n  } = props;\r\n  return (\r\n    <>\r\n    <div className=\"input_head\">\r\n      <input\r\n        disabled={disabled}\r\n        name={name}\r\n        placeholder={placeholder}\r\n        className={\r\n          grayedBox\r\n            ? \"inputBoxGrayed\"\r\n            : Iconic\r\n            ? \"inputBoxStyle1\"\r\n            : \"inputBoxStyle\"\r\n        }\r\n        ref={register}\r\n        defaultValue={value}\r\n        type={type}\r\n        maxLength={maxLength}\r\n        onWheel={(event) => event.currentTarget.blur()}\r\n        onChange={(e) => {\r\n          const body = {\r\n            target: {\r\n              name: e.target.name,\r\n              value: e.target.value,\r\n            },\r\n          };\r\n          if (onChange) onChange(body);\r\n        }}\r\n        autoComplete={\"off\"}\r\n      />\r\n      {Iconic && Search ?  <i className=\"search_icon\"><BsSearch size={18} style={{color : \"#7E7E7E\"}}/></i> : \"\"}\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default InputBox;\r\n","import React from \"react\";\r\nimport ReactSelect from \"react-select\";\r\nimport \"./style.scss\";\r\n\r\nconst DropDown = (props) => {\r\n  const { value, onChange, options, placeholder, isMulti,controlShouldRenderValue } = props;\r\n\r\n  const colourStyles = {\r\n    dropdownIndicator: (styles) => ({\r\n      ...styles,\r\n      color: \"#000000\",\r\n    }),\r\n  };\r\n\r\n  return (\r\n    <ReactSelect\r\n      isMulti={isMulti}\r\n      value={value}\r\n      onChange={onChange}\r\n      options={options}\r\n      isClearable={false}\r\n      controlShouldRenderValue={controlShouldRenderValue}\r\n      components={{\r\n        IndicatorSeparator: () => null,\r\n      }}\r\n      styles={colourStyles}\r\n      placeholder={placeholder}\r\n    />\r\n  );\r\n};\r\n\r\nexport default DropDown;\r\n","import React, { useState } from \"react\";\r\nimport ReactPaginate from \"react-paginate\";\r\nimport \"./style.scss\";\r\nimport { FaCaretLeft, FaCaretRight } from \"react-icons/fa\";\r\nimport Loader from \"component/common/Loader/index\";\r\nimport { useEffect } from \"react\";\r\nimport moment from \"moment\";\r\nimport editIcon from \"assets/images/editIcon.svg\";\r\nimport deleteIcon from \"assets/images/deleteIcon.svg\";\r\nimport ReadImg from \"assets/images/ReadImg.svg\";\r\nimport { history } from \"helpers\";\r\n\r\nfunction TableComp(props) {\r\n  const {\r\n    data,\r\n    isCheck,\r\n    EditAction,\r\n    DeleteAction,\r\n    ReadAction,\r\n    includedKeys,\r\n    pageCount,\r\n    onPageChange,\r\n    editRouteName,\r\n    setCurrentPage,\r\n    handleOpenModal,currentPage\r\n  } = props;\r\n\r\n  console.log(\"data :>> \", data);\r\n\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  const handlePageChange = (selectedPage) => {\r\n    setCurrentPage(selectedPage.selected);\r\n    onPageChange(selectedPage.selected + 1);\r\n  };\r\n\r\n\r\n  // Dynamic colors for Status KeyName\r\n  const statusColors = {\r\n    active: \"#27AE60\",\r\n    inactive: \"#EB5757\",\r\n    open: \"#EB5757\",\r\n    accepted: \"#2F80ED\",\r\n    inprogress: \"#F2C94C\",\r\n    closed: \"#27AE60\",\r\n    failed: \"#EB5757\",\r\n    success: \"#27AE60\",\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (data && data.length > 0) {\r\n      setLoading(false);\r\n    } else {\r\n      setLoading(true);\r\n    }\r\n  }, [data]);\r\n\r\n  return (\r\n    <div className=\"table-container\">\r\n      {loading && (\r\n        <Loader\r\n          loading={loading}\r\n          className=\"d-flex align-items-center justify-content-center\"\r\n        />\r\n      )}\r\n      {!loading && (\r\n        <>\r\n          {!data ? (\r\n            <p>No data available</p>\r\n          ) : (\r\n            <>\r\n              <table className=\"data-table\">\r\n                <thead>\r\n                  <tr>\r\n                    {isCheck ? (\r\n                      <th className=\"checkBox_place\">\r\n                        <input type=\"checkbox\" className=\"mt-2 check_box\" />\r\n                      </th>\r\n                    ) : (\r\n                      <></>\r\n                    )}\r\n                    {includedKeys.map((key) => {\r\n                      return (\r\n                        <>\r\n                          <th className=\"absorbing-column\" key={key}>\r\n                            {key.label}\r\n                          </th>\r\n                        </>\r\n                      );\r\n                    })}\r\n\r\n                    {!DeleteAction && !EditAction ? null : !DeleteAction ? (\r\n                      <th className=\"checkBox_place\"></th>\r\n                    ) : (\r\n                      <>\r\n                        <th className=\"checkBox_place\">Actions</th>\r\n                        <th className=\"checkBox_place\"></th>\r\n                      </>\r\n                    )}\r\n                  </tr>\r\n                </thead>\r\n                <tbody>\r\n                  {data.map((obj) => {\r\n                    return (\r\n                      <tr key={obj.id}>\r\n                        {isCheck && (\r\n                          <td className=\"checkBox_place\">\r\n                            <input type=\"checkbox\" className=\"mt-2 check_box\" />\r\n                          </td>\r\n                        )}\r\n                        {includedKeys.map((item) => {\r\n                          const key = item.value;\r\n                          // status keys color change\r\n                          if (obj.hasOwnProperty(key)) {\r\n                            const value = obj[key];\r\n                            const label = item.label;\r\n                            const statusKey = key.toLowerCase();\r\n                            if (statusKey.includes(\"status\")) {\r\n                              const status = value.toLowerCase();\r\n                              const color = statusColors[status] || \"black\";\r\n                              return (\r\n                                <td key={key}>\r\n                                  <span style={{ color }}>\r\n                                    {value.charAt(0).toUpperCase() +\r\n                                      value.slice(1)}\r\n                                  </span>\r\n                                </td>\r\n                              );\r\n                              // for id\r\n                            } else if (statusKey.includes(\"id\")) {\r\n                              return <td key={key}>{value}</td>;\r\n                              // date and time formatter\r\n                            } else if (\r\n                              moment(\r\n                                value,\r\n                                \"YYYY-MM-DDTHH:mm:ss.SSSZ\",true\r\n                              ).isValid()\r\n                            ) {\r\n                              return (\r\n                                <td key={key}>\r\n                                  {moment(value).format(\"MMM DD YYYY hh:mm a\")}\r\n                                </td>\r\n                              );\r\n                              // for HTML tags\r\n                            } else if (\r\n                              typeof value === \"string\" &&\r\n                              /<[a-z][\\s\\S]*>/i.test(value)\r\n                            ) {\r\n                              const textOnlyValue = value.replace(\r\n                                /<[^>]+>/g,\r\n                                \"\"\r\n                              );\r\n                              return <td key={key}>{textOnlyValue}</td>;\r\n                              // for boolean\r\n                            } else {\r\n                              return (\r\n                                <td key={key}>\r\n                                  {typeof value === \"boolean\" ? (\r\n                                    value ? (\r\n                                      <span style={{ color: \"#1D9E00\" }}>\r\n                                        Active\r\n                                      </span>\r\n                                    ) : (\r\n                                      <span style={{ color: \"#DD2025\" }}>\r\n                                        Inactive\r\n                                      </span>\r\n                                    )\r\n                                  ) : (\r\n                                    value\r\n                                  )}\r\n                                </td>\r\n                              );\r\n                            }\r\n                          }\r\n                          return null;\r\n                        })}\r\n\r\n                        {EditAction && (\r\n                          <td>\r\n                            <img\r\n                              src={editIcon}\r\n                              alt=\"Edit\"\r\n                              style={{ color: \"#B4B4B4\", cursor: \"pointer\" }}\r\n                              onClick={() => {\r\n                                localStorage.removeItem(\"editId\");\r\n                                localStorage.setItem(\"editId\", obj._id);\r\n                                history.push(`${editRouteName}`);\r\n                              }}\r\n                            />\r\n                          </td>\r\n                        )}\r\n                        {ReadAction && (\r\n                          <td>\r\n                            <img\r\n                              src={ReadImg}\r\n                              alt=\"read\"\r\n                              style={{ color: \"#B4B4B4\", cursor: \"pointer\" }}\r\n                              onClick={() =>\r\n                                history.push(\r\n                                  `${editRouteName}?Editid=${obj._id}`\r\n                                )\r\n                              }\r\n                            />\r\n                          </td>\r\n                        )}\r\n                        {DeleteAction && (\r\n                          <td onClick={() => handleOpenModal(obj._id)}>\r\n                            <img\r\n                              src={deleteIcon}\r\n                              alt=\"delete\"\r\n                              style={{ color: \"#B4B4B4\", cursor: \"pointer\" }}\r\n                            />\r\n                          </td>\r\n                        )}\r\n                      </tr>\r\n                    );\r\n                  })}\r\n                </tbody>\r\n              </table>\r\n\r\n              {data.length > 0 && (\r\n                <div className=\"my-4\">\r\n                  <ReactPaginate\r\n                    previousLabel={<FaCaretLeft />}\r\n                    nextLabel={<FaCaretRight />}\r\n                    pageCount={pageCount}\r\n                    onPageChange={handlePageChange}\r\n                    containerClassName={\"pagination\"}\r\n                    previousClassName={\"pagination-previous\"}\r\n                    nextClassName={\"pagination-next\"}\r\n                    pageClassName={\"pagination-item\"}\r\n                    breakClassName={\"pagination-item\"}\r\n                    activeClassName={\"active_page\"}\r\n                  />\r\n                </div>\r\n              )}\r\n            </>\r\n          )}\r\n        </>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default TableComp;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport \"./style.scss\";\r\nimport { getClientList } from \"service/Auth\";\r\nimport InputBox from \"component/common/InputBox/InputBox\";\r\nimport DropDown from \"component/common/DropDown/DropDown\";\r\nimport TableComp from \"component/common/TableComp/TableComp\";\r\n\r\nconst ClientsFamily = ({ create, view, edit, remove }) => {\r\n  const [pageCount, setPageCount] = useState(1);\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const [data, setData] = useState([]);\r\n\r\n  const includedKeys = [\r\n    {\r\n      label: \"Client Id\",\r\n      value: \"clientId\",\r\n    },\r\n    {\r\n      label: \"Client Name\",\r\n      value: \"clientName\",\r\n    },\r\n    {\r\n      label: \"Email Id\",\r\n      value: \"email\",\r\n    },\r\n    {\r\n      label: \"Date of Birth\",\r\n      value: \"dateOfBirth\",\r\n    },\r\n    {\r\n      label: \"Relative Name\",\r\n      value: \"relativeName\",\r\n    },\r\n    {\r\n      label: \"Relationship\",\r\n      value: \"relationShip\",\r\n    },\r\n  ];\r\n\r\n  const handlePageChange = (page) => {\r\n    setCurrentPage(page);\r\n  };\r\n\r\n  const fetchClientList = async () => {\r\n    try {\r\n      let params = {\r\n        page: currentPage,\r\n        limit: 10,\r\n        search: \"\",\r\n      };\r\n      let response = await getClientList(params);\r\n      if (response.status === 200) {\r\n        console.log(\"response\", response?.data?.data);\r\n        setData(response?.data?.data?.list);\r\n        setPageCount(response?.data?.data?.pageMeta?.pageCount);\r\n        setCurrentPage(response?.data?.data?.pageMeta?.currentPage);\r\n      }\r\n    } catch (err) {}\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchClientList();\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"px-5 py-3 clients_family\">\r\n      <h6>Client’s Family</h6>\r\n      <div className=\"row align-items-center\">\r\n        <div className=\"col-4\">\r\n          <InputBox\r\n            className=\"login_input Notification_input\"\r\n            type={\"text\"}\r\n            placeholder=\"Search by Id, Username, Email\"\r\n            name=\"search\"\r\n            Iconic\r\n            Search\r\n            // value={search}\r\n            // onChange={(e) => {\r\n            //   setsearch(e.target.value);\r\n            //   setactivePage(1);\r\n            // }}\r\n          />\r\n        </div>\r\n        <div className=\"col-2\">\r\n          <DropDown\r\n            // value={value}\r\n            placeholder=\"Filter by Role\"\r\n            // onChange={(e) => {}}\r\n            // options={options}\r\n          />\r\n        </div>\r\n        <div className=\"col-2\">\r\n          <DropDown\r\n            // value={value}\r\n            placeholder=\"Filter by Status\"\r\n            // onChange={(e) => {}}\r\n            // options={options}\r\n          />\r\n        </div>\r\n      </div>\r\n      <div className=\" mt-4 p-3\">\r\n        <TableComp\r\n          data={data}\r\n          isCheck={true}\r\n          EditAction={edit}\r\n          DeleteAction={remove}\r\n          includedKeys={includedKeys}\r\n          pageCount={pageCount}\r\n          onPageChange={handlePageChange}\r\n          setCurrentPage={setCurrentPage}\r\n          editRouteName={\"/admin/clients-family/edit-client\"}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ClientsFamily;\r\n","import React, { useEffect } from \"react\";\r\nimport ClientFamily from \"component/Dashboard/ClientsFamily/ClientsFamily\";\r\nimport { Redirect } from 'react-router-dom';\r\nimport { checkAndReturnViewableComponent } from 'helpers';\r\n\r\nconst ClientsFamilyPage = ({ privilegesData = {} }) => {\r\n  const { clientFamilyManagement = {} } = privilegesData || {};\r\n\r\n  useEffect(() => {\r\n    const redirectTo = checkAndReturnViewableComponent(privilegesData, clientFamilyManagement);\r\n    if (redirectTo) {\r\n      console.log(\"toto\", redirectTo)\r\n      // return <Redirect to={redirectData.to} />;\r\n    }\r\n  }, [])\r\n\r\n  return (\r\n    <div>\r\n      <ClientFamily {...clientFamilyManagement} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ClientsFamilyPage;\r\n","module.exports = __webpack_public_path__ + \"static/media/ReadImg.96474dd0.svg\";","module.exports = __webpack_public_path__ + \"static/media/deleteIcon.b8b189cc.svg\";","module.exports = __webpack_public_path__ + \"static/media/editIcon.d54ed3bb.svg\";","import setPrototypeOf from \"./setPrototypeOf.js\";\nexport default function _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  Object.defineProperty(subClass, \"prototype\", {\n    writable: false\n  });\n  if (superClass) setPrototypeOf(subClass, superClass);\n}"],"sourceRoot":""}