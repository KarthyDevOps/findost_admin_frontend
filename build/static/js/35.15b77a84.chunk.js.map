{"version":3,"sources":["component/common/MultiSelect/index.js"],"names":["MultiSelect","options","selectedOptions","onChange","placeholder","useState","isOpen","setIsOpen","addOption","option","list","push","deleteOption","id","splice","className","tabIndex","onBlur","onClick","length","style","color","map","index","key","transform","transition","includes"],"mappings":";oKACA,06MAwFeA,UArFK,SAAH,GAKV,IAAD,IAJJC,eAAO,MAAG,GAAE,MACZC,uBAAe,MAAG,GAAE,EACpBC,EAAQ,EAARA,SAAS,EAAD,EACRC,mBAAW,MAAG,aAAY,EAE1B,EAA0BC,oBAAS,GAAM,mBAApCC,EAAM,KAAEC,EAAS,KAEhBC,EAAS,uCAAG,WAAOC,GAAM,uEAEX,OADdC,EAAOR,GACNS,KAAKF,GAAQ,SACZN,EAASO,GAAM,KAAD,kBACdH,GAAU,GAAO,KAAD,sCACvB,gBALc,sCAOTK,EAAY,uCAAG,WAAOC,GAAE,uEAET,OADfH,EAAOR,GACNY,OAAOD,EAAI,GAAG,SACbV,EAASO,GAAM,KAAD,kBACdH,GAAU,GAAO,KAAD,sCACvB,gBALiB,sCAOlB,OACE,yBACEQ,UAAU,yBACVC,SAAS,IACTC,OAAQ,kBAAMV,GAAU,KAExB,yBAAKQ,UAAU,eAAeG,QAAS,kBAAMX,GAAWD,KACtD,yBAAKS,UAAU,2BACc,GAA1Bb,EAAgBiB,OACf,0BAAMC,MAAO,CAAEC,MAAO,YAAcjB,GAEpCF,EAAgBoB,KAAI,SAACZ,EAAMa,GACzB,OACE,0BAAMC,IAAKD,EAAOR,UAAU,mBACzBL,EACD,0BACEK,UAAU,aACVK,MAAO,CAAEC,MAAO,SAChBH,QAAS,kBAAMN,EAAaW,KAC7B,eAQX,yBACEH,MAAO,CACLK,UAAWnB,EAAS,iBAAmB,eACvCoB,WAAY,SAGd,0BAAMX,UAAU,yBAGnBT,GACC,yBAAKS,UAAU,uBACZd,EAAQkB,SAAWjB,EAAgBiB,OAClC,yBAAKJ,UAAU,aACb,8BAAM,eAGRd,EAAQqB,KAAI,SAACZ,EAAMa,GACjB,OACGrB,EAAgByB,SAASjB,IACxB,yBACEc,IAAKD,EACLR,UAAU,cACVG,QAAS,kBAAMV,EAAUE,KAEzB,8BAAOA,W","file":"static/js/35.15b77a84.chunk.js","sourcesContent":["import React, { useState } from \"react\";\r\n\r\nimport \"./MultiSelect.scss\";\r\n\r\nconst MultiSelect = ({\r\n  options = [],\r\n  selectedOptions = [],\r\n  onChange,\r\n  placeholder = \"Enter here\",\r\n}) => {\r\n  let [isOpen, setIsOpen] = useState(false);\r\n\r\n  const addOption = async (option) => {\r\n    let list = selectedOptions;\r\n    list.push(option);\r\n    await onChange(list);\r\n    await setIsOpen(false);\r\n  };\r\n\r\n  const deleteOption = async (id) => {\r\n    let list = selectedOptions;\r\n    list.splice(id, 1);\r\n    await onChange(list);\r\n    await setIsOpen(false);\r\n  };\r\n\r\n  return (\r\n    <div\r\n      className=\"multi-select-container\"\r\n      tabIndex=\"0\"\r\n      onBlur={() => setIsOpen(false)}\r\n    >\r\n      <div className=\"multi-select\" onClick={() => setIsOpen(!isOpen)}>\r\n        <div className=\"selected-option-wrapper\">\r\n          {selectedOptions.length == 0 ? (\r\n            <span style={{ color: \"#817f7d\" }}>{placeholder}</span>\r\n          ) : (\r\n            selectedOptions.map((list, index) => {\r\n              return (\r\n                <span key={index} className=\"selected-option\">\r\n                  {list}\r\n                  <span\r\n                    className=\"delete-tag\"\r\n                    style={{ color: \"black\" }}\r\n                    onClick={() => deleteOption(index)}\r\n                  >\r\n                    &#x2715;\r\n                  </span>\r\n                </span>\r\n              );\r\n            })\r\n          )}\r\n        </div>\r\n        <div\r\n          style={{\r\n            transform: isOpen ? \"rotate(180deg)\" : \"rotate(0deg)\",\r\n            transition: \"0.3s\",\r\n          }}\r\n        >\r\n          <span className=\"fa fa-chevron-down\"></span>\r\n        </div>\r\n      </div>\r\n      {isOpen && (\r\n        <div className=\"multi-select-option\">\r\n          {options.length === selectedOptions.length ? (\r\n            <div className=\"no-option\">\r\n              <span>No Options</span>\r\n            </div>\r\n          ) : (\r\n            options.map((list, index) => {\r\n              return (\r\n                !selectedOptions.includes(list) && (\r\n                  <div\r\n                    key={index}\r\n                    className=\"select-list\"\r\n                    onClick={() => addOption(list)}\r\n                  >\r\n                    <span>{list}</span>\r\n                  </div>\r\n                )\r\n              );\r\n            })\r\n          )}\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MultiSelect;\r\n"],"sourceRoot":""}