{"version":3,"sources":["component/common/NormalButton/NormalButton.js","component/common/InputBox/InputBox.js","component/common/DropDown/DropDown.js","component/common/TableComp/TableComp.js","component/Dashboard/KnowledgeCenterComp/KnowledgeCenterComp.js","assets/images/ReadImg.svg","assets/images/deleteIcon.svg","assets/images/editIcon.svg"],"names":["NormalButton","this","props","className","label","onClick","id","addBnt","profileCreatNext","profileCreatNext1","profileCreatBack","authButton1","type","disabled","authButton","loginButton","tableBtn","rightIcon","leftIcon","btnSecondary","profileBtn","outlineBtn","cancel","addProductbtn","Component","InputBox","placeholder","register","value","onChange","name","maxlength","icons","GB","onWheel","grayedBox","Iconic","maxLength","Search","ref","defaultValue","event","currentTarget","blur","e","body","target","autoComplete","size","style","color","DropDown","options","isMulti","colourStyles","dropdownIndicator","styles","isClearable","components","IndicatorSeparator","TableComp","data","isCheck","EditAction","DeleteAction","ReadAction","includedKeys","pageCount","onPageChange","editRouteName","setCurrentPage","handleOpenModal","console","log","useState","loading","setLoading","statusColors","active","inactive","open","accepted","inprogress","closed","failed","success","useEffect","length","map","key","obj","item","hasOwnProperty","statusKey","toLowerCase","includes","status","charAt","toUpperCase","slice","src","editIcon","alt","cursor","history","push","_id","ReadImg","deleteIcon","previousLabel","nextLabel","selectedPage","selected","containerClassName","previousClassName","nextClassName","pageClassName","breakClassName","activeClassName","KnowledgeCenterComp","templateId","title","category","subCategory","description","page","module","exports"],"mappings":"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","file":"static/js/71.93206316.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\n// import styles from \"./button.module.scss\";\r\nimport \"./normalButton.scss\";\r\nexport class NormalButton extends Component {\r\n  render() {\r\n    const {\r\n      className = \"\",\r\n      label = \"\",\r\n      onClick,\r\n      id,\r\n      addBnt,\r\n      profileCreatNext,\r\n      profileCreatNext1,\r\n      profileCreatBack,\r\n      authButton1,\r\n      type = \"submit\",\r\n      disabled = false,\r\n      authButton = false,\r\n      loginButton = false,\r\n      tableBtn = false,\r\n      rightIcon = \"\",\r\n      leftIcon=\"\",\r\n      btnSecondary = false,\r\n      profileBtn = false,\r\n      outlineBtn = false,\r\n      cancel =false,\r\n      addProductbtn= false,\r\n    } = this.props;\r\n\r\n    return (\r\n      <div>\r\n        <button\r\n          id={id}\r\n          type={type}\r\n          className={`cursor-pointer \r\n                     ${authButton ? \"authButton\" : \"\"}\r\n                     ${profileCreatNext ? \"profileCreatNext\" : \"\"}\r\n                     ${profileCreatNext1 ? \"profileCreatNext1\" : \"\"}\r\n                     ${authButton1 ? \"authButton1\" : \"\"}\r\n                     ${profileCreatBack ? \"profileCreatBack\" : \"\"}\r\n                     ${loginButton ? \"loginButton\" : \"\"}\r\n                     ${addBnt ? \"addBnt\" : \"\"}\r\n                     ${tableBtn ? \"tableBtn\" : \"\"}\r\n                     ${btnSecondary ? \"btnSecondary\" : \"\"}\r\n                     ${profileBtn ? \"profileBtn\" : \"\"}\r\n                     ${outlineBtn ? \"outlineBtn\" : \"\"}\r\n                     ${cancel? 'cancelBtn ':''}\r\n                     ${addProductbtn? 'addProductbtn ':''}\r\n                   \r\n                     ${className}`}\r\n          onClick={onClick}\r\n          disabled={disabled}\r\n        >\r\n          {leftIcon !== \"\" ? (\r\n            <span className={`btn-left-icon ${leftIcon}`}></span>\r\n          ) : null}\r\n          {label}\r\n          {rightIcon !== \"\" ? (\r\n            <span className={`btn-right-icon ${rightIcon}`}></span>\r\n          ) : null}\r\n        </button>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default NormalButton;\r\n","import React from \"react\";\r\nimport {BsSearch} from \"react-icons/bs\"\r\nimport \"./InputBox.scss\";\r\nconst InputBox = (props) => {\r\n  let {\r\n    placeholder = \"\",\r\n    register = {},\r\n    value = \"\",\r\n    type = \"text\",\r\n    onChange,\r\n    name = \"\",\r\n    maxlength = \"\",\r\n    icons = false,\r\n    GB = false,\r\n    onWheel = \"\",\r\n    grayedBox = false,\r\n    Iconic = false,\r\n    disabled = false,\r\n    maxLength,\r\n    Search = false,\r\n  } = props;\r\n  return (\r\n    <>\r\n    <div className=\"input_head\">\r\n      <input\r\n        disabled={disabled}\r\n        name={name}\r\n        placeholder={placeholder}\r\n        className={\r\n          grayedBox\r\n            ? \"inputBoxGrayed\"\r\n            : Iconic\r\n            ? \"inputBoxStyle1\"\r\n            : \"inputBoxStyle\"\r\n        }\r\n        ref={register}\r\n        defaultValue={value}\r\n        type={type}\r\n        maxLength={maxLength}\r\n        onWheel={(event) => event.currentTarget.blur()}\r\n        onChange={(e) => {\r\n          const body = {\r\n            target: {\r\n              name: e.target.name,\r\n              value: e.target.value,\r\n            },\r\n          };\r\n          if (onChange) onChange(body);\r\n        }}\r\n        autoComplete={\"off\"}\r\n      />\r\n      {Iconic && Search ?  <i className=\"search_icon\"><BsSearch size={18} style={{color : \"#7E7E7E\"}}/></i> : \"\"}\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default InputBox;\r\n","import React from \"react\";\r\nimport ReactSelect from \"react-select\";\r\nimport \"./style.scss\";\r\n\r\nconst DropDown = (props) => {\r\n  const { value, onChange, options, placeholder, isMulti } = props;\r\n\r\n  const colourStyles = {\r\n    dropdownIndicator: (styles) => ({\r\n      ...styles,\r\n      color: \"#000000\",\r\n    }),\r\n  };\r\n\r\n  return (\r\n    <ReactSelect\r\n      isMulti={isMulti}\r\n      value={value}\r\n      onChange={onChange}\r\n      options={options}\r\n      isClearable={false}\r\n      components={{\r\n        IndicatorSeparator: () => null,\r\n      }}\r\n      styles={colourStyles}\r\n      placeholder={placeholder}\r\n    />\r\n  );\r\n};\r\n\r\nexport default DropDown;\r\n","import React, { useState } from \"react\";\r\nimport ReactPaginate from \"react-paginate\";\r\nimport \"./style.scss\";\r\nimport { FaCaretLeft, FaCaretRight } from \"react-icons/fa\";\r\nimport Loader from \"component/common/Loader/index\";\r\nimport { useEffect } from \"react\";\r\nimport moment from \"moment\";\r\nimport editIcon from \"assets/images/editIcon.svg\";\r\nimport deleteIcon from \"assets/images/deleteIcon.svg\";\r\nimport ReadImg from \"assets/images/ReadImg.svg\";\r\nimport { history } from \"helpers\";\r\n\r\nfunction TableComp(props) {\r\n  const {\r\n    data,\r\n    isCheck,\r\n    EditAction,\r\n    DeleteAction,\r\n    ReadAction,\r\n    includedKeys,\r\n    pageCount,\r\n    onPageChange,\r\n    editRouteName,\r\n    setCurrentPage,\r\n    handleOpenModal,\r\n  } = props;\r\n\r\n  console.log(\"data :>> \", data);\r\n\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  const handlePageChange = (selectedPage) => {\r\n    setCurrentPage(selectedPage.selected);\r\n    onPageChange(selectedPage.selected + 1);\r\n  };\r\n\r\n  console.log(\"includedKeys :>> \", includedKeys);\r\n\r\n  // Dynamic colors for Status KeyName\r\n  const statusColors = {\r\n    active: \"#27AE60\",\r\n    inactive: \"#EB5757\",\r\n    open: \"#EB5757\",\r\n    accepted: \"#2F80ED\",\r\n    inprogress: \"#F2C94C\",\r\n    closed: \"#27AE60\",\r\n    failed: \"#EB5757\",\r\n    success: \"#27AE60\",\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (data && data.length > 0) {\r\n      setLoading(false);\r\n    } else {\r\n      setLoading(true);\r\n    }\r\n  }, [data]);\r\n\r\n  return (\r\n    <div className=\"table-container\">\r\n      {loading && (\r\n        <Loader\r\n          loading={loading}\r\n          className=\"d-flex align-items-center justify-content-center\"\r\n        />\r\n      )}\r\n      {!loading && (\r\n        <>\r\n          {data.length === 0 ? (\r\n            <p>No data available</p>\r\n          ) : (\r\n            <>\r\n              <table className=\"data-table\">\r\n                <thead>\r\n                  <tr>\r\n                    {isCheck ? (\r\n                      <th className=\"checkBox_place\">\r\n                        <input type=\"checkbox\" className=\"mt-2 check_box\" />\r\n                      </th>\r\n                    ) : (\r\n                      <></>\r\n                    )}\r\n                    {includedKeys.map((key) => {\r\n                      return (\r\n                        <>\r\n                          <th className=\"absorbing-column\" key={key}>\r\n                            {key.label}\r\n                          </th>\r\n                        </>\r\n                      );\r\n                    })}\r\n\r\n                    {!DeleteAction && !EditAction ? null : !DeleteAction ? (\r\n                      <th className=\"checkBox_place\"></th>\r\n                    ) : (\r\n                      <>\r\n                        <th className=\"checkBox_place\">Actions</th>\r\n                        <th className=\"checkBox_place\"></th>\r\n                      </>\r\n                    )}\r\n                  </tr>\r\n                </thead>\r\n                <tbody>\r\n                  {data.map((obj) => {\r\n                    return (\r\n                      <tr key={obj.id}>\r\n                        {isCheck && (\r\n                          <td className=\"checkBox_place\">\r\n                            <input type=\"checkbox\" className=\"mt-2 check_box\" />\r\n                          </td>\r\n                        )}\r\n                        {includedKeys.map((item) => {\r\n                          const key = item.value;\r\n                          if (obj.hasOwnProperty(key)) {\r\n                            const value = obj[key];\r\n                            const label = item.label;\r\n                            const statusKey = key.toLowerCase();\r\n                            if (statusKey.includes(\"status\")) {\r\n                              const status = value.toLowerCase();\r\n                              const color = statusColors[status] || \"black\";\r\n                              return (\r\n                                <td key={key}>\r\n                                  <span style={{ color }}>\r\n                                    {value.charAt(0).toUpperCase() +\r\n                                      value.slice(1)}\r\n                                  </span>\r\n                                </td>\r\n                              );\r\n                            } else if (statusKey.includes(\"date\")) {\r\n                              return <td key={key}>{value}</td>;\r\n                            } else {\r\n                              return (\r\n                                <td key={key}>\r\n                                  {typeof value === \"boolean\" ? (\r\n                                    value ? (\r\n                                      <span style={{ color: \"#1D9E00\" }}>\r\n                                        Active\r\n                                      </span>\r\n                                    ) : (\r\n                                      <span style={{ color: \"#DD2025\" }}>\r\n                                        InActive\r\n                                      </span>\r\n                                    )\r\n                                  ) : (\r\n                                    value\r\n                                  )}\r\n                                </td>\r\n                              );\r\n                            }\r\n                          }\r\n                          return null;\r\n                        })}\r\n\r\n                        {/* {includedKeys.map((item) => {\r\n                          const key = item.value;\r\n                          if (obj.hasOwnProperty(key)) {\r\n                            const value = obj[key];\r\n                            const label = item.label;\r\n                            const statusKey = key.toLowerCase();\r\n                            if (statusKey.includes(\"status\")) {\r\n                              const status = value.toLowerCase();\r\n                              const color = statusColors[status] || \"black\";\r\n                              return (\r\n                                <td key={key}>\r\n                                  <span style={{ color }}>\r\n                                    {value.charAt(0).toUpperCase() +\r\n                                      value.slice(1)}\r\n                                  </span>\r\n                                </td>\r\n                              );\r\n                            } else {\r\n                              return (\r\n                                <td key={key}>\r\n                                  {typeof value === \"string\" &&\r\n                                  moment(value, moment.ISO_8601).isValid() ? (\r\n                                    moment(value).format(\"MMM DD YYYY hh:mm a\")\r\n                                  ) : typeof value === \"boolean\" ? (\r\n                                    value ? (\r\n                                      <span>True</span>\r\n                                    ) : (\r\n                                      <span>False</span>\r\n                                    )\r\n                                  ) : (\r\n                                    value\r\n                                  )}\r\n                                </td>\r\n                              );\r\n                            }\r\n                          }\r\n                          return null;\r\n                        })} */}\r\n\r\n                        {EditAction && (\r\n                          <td>\r\n                            <img\r\n                              src={editIcon}\r\n                              alt=\"Edit\"\r\n                              style={{ color: \"#B4B4B4\", cursor: \"pointer\" }}\r\n                              onClick={() =>\r\n                                history.push(\r\n                                  `${editRouteName}?Editid=${obj._id}`\r\n                                )\r\n                              }\r\n                            />\r\n                          </td>\r\n                        )}\r\n                        {ReadAction && (\r\n                          <td>\r\n                            <img\r\n                              src={ReadImg}\r\n                              alt=\"read\"\r\n                              style={{ color: \"#B4B4B4\", cursor: \"pointer\" }}\r\n                              onClick={() =>\r\n                                history.push(\r\n                                  `${editRouteName}?Editid=${obj._id}`\r\n                                )\r\n                              }\r\n                            />\r\n                          </td>\r\n                        )}\r\n                        {DeleteAction && (\r\n                          <td onClick={() => handleOpenModal(obj._id)}>\r\n                            <img\r\n                              src={deleteIcon}\r\n                              alt=\"delete\"\r\n                              style={{ color: \"#B4B4B4\", cursor: \"pointer\" }}\r\n                            />\r\n                          </td>\r\n                        )}\r\n                      </tr>\r\n                    );\r\n                  })}\r\n                </tbody>\r\n              </table>\r\n\r\n              {data.length > 0 && (\r\n                <div className=\"my-4\">\r\n                  <ReactPaginate\r\n                    previousLabel={<FaCaretLeft />}\r\n                    nextLabel={<FaCaretRight />}\r\n                    pageCount={pageCount}\r\n                    onPageChange={handlePageChange}\r\n                    containerClassName={\"pagination\"}\r\n                    previousClassName={\"pagination-previous\"}\r\n                    nextClassName={\"pagination-next\"}\r\n                    pageClassName={\"pagination-item\"}\r\n                    breakClassName={\"pagination-item\"}\r\n                    activeClassName={\"active_page\"}\r\n                  />\r\n                </div>\r\n              )}\r\n            </>\r\n          )}\r\n        </>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default TableComp;\r\n","import DropDown from \"component/common/DropDown/DropDown\";\r\nimport InputBox from \"component/common/InputBox/InputBox\";\r\nimport NormalButton from \"component/common/NormalButton/NormalButton\";\r\nimport { history } from \"helpers\";\r\nimport React, { useState } from \"react\";\r\nimport \"./style.scss\";\r\nimport TableComp from \"component/common/TableComp/TableComp\";\r\n\r\nconst KnowledgeCenterComp = () => {\r\n  const [pageCount, setPageCount] = useState(1);\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const [data, setData] = useState([\r\n    {\r\n      templateId: \"51322\",\r\n      status: \"inactive\",\r\n      title: \"real_time\",\r\n      category: \"Template Message\",\r\n      subCategory: \"open source\",\r\n\r\n      description: \"Nemo dolorem eum aliquam non.\",\r\n    },\r\n    {\r\n      templateId: \"51322\",\r\n      status: \"active\",\r\n      title: \"real_time\",\r\n      category: \"Template Message\",\r\n      subCategory: \"source\",\r\n\r\n      description: \"Nemo dolorem eum aliquam non.\",\r\n    },\r\n    {\r\n      templateId: \"51322\",\r\n      status: \"active\",\r\n      title: \"real_time\",\r\n      category: \"Template Message\",\r\n      subCategory: \"open source\",\r\n\r\n      description: \"Nemo dolorem eum aliquam non.\",\r\n    },\r\n    {\r\n      templateId: \"51322\",\r\n      status: \"active\",\r\n\r\n      title: \"real_time\",\r\n      category: \"Template Message\",\r\n      subCategory: \" edge\",\r\n\r\n      description: \"Nemo dolorem eum aliquam non.\",\r\n    },\r\n    {\r\n      templateId: \"51322\",\r\n      status: \"active\",\r\n      title: \"real_time\",\r\n      category: \"Template Message\",\r\n      subCategory: \"source\",\r\n\r\n      description: \"Nemo dolorem eum aliquam non.\",\r\n    },\r\n  ]);\r\n  const includedKeys = [\r\n    {\r\n      label: \"Id\",\r\n      value: \"templateId\",\r\n    },\r\n    {\r\n      label: \"Status\",\r\n      value: \"status\",\r\n    },\r\n    {\r\n      label: \"Title\",\r\n      value: \"title\",\r\n    },\r\n    {\r\n      label: \"Category\",\r\n      value: \"category\",\r\n    },\r\n    {\r\n      label: \"Sub Category\",\r\n      value: \"subCategory\",\r\n    },\r\n\r\n    {\r\n      label: \"Description\",\r\n      value: \"description\",\r\n    },\r\n  ];\r\n  const handlePageChange = (page) => {\r\n    setCurrentPage(page);\r\n  };\r\n\r\n  return (\r\n    <div className=\"px-5 py-3 knowledge_center\">\r\n      <h6>Knowledge Center</h6>\r\n      <div className=\"row align-items-center\">\r\n        <div className=\"col-3\">\r\n          <InputBox\r\n            className=\"login_input Notification_input\"\r\n            type={\"text\"}\r\n            placeholder=\"Search by Id, Title, Email\"\r\n            name=\"search\"\r\n            Iconic\r\n            Search\r\n            // value={search}\r\n            // onChange={(e) => {\r\n            //   setsearch(e.target.value);\r\n            //   setactivePage(1);\r\n            // }}\r\n          />\r\n        </div>\r\n        <div className=\"col-2\">\r\n          <DropDown\r\n            // value={value}\r\n            placeholder=\"Filter by Category\"\r\n            // onChange={(e) => {}}\r\n            // options={options}\r\n          />\r\n        </div>\r\n        <div className=\"col-2\">\r\n          <DropDown\r\n            // value={value}\r\n            placeholder=\"Filter by Sub Category\"\r\n            // onChange={(e) => {}}\r\n            // options={options}\r\n          />\r\n        </div>\r\n        <div className=\"col-2\">\r\n          <DropDown\r\n            // value={value}\r\n            placeholder=\"Filter by Status\"\r\n            // onChange={(e) => {}}\r\n            // options={options}\r\n          />\r\n        </div>\r\n        <div className=\"col-1\"></div>\r\n        <div className=\"col-2\">\r\n          <NormalButton\r\n            className=\"loginButton\"\r\n            label={\"Add New\"}\r\n            onClick={() =>\r\n              history.push(\"/admin/knowledge-center/add-knowledge\")\r\n            }\r\n          />\r\n        </div>\r\n        <div className=\" mt-4 p-3\">\r\n          {data.length > 0 ? (\r\n            <TableComp\r\n              data={data}\r\n              isCheck={true}\r\n              EditAction={true}\r\n              DeleteAction={true}\r\n              includedKeys={includedKeys}\r\n              pageCount={pageCount}\r\n              onPageChange={handlePageChange}\r\n              setCurrentPage={setCurrentPage}\r\n              editRouteName={\"/admin/knowledge-center/add-knowledge\"}\r\n            />\r\n          ) : (\r\n            <p className=\"text-center mt-5 fs-15\">No Data Available</p>\r\n          )}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default KnowledgeCenterComp;\r\n","module.exports = __webpack_public_path__ + \"static/media/ReadImg.96474dd0.svg\";","module.exports = __webpack_public_path__ + \"static/media/deleteIcon.b8b189cc.svg\";","module.exports = __webpack_public_path__ + \"static/media/editIcon.d54ed3bb.svg\";"],"sourceRoot":""}