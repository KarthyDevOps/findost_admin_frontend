{"version":3,"sources":["component/Dashboard/ApManagement/index.js","component/common/InputBox/InputBox.js","component/common/TableComp/EmptyTable.js","component/common/TableComp/TableComp.js","assets/images/ReadImg.svg","assets/images/deleteIcon.svg","assets/images/editIcon.svg","assets/images/viewIcon.svg"],"names":["ApManagementComp","apAccess","useForm","mode","errors","control","useState","data","setData","search","setSearch","pageCount","setPageCount","currentPage","setCurrentPage","isLoading","setIsLoading","includedKeys","label","value","width","getApList","page","params","limit","getUserList","response","status","list","length","pageMeta","console","log","handleSearchChange","useCallback","debounceFunction","useEffect","className","style","gap","type","placeholder","name","Iconic","onChange","e","target","size","color","view","loading","ReadAction","onPageChange","editRouteName","management","InputBox","props","register","maxlength","icons","GB","onWheel","grayedBox","disabled","maxLength","Search","ref","defaultValue","event","currentTarget","blur","body","autoComplete","EmptyTable","EditAction","DeleteAction","map","key","TableComp","handleOpenModal","onRowsSelect","calmanagement","client","selectedRows","setSelectedRows","statusColors","active","inactive","open","accepted","inprogress","closed","failed","success","PENDING","COMPLETED","updatedRows","obj","_id","checked","id","rowId","includes","filter","handleRowSelect","item","nestedKeys","split","nestedKey","hasOwnProperty","getValueForKey","statusKey","toLowerCase","charAt","toUpperCase","slice","title","href","src","alt","moment","format","isValid","test","textOnlyValue","replace","editIcon","cursor","onClick","localStorage","removeItem","setItem","familyMember","history","push","viewIcon","ReadImg","deleteIcon","previousLabel","nextLabel","selectedPage","selected","forcePage","containerClassName","previousClassName","nextClassName","pageClassName","breakClassName","activeClassName","module","exports"],"mappings":"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","file":"static/js/26.1346e9c4.chunk.js","sourcesContent":["import React, { useState, useEffect, useCallback } from \"react\";\r\n// styles\r\nimport \"./style.scss\";\r\n// internal components\r\nimport InputBox from \"component/common/InputBox/InputBox\";\r\nimport EmptyTable from \"component/common/TableComp/EmptyTable\";\r\nimport TableComp from \"component/common/TableComp/TableComp\";\r\nimport Loader from \"component/common/Loader\";\r\n// services\r\nimport { getUserList } from \"service/Auth\";\r\nimport { BsSearch } from \"react-icons/bs\";\r\nimport { useForm } from \"react-hook-form\";\r\n// helpers\r\nimport { debounceFunction } from \"helpers\";\r\n\r\nconst ApManagementComp = ({ apAccess }) => {\r\n  const { errors, control } = useForm({\r\n    mode: \"onChange\",\r\n  });\r\n\r\n  const [data, setData] = useState([]);\r\n  const [search, setSearch] = useState(\"\");\r\n  const [pageCount, setPageCount] = useState(1);\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const [isLoading, setIsLoading] = useState(false);\r\n\r\n  const includedKeys = [\r\n    {\r\n      label: \"AP Name\",\r\n      value: \"name\",\r\n      width: \"40%\",\r\n    },\r\n    {\r\n      label: \"Email Id\",\r\n      value: \"email\",\r\n      width: \"50%\",\r\n    },\r\n    {\r\n      label: \"Phone Number\",\r\n      value: \"mobileNumber\",\r\n      width: \"30%\",\r\n    },\r\n    {\r\n      label: \"Occupation\",\r\n      value: \"role\",\r\n    },\r\n  ];\r\n\r\n  const getApList = async (page) => {\r\n    try {\r\n      setIsLoading(true);\r\n\r\n      let params = {\r\n        page: page ? page : 1,\r\n        limit: 10,\r\n        search: search,\r\n      };\r\n      let response = await getUserList(params);\r\n      if (response.status === 200 && response?.data?.data?.list.length > 0) {\r\n        setData(response?.data?.data?.list);\r\n        setPageCount(response?.data?.data?.pageMeta?.pageCount);\r\n        setCurrentPage(response?.data?.data?.pageMeta?.currentPage);\r\n      } else {\r\n        setData([]);\r\n      }\r\n    } catch (e) {\r\n      console.log(\"e :>> \", e);\r\n    } finally {\r\n      setIsLoading(false);\r\n    }\r\n  };\r\n\r\n  const handleSearchChange = useCallback(\r\n    debounceFunction((value) => {\r\n      setSearch(value);\r\n    }, 500),\r\n    []\r\n  );\r\n\r\n  const handlePageChange = (page) => {\r\n    setCurrentPage(page);\r\n    getApList(page);\r\n  };\r\n\r\n  useEffect(() => {\r\n    getApList(1);\r\n  }, [search]);\r\n\r\n  return (\r\n    <>\r\n      <div className=\"staff_table px-5 py-3\">\r\n        <p className=\"staff_title m-0\">Ap Management</p>\r\n        <div className=\"flex align-items-center justify-content-between\">\r\n          <div className=\"flex align-items-center\" style={{ gap: \"1em\" }}>\r\n            <div\r\n              className=\"pl-0 my-3 staff_Search cursor-pointer\"\r\n              style={{ width: \"300px\" }}\r\n            >\r\n              <InputBox\r\n                className=\"login_input\"\r\n                type={\"text\"}\r\n                placeholder=\"Search by Id, Username, Email\"\r\n                errors={errors}\r\n                name=\"search\"\r\n                Iconic\r\n                value={search}\r\n                onChange={(e) => handleSearchChange(e.target.value)}\r\n              />\r\n              <i className=\"search_iconic\">\r\n                <BsSearch size={18} style={{ color: \"#7E7E7E\" }} />\r\n              </i>\r\n            </div>\r\n          </div>\r\n          <div className=\"flex align-items-center\" style={{ gap: \"1em\" }}></div>\r\n        </div>\r\n        {console.log(apAccess?.view)}\r\n        {isLoading ? (\r\n          <Loader\r\n            loading={isLoading}\r\n            className=\"d-flex align-items-center justify-content-center\"\r\n          />\r\n        ) : data.length > 0 ? (\r\n          <div className=\"\">\r\n            <TableComp\r\n              data={data}\r\n              ReadAction={apAccess?.view}\r\n              includedKeys={includedKeys}\r\n              pageCount={pageCount}\r\n              onPageChange={handlePageChange}\r\n              currentPage={currentPage}\r\n              setCurrentPage={setCurrentPage}\r\n              editRouteName={\"/admin/ap-management/view-ap-management\"}\r\n              management={true}\r\n            />\r\n          </div>\r\n        ) : (\r\n          <div className=\"\">\r\n            <EmptyTable\r\n              ReadAction={apAccess?.view}\r\n              includedKeys={includedKeys}\r\n            />\r\n            <p className=\"d-flex align-items-center justify-content-center mt-5 pt-5\">\r\n              No Data Available\r\n            </p>\r\n          </div>\r\n        )}\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ApManagementComp;\r\n","import React from \"react\";\r\nimport {BsSearch} from \"react-icons/bs\"\r\nimport \"./InputBox.scss\";\r\nconst InputBox = (props) => {\r\n  let {\r\n    placeholder = \"\",\r\n    register = {},\r\n    value = \"\",\r\n    type = \"text\",\r\n    onChange,\r\n    name = \"\",\r\n    maxlength = \"\",\r\n    icons = false,\r\n    GB = false,\r\n    onWheel = \"\",\r\n    grayedBox = false,\r\n    Iconic = false,\r\n    disabled = false,\r\n    maxLength,\r\n    Search = false,\r\n  } = props;\r\n  return (\r\n    <>\r\n    <div className=\"input_head\">\r\n      <input\r\n        disabled={disabled}\r\n        name={name}\r\n        placeholder={placeholder}\r\n        className={\r\n          disabled ? \"inputBoxGrayed\" :\r\n          grayedBox\r\n            ? \"inputBoxGrayed\"\r\n            : Iconic\r\n            ? \"inputBoxStyle1\"\r\n            : \"inputBoxStyle\"\r\n        }\r\n        ref={register}\r\n        defaultValue={value}\r\n        type={type}\r\n        maxLength={maxLength}\r\n        onWheel={(event) => event.currentTarget.blur()}\r\n        onChange={(e) => {\r\n          const body = {\r\n            target: {\r\n              name: e.target.name,\r\n              value: e.target.value,\r\n            },\r\n          };\r\n          if (onChange) onChange(body);\r\n        }}\r\n        autoComplete={\"off\"}\r\n      />\r\n      {Iconic && Search ?  <i className=\"search_icon\"><BsSearch size={18} style={{color : \"#7E7E7E\"}}/></i> : \"\"}\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default InputBox;\r\n","import React from \"react\";\r\n// styles\r\nimport \"./style.scss\";\r\n\r\nconst EmptyTable = (props) => {\r\n  const { EditAction, DeleteAction, ReadAction, includedKeys } = props;\r\n  return (\r\n    <div className=\"table-container\">\r\n      <table className=\"data-table\">\r\n        <thead>\r\n          <tr>\r\n            {DeleteAction && (\r\n              <th className=\"checkBox_place\">\r\n                <input\r\n                  type=\"checkbox\"\r\n                  //   onChange={handleSelectAll}\r\n                  //   checked={selectedRows.length === data.length}\r\n                  className=\"check_box cursor-pointer\"\r\n                />\r\n              </th>\r\n            )}\r\n            {includedKeys.map((key) => {\r\n              return (\r\n                <>\r\n                  <th\r\n                    className=\"\"\r\n                    key={key}\r\n                    style={{ ...(key?.width ? { width: key?.width } : {}) }}\r\n                  >\r\n                    {key.label}\r\n                  </th>\r\n                </>\r\n              );\r\n            })}\r\n\r\n            {(DeleteAction || ReadAction || EditAction) && (\r\n              <th className=\"action_place\"> Actions</th>\r\n            )}\r\n          </tr>\r\n        </thead>\r\n      </table>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default EmptyTable;\r\n","import React, { useState } from \"react\";\r\n// styles\r\nimport \"./style.scss\";\r\n// images\r\nimport editIcon from \"assets/images/editIcon.svg\";\r\nimport deleteIcon from \"assets/images/deleteIcon.svg\";\r\nimport ReadImg from \"assets/images/ReadImg.svg\";\r\nimport viewIcon from \"assets/images/viewIcon.svg\";\r\n// services\r\nimport ReactPaginate from \"react-paginate\";\r\nimport { FaCaretLeft, FaCaretRight } from \"react-icons/fa\";\r\nimport { Tooltip } from \"antd\";\r\nimport moment from \"moment\";\r\n// helpers\r\nimport { history } from \"helpers\";\r\n\r\nfunction TableComp(props) {\r\n  const {\r\n    data,\r\n    EditAction,\r\n    DeleteAction,\r\n    ReadAction,\r\n    includedKeys,\r\n    pageCount,\r\n    onPageChange,\r\n    editRouteName,\r\n    setCurrentPage,\r\n    handleOpenModal,\r\n    currentPage,\r\n    onRowsSelect,\r\n    calmanagement = false,\r\n    management = false,\r\n    client = false,\r\n  } = props;\r\n\r\n  const [selectedRows, setSelectedRows] = useState([]);\r\n  // Dynamic colors for Status KeyName\r\n  const statusColors = {\r\n    active: \"#27AE60\",\r\n    inactive: \"#EB5757\",\r\n    open: \"#EB5757\",\r\n    accepted: \"#2F80ED\",\r\n    inprogress: \"#F2C94C\",\r\n    closed: \"#27AE60\",\r\n    failed: \"#EB5757\",\r\n    success: \"#27AE60\",\r\n    PENDING: \"#EB5757\",\r\n    COMPLETED: \"#27AE60\",\r\n  };\r\n\r\n  const handlePageChange = (selectedPage) => {\r\n    setCurrentPage(selectedPage.selected + 1);\r\n    onPageChange(selectedPage.selected + 1);\r\n  };\r\n\r\n  const handleRowSelect = (rowId) => {\r\n    let updatedRows;\r\n    if (selectedRows.includes(rowId)) {\r\n      updatedRows = selectedRows.filter((id) => id !== rowId);\r\n    } else {\r\n      updatedRows = [...selectedRows, rowId];\r\n    }\r\n    setSelectedRows(updatedRows);\r\n    onRowsSelect(updatedRows);\r\n  };\r\n\r\n  const handleSelectAll = () => {\r\n    let updatedRows;\r\n    if (selectedRows.length === data.length) {\r\n      updatedRows = [];\r\n    } else {\r\n      const allRowIds = data.map((obj) => obj._id);\r\n      updatedRows = allRowIds;\r\n    }\r\n    setSelectedRows(updatedRows);\r\n    onRowsSelect(updatedRows);\r\n  };\r\n\r\n  const getValueForKey = (key, obj) => {\r\n    const nestedKeys = key.split(\".\");\r\n    let value = obj;\r\n    for (const nestedKey of nestedKeys) {\r\n      if (value.hasOwnProperty(nestedKey)) {\r\n        value = value[nestedKey];\r\n      } else {\r\n        return (value = \"-\");\r\n      }\r\n    }\r\n    return value;\r\n  };\r\n  return (\r\n    <div className=\"table-container\">\r\n      <table className=\"data-table\">\r\n        <thead>\r\n          <tr>\r\n            {DeleteAction && (\r\n              <th className=\"checkBox_place\">\r\n                <input\r\n                  type=\"checkbox\"\r\n                  onChange={handleSelectAll}\r\n                  checked={selectedRows.length === data.length}\r\n                  className=\"check_box cursor-pointer\"\r\n                />\r\n              </th>\r\n            )}\r\n            {includedKeys.map((key) => {\r\n              return (\r\n                <>\r\n                  <th\r\n                    className=\"\"\r\n                    key={key}\r\n                    style={{ ...(key?.width ? { width: key?.width } : {}) }}\r\n                  >\r\n                    {key.label}\r\n                  </th>\r\n                </>\r\n              );\r\n            })}\r\n\r\n            {(DeleteAction || ReadAction || EditAction) && (\r\n              <th className=\"action_place\"> Actions</th>\r\n            )}\r\n          </tr>\r\n        </thead>\r\n\r\n        <tbody>\r\n          {data.map((obj) => {\r\n            return (\r\n              <tr key={obj.id}>\r\n                {DeleteAction && (\r\n                  <td className=\"checkBox_place\">\r\n                    <input\r\n                      type=\"checkbox\"\r\n                      onChange={() => handleRowSelect(obj._id)}\r\n                      checked={selectedRows.includes(obj._id)}\r\n                      className=\"check_box cursor-pointer\"\r\n                    />\r\n                  </td>\r\n                )}\r\n                {includedKeys.map((item) => {\r\n                  const key = item.value;\r\n                  const value = getValueForKey(key, obj);\r\n                  // status keys color change\r\n                  if (obj.hasOwnProperty(key)) {\r\n                    const value = obj[key];\r\n                    const label = item.label;\r\n                    const statusKey = key.toLowerCase();\r\n                    if (statusKey.includes(\"status\")) {\r\n                      const status = value.toLowerCase();\r\n                      const color = statusColors[status] || \"black\";\r\n                      return (\r\n                        <td key={key}>\r\n                          <span style={{ color }}>\r\n                            {value.charAt(0).toUpperCase() + value.slice(1)}\r\n                          </span>\r\n                        </td>\r\n                      );\r\n                      // for id\r\n                    } else if (statusKey.includes(\"aditionalinfo\")) {\r\n                      return (\r\n                        <Tooltip title={value} color={\"#fff\"} key={\"#fff\"}>\r\n                          <td key={key}>{value}</td>\r\n                        </Tooltip>\r\n                      );\r\n                    } else if (statusKey.includes(\"id\")) {\r\n                      return <td key={key}>{value}</td>;\r\n                    } else if (\r\n                      calmanagement &&\r\n                      statusKey.includes(\"description\")\r\n                    ) {\r\n                      return (\r\n                        <td key={key}>\r\n                          <a href={value} target=\"_blank\">\r\n                            {value}\r\n                          </a>\r\n                        </td>\r\n                      );\r\n                    } else if (statusKey.includes(\"type\")) {\r\n                      return (\r\n                        <td key={key}>\r\n                          {value.charAt(0).toUpperCase() + value.slice(1)}\r\n                        </td>\r\n                      );\r\n                    } else if (statusKey.includes(\"producticons3\")) {\r\n                      return (\r\n                        <td key={key}>\r\n                          <a href={value} target=\"_blank\">\r\n                            <img src={value} alt={value} className=\"img\" />{\" \"}\r\n                          </a>\r\n                        </td>\r\n                      );\r\n                    } else if (statusKey.includes(\"imageurls3\")) {\r\n                      return (\r\n                        <td key={key}>\r\n                          <a href={value} target=\"_blank\">\r\n                            <img src={value} alt={value} className=\"img\" />{\" \"}\r\n                          </a>\r\n                        </td>\r\n                      );\r\n                      // date formatter\r\n                    } else if (statusKey === \"date\") {\r\n                      return (\r\n                        <td key={key}>{moment(value).format(\"MMM DD YYYY\")}</td>\r\n                      );\r\n                      // date and time formatter\r\n                    } else if (\r\n                      moment(value, \"YYYY-MM-DDTHH:mm:ss.SSSZ\", true).isValid()\r\n                    ) {\r\n                      return (\r\n                        <td key={key}>\r\n                          {moment(value).format(\"MMM DD YYYY hh:mm a\")}\r\n                        </td>\r\n                      );\r\n                    } else if (\r\n                      typeof value === \"string\" &&\r\n                      /<[a-z][\\s\\S]*>/i.test(value)\r\n                    ) {\r\n                      const textOnlyValue = value.replace(/<[^>]+>/g, \"\");\r\n                      return <td key={key}>{textOnlyValue}</td>;\r\n                      // for boolean\r\n                    } else {\r\n                      return (\r\n                        <td key={key}>\r\n                          {typeof value === \"boolean\" ? (\r\n                            value ? (\r\n                              <span style={{ color: \"#1D9E00\" }}>Active</span>\r\n                            ) : (\r\n                              <span style={{ color: \"#DD2025\" }}>Inactive</span>\r\n                            )\r\n                          ) : (\r\n                            value\r\n                          )}\r\n                        </td>\r\n                      );\r\n                    }\r\n                  }\r\n                  return <td key={key}>{value}</td>;\r\n                })}\r\n                {(DeleteAction || ReadAction || EditAction) && (\r\n                  <td>\r\n                    <span className=\"actions\">\r\n                      {EditAction && (\r\n                        <img\r\n                          src={editIcon}\r\n                          alt=\"Edit\"\r\n                          style={{\r\n                            color: \"#B4B4B4\",\r\n                            cursor: \"pointer\",\r\n                          }}\r\n                          onClick={() => {\r\n                            localStorage.removeItem(\"editId\");\r\n                            localStorage.setItem(\"editId\", obj._id);\r\n                            { client && localStorage.setItem(\"clientId\", obj.familyMember._id); }\r\n                            localStorage.removeItem(\"editPage\");\r\n                            localStorage.setItem(\"editPage\", currentPage);\r\n                            history.push(`${editRouteName}`);\r\n                          }}\r\n                        />\r\n                      )}\r\n                      {ReadAction && (\r\n                        <img\r\n                          src={management ? viewIcon : ReadImg}\r\n                          alt=\"read\"\r\n                          style={{\r\n                            color: \"#B4B4B4\",\r\n                            cursor: \"pointer\",\r\n                          }}\r\n                          onClick={() => {\r\n                            localStorage.removeItem(\"viewId\");\r\n                            localStorage.setItem(\"viewId\", obj._id);\r\n                            history.push(`${editRouteName}`);\r\n                          }}\r\n                        />\r\n                      )}\r\n                      {!management && DeleteAction && (\r\n                        <img\r\n                          onClick={() => handleOpenModal(obj._id)}\r\n                          src={deleteIcon}\r\n                          alt=\"delete\"\r\n                          style={{\r\n                            color: \"#B4B4B4\",\r\n                            cursor: \"pointer\",\r\n                          }}\r\n                        />\r\n                      )}\r\n                    </span>\r\n                  </td>\r\n                )}\r\n              </tr>\r\n            );\r\n          })}\r\n        </tbody>\r\n        {console.log(management, \"mana\")}\r\n      </table>\r\n      <div className=\"my-4\">\r\n        <ReactPaginate\r\n          previousLabel={<FaCaretLeft />}\r\n          nextLabel={<FaCaretRight />}\r\n          pageCount={pageCount}\r\n          onPageChange={handlePageChange}\r\n          forcePage={currentPage - 1}\r\n          containerClassName={\"pagination\"}\r\n          previousClassName={\"pagination-previous\"}\r\n          nextClassName={\"pagination-next\"}\r\n          pageClassName={\"pagination-item\"}\r\n          breakClassName={\"pagination-item\"}\r\n          activeClassName={\"active_page\"}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default TableComp;\r\n","module.exports = __webpack_public_path__ + \"static/media/ReadImg.96474dd0.svg\";","module.exports = __webpack_public_path__ + \"static/media/deleteIcon.b8b189cc.svg\";","module.exports = __webpack_public_path__ + \"static/media/editIcon.d54ed3bb.svg\";","module.exports = __webpack_public_path__ + \"static/media/viewIcon.02c0b4b2.svg\";"],"sourceRoot":""}