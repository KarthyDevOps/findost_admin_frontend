{"version":3,"sources":["component/common/RichText/index.js"],"names":["uploadImageCallBack","file","Promise","resolve","reject","xhr","XMLHttpRequest","open","setRequestHeader","data","FormData","append","send","addEventListener","response","JSON","parse","responseText","error","EditorContainer","editorState","setEditorState","initialState","value","placeholder","className","onEditorStateChange","draftToHtml","convertToRaw","getCurrentContent","toolbar","inline","inDropdown","list","textAlign","link","history","image","uploadCallback","alt","present","mandatory"],"mappings":"iGAAA,kFAOA,SAASA,EAAoBC,GAC3B,OAAO,IAAIC,SAAQ,SAACC,EAASC,GAC3B,IAAMC,EAAM,IAAIC,eAChBD,EAAIE,KAAK,OAAQ,iCACjBF,EAAIG,iBAAiB,gBAAiB,mBACtC,IAAMC,EAAO,IAAIC,SACjBD,EAAKE,OAAO,QAASV,GACrBI,EAAIO,KAAKH,GACTJ,EAAIQ,iBAAiB,QAAQ,WAC3B,IAAMC,EAAWC,KAAKC,MAAMX,EAAIY,cAChCd,EAAQW,MAEVT,EAAIQ,iBAAiB,SAAS,WAC5B,IAAMK,EAAQH,KAAKC,MAAMX,EAAIY,cAC7Bb,EAAOc,SAyCEC,UApCS,SAAH,GAMd,IALLC,EAAW,EAAXA,YACAC,EAAc,EAAdA,eAEM,GADM,EAAZC,aACK,EAALC,MAAK,EACLC,oBAAW,MAAG,8BAA6B,EAS3C,OACE,yBAAKC,UAAU,UACb,kBAAC,SAAM,CACLL,YAAaA,EACbM,oBATsB,SAACN,GACbO,IAAYC,uBAAaR,EAAYS,sBACnDR,EAAeD,IAQXI,YAAaA,EACbM,QAAS,CACPC,OAAQ,CAAEC,YAAY,GACtBC,KAAM,CAAED,YAAY,GACpBE,UAAW,CAAEF,YAAY,GACzBG,KAAM,CAAEH,YAAY,GACpBI,QAAS,CAAEJ,YAAY,GACvBK,MAAO,CACLC,eAAgBtC,EAChBuC,IAAK,CAAEC,SAAS,EAAMC,WAAW","file":"static/js/49.01f4da56.chunk.js","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { render } from \"react-dom\";\r\nimport { EditorState, convertToRaw, ContentState } from \"draft-js\";\r\nimport { Editor } from \"react-draft-wysiwyg\";\r\nimport draftToHtml from \"draftjs-to-html\";\r\nimport htmlToDraft from \"html-to-draftjs\";\r\n\r\nfunction uploadImageCallBack(file) {\r\n  return new Promise((resolve, reject) => {\r\n    const xhr = new XMLHttpRequest();\r\n    xhr.open(\"POST\", \"https://api.imgur.com/3/image\");\r\n    xhr.setRequestHeader(\"Authorization\", \"Client-ID XXXXX\");\r\n    const data = new FormData();\r\n    data.append(\"image\", file);\r\n    xhr.send(data);\r\n    xhr.addEventListener(\"load\", () => {\r\n      const response = JSON.parse(xhr.responseText);\r\n      resolve(response);\r\n    });\r\n    xhr.addEventListener(\"error\", () => {\r\n      const error = JSON.parse(xhr.responseText);\r\n      reject(error);\r\n    });\r\n  });\r\n}\r\n\r\nconst EditorContainer = ({\r\n  editorState,\r\n  setEditorState,\r\n  initialState,\r\n  value,\r\n  placeholder = \"Type your broadcast message\",\r\n}) => {\r\n  // const [editorState, setEditorState] = useState(EditorState.createEmpty());\r\n\r\n  const onEditorStateChange = (editorState) => {\r\n    const draft = draftToHtml(convertToRaw(editorState.getCurrentContent()));\r\n    setEditorState(editorState);\r\n  };\r\n\r\n  return (\r\n    <div className=\"editor\">\r\n      <Editor\r\n        editorState={editorState}\r\n        onEditorStateChange={onEditorStateChange}\r\n        placeholder={placeholder}\r\n        toolbar={{\r\n          inline: { inDropdown: true },\r\n          list: { inDropdown: true },\r\n          textAlign: { inDropdown: true },\r\n          link: { inDropdown: true },\r\n          history: { inDropdown: true },\r\n          image: {\r\n            uploadCallback: uploadImageCallBack,\r\n            alt: { present: true, mandatory: true },\r\n          },\r\n        }}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default EditorContainer;\r\n"],"sourceRoot":""}