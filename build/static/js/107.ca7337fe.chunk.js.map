{"version":3,"sources":["component/common/TableComp/EmptyTable.js","component/common/TableComp/TableComp.js","service/leads.js","component/Dashboard/IpoManagement/IpoManagementComp.js","pages/Dashboard/IpoManagement/IpoManagement.js","assets/images/deleteIcon.svg","assets/images/editIcon.svg","assets/images/ReadImg.svg","assets/images/viewIcon.svg","../node_modules/antd/es/_util/reactNode.js"],"names":["EmptyTable","props","EditAction","DeleteAction","ReadAction","includedKeys","React","createElement","className","type","map","key","Fragment","style","width","label","TableComp","data","pageCount","onPageChange","editRouteName","setCurrentPage","handleOpenModal","currentPage","onRowsSelect","calmanagement","management","client","isIpo","isPagination","selectedRows","setSelectedRows","useState","statusColors","active","inactive","open","accepted","inprogress","closed","failed","success","PENDING","COMPLETED","onChange","handleSelectAll","updatedRows","length","obj","_id","checked","id","rowId","includes","filter","handleRowSelect","item","value","getValueForKey","nestedKeys","split","nestedKey","hasOwnProperty","moment","isValid","format","statusKey","toLowerCase","status","color","charAt","toUpperCase","slice","Tooltip","title","href","target","src","alt","test","textOnlyValue","replace","editIcon","cursor","onClick","localStorage","removeItem","setItem","familyMember","JSON","stringify","history","push","concat","viewIcon","ReadImg","deleteIcon","console","log","ReactPaginate","previousLabel","FaCaretLeft","nextLabel","FaCaretRight","selectedPage","selected","forcePage","containerClassName","previousClassName","nextClassName","pageClassName","breakClassName","activeClassName","getLead","async","axios","method","url","endpoints","lead","LEAD_GET","headers","Authorization","getItem","params","catch","axiosErrorHandler","getIpoList","IPO_LIST","getDashboardDetails","DASHBOARD_DETAILS","updateIpo","IPO_UPDATE","body","IpoManagementComp","_ref","ipoManagement","isLoading","setIsLoading","setData","useEffect","response","_response$data","error","fetchData","Loader","loading","edit","IpoManagement","privilegesData","dispatch","useDispatch","getadminPrivileges","redirectTo","checkAndReturnViewableComponent","to","module","exports","isValidElement","isFragment","child","cloneElement","element","replacement","replaceElement"],"mappings":"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","file":"static/js/107.ca7337fe.chunk.js","sourcesContent":["import React from \"react\";\r\n// styles\r\nimport \"./style.scss\";\r\n\r\nconst EmptyTable = (props) => {\r\n  const { EditAction, DeleteAction, ReadAction, includedKeys } = props;\r\n  return (\r\n    <div className=\"table-container\">\r\n      <table className=\"data-table\">\r\n        <thead>\r\n          <tr>\r\n            {DeleteAction && (\r\n              <th className=\"checkBox_place\">\r\n                <input\r\n                  type=\"checkbox\"\r\n                  //   onChange={handleSelectAll}\r\n                  //   checked={selectedRows.length === data.length}\r\n                  className=\"check_box cursor-pointer\"\r\n                />\r\n              </th>\r\n            )}\r\n            {includedKeys.map((key) => {\r\n              return (\r\n                <>\r\n                  <th\r\n                    className=\"\"\r\n                    key={key}\r\n                    style={{ ...(key?.width ? { width: key?.width } : {}) }}\r\n                  >\r\n                    {key.label}\r\n                  </th>\r\n                </>\r\n              );\r\n            })}\r\n\r\n            {(DeleteAction || ReadAction || EditAction) && (\r\n              <th className=\"action_place\"> Actions</th>\r\n            )}\r\n          </tr>\r\n        </thead>\r\n      </table>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default EmptyTable;\r\n","import React, { useState } from \"react\";\r\n// styles\r\nimport \"./style.scss\";\r\n// images\r\nimport editIcon from \"assets/images/editIcon.svg\";\r\nimport deleteIcon from \"assets/images/deleteIcon.svg\";\r\nimport ReadImg from \"assets/images/ReadImg.svg\";\r\nimport viewIcon from \"assets/images/viewIcon.svg\";\r\n// services\r\nimport ReactPaginate from \"react-paginate\";\r\nimport { FaCaretLeft, FaCaretRight } from \"react-icons/fa\";\r\nimport { Tooltip } from \"antd\";\r\nimport moment from \"moment\";\r\n// helpers\r\nimport { history } from \"helpers\";\r\n\r\nfunction TableComp(props) {\r\n  const {\r\n    data,\r\n    EditAction,\r\n    DeleteAction,\r\n    ReadAction,\r\n    includedKeys,\r\n    pageCount,\r\n    onPageChange,\r\n    editRouteName,\r\n    setCurrentPage,\r\n    handleOpenModal,\r\n    currentPage,\r\n    onRowsSelect,\r\n    calmanagement = false,\r\n    management = false,\r\n    client = false,\r\n    isIpo,\r\n    isPagination\r\n  } = props;\r\n\r\n  const [selectedRows, setSelectedRows] = useState([]);\r\n  // Dynamic colors for Status KeyName\r\n  const statusColors = {\r\n    active: \"#27AE60\",\r\n    inactive: \"#EB5757\",\r\n    open: \"#EB5757\",\r\n    accepted: \"#2F80ED\",\r\n    inprogress: \"#F2C94C\",\r\n    closed: \"#27AE60\",\r\n    failed: \"#EB5757\",\r\n    success: \"#27AE60\",\r\n    PENDING: \"#EB5757\",\r\n    COMPLETED: \"#27AE60\",\r\n  };\r\n\r\n  const handlePageChange = (selectedPage) => {\r\n    setCurrentPage(selectedPage.selected + 1);\r\n    onPageChange(selectedPage.selected + 1);\r\n  };\r\n\r\n  const handleRowSelect = (rowId) => {\r\n    let updatedRows;\r\n    if (selectedRows.includes(rowId)) {\r\n      updatedRows = selectedRows.filter((id) => id !== rowId);\r\n    } else {\r\n      updatedRows = [...selectedRows, rowId];\r\n    }\r\n    setSelectedRows(updatedRows);\r\n    onRowsSelect(updatedRows);\r\n  };\r\n\r\n  const handleSelectAll = () => {\r\n    let updatedRows;\r\n    if (selectedRows.length === data.length) {\r\n      updatedRows = [];\r\n    } else {\r\n      const allRowIds = data.map((obj) => obj._id);\r\n      updatedRows = allRowIds;\r\n    }\r\n    setSelectedRows(updatedRows);\r\n    onRowsSelect(updatedRows);\r\n  };\r\n\r\n  const getValueForKey = (key, obj) => {\r\n    const nestedKeys = key.split(\".\");\r\n    let value = obj;\r\n    for (const nestedKey of nestedKeys) {\r\n      if (value.hasOwnProperty(nestedKey)) {\r\n        value = value[nestedKey];\r\n      } else {\r\n        return (value = \"-\");\r\n      }\r\n    }\r\n    if (\r\n      nestedKeys.includes(\"familyMember\") &&\r\n      typeof value === \"string\" &&\r\n      moment(value, \"YYYY-MM-DDTHH:mm:ss.SSSZ\", true).isValid()\r\n    ) {\r\n      return moment(value).format(\"MMM DD YYYY\");\r\n    } else {\r\n      return value;\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"table-container\">\r\n      <table className=\"data-table\">\r\n        <thead>\r\n          <tr>\r\n            {DeleteAction && (\r\n              <th className=\"checkBox_place\">\r\n                <input\r\n                  type=\"checkbox\"\r\n                  onChange={handleSelectAll}\r\n                  checked={selectedRows.length === data.length}\r\n                  className=\"check_box cursor-pointer\"\r\n                />\r\n              </th>\r\n            )}\r\n            {includedKeys.map((key) => {\r\n              return (\r\n                <>\r\n                  <th\r\n                    className=\"\"\r\n                    key={key}\r\n                    style={{ ...(key?.width ? { width: key?.width } : {}) }}\r\n                  >\r\n                    {key.label}\r\n                  </th>\r\n                </>\r\n              );\r\n            })}\r\n\r\n            {(DeleteAction || ReadAction || EditAction) && (\r\n              <th className=\"action_place\"> Actions</th>\r\n            )}\r\n          </tr>\r\n        </thead>\r\n\r\n        <tbody>\r\n          {data.map((obj) => {\r\n            return (\r\n              <tr key={obj.id}>\r\n                {DeleteAction && (\r\n                  <td className=\"checkBox_place\">\r\n                    <input\r\n                      type=\"checkbox\"\r\n                      onChange={() => handleRowSelect(obj._id)}\r\n                      checked={selectedRows.includes(obj._id)}\r\n                      className=\"check_box cursor-pointer\"\r\n                    />\r\n                  </td>\r\n                )}\r\n                {includedKeys.map((item) => {\r\n                  const key = item.value;\r\n                  const value = getValueForKey(key, obj);\r\n                  // status keys color change\r\n                  if (obj.hasOwnProperty(key)) {\r\n                    const value = obj[key];\r\n                    const label = item.label;\r\n                    const statusKey = key.toLowerCase();\r\n                    if (statusKey.includes(\"status\")) {\r\n                      const status = value.toLowerCase();\r\n                      const color = statusColors[status] || \"black\";\r\n                      return (\r\n                        <td key={key}>\r\n                          <span style={{ color }}>\r\n                            {value.charAt(0).toUpperCase() + value.slice(1)}\r\n                          </span>\r\n                        </td>\r\n                      );\r\n                      // for id\r\n                    } else if (statusKey.includes(\"aditionalinfo\")) {\r\n                      return (\r\n                        <Tooltip title={value} color={\"#fff\"} key={\"#fff\"}>\r\n                          <td key={key}>{value}</td>\r\n                        </Tooltip>\r\n                      );\r\n                    } else if (statusKey.includes(\"id\")) {\r\n                      return <td key={key}>{value}</td>;\r\n                    } else if (\r\n                      calmanagement &&\r\n                      statusKey.includes(\"description\")\r\n                    ) {\r\n                      return (\r\n                        <td key={key}>\r\n                          <a href={value} target=\"_blank\">\r\n                            {value}\r\n                          </a>\r\n                        </td>\r\n                      );\r\n                    } else if (statusKey.includes(\"type\")) {\r\n                      return (\r\n                        <td key={key}>\r\n                          {value.charAt(0).toUpperCase() + value.slice(1)}\r\n                        </td>\r\n                      );\r\n                    } else if (statusKey.includes(\"producticons3\")) {\r\n                      return (\r\n                        <td key={key}>\r\n                          <a href={value} target=\"_blank\">\r\n                            <img src={value} alt={value} className=\"img\" />{\" \"}\r\n                          </a>\r\n                        </td>\r\n                      );\r\n                    } else if (statusKey.includes(\"imageurls3\")) {\r\n                      return (\r\n                        <td key={key}>\r\n                          <a href={value} target=\"_blank\">\r\n                            <img src={value} alt={value} className=\"img\" />{\" \"}\r\n                          </a>\r\n                        </td>\r\n                      );\r\n                      // date formatter\r\n                    } else if (statusKey === \"date\") {\r\n                      return (\r\n                        <td key={key}>{moment(value).format(\"MMM DD YYYY\")}</td>\r\n                      );\r\n                      // date and time formatter\r\n                    } else if (\r\n                      moment(value, \"YYYY-MM-DDTHH:mm:ss.SSSZ\", true).isValid()\r\n                    ) {\r\n                      return (\r\n                        <td key={key}>\r\n                          {moment(value).format(\"MMM DD YYYY hh:mm a\")}\r\n                        </td>\r\n                      );\r\n                    } else if (\r\n                      typeof value === \"string\" &&\r\n                      /<[a-z][\\s\\S]*>/i.test(value)\r\n                    ) {\r\n                      const textOnlyValue = value.replace(/<[^>]+>/g, \"\");\r\n                      return <td key={key}>{textOnlyValue}</td>;\r\n                      // for boolean\r\n                    } else {\r\n                      return (\r\n                        <td key={key}>\r\n                          {typeof value === \"boolean\" ? (\r\n                            value ? (\r\n                              <span style={{ color: \"#1D9E00\" }}>Active</span>\r\n                            ) : (\r\n                              <span style={{ color: \"#DD2025\" }}>Inactive</span>\r\n                            )\r\n                          ) : (\r\n                            value\r\n                          )}\r\n                        </td>\r\n                      );\r\n                    }\r\n                  }\r\n                  return <td key={key}>{value}</td>;\r\n                })}\r\n                {(DeleteAction || ReadAction || EditAction) && (\r\n                  <td>\r\n                    <span className=\"actions\">\r\n                      {EditAction && (\r\n                        <img\r\n                          src={editIcon}\r\n                          alt=\"Edit\"\r\n                          style={{\r\n                            color: \"#B4B4B4\",\r\n                            cursor: \"pointer\",\r\n                          }}\r\n                          onClick={() => {\r\n                            localStorage.removeItem(\"editId\");\r\n                            localStorage.setItem(\"editId\", obj._id);\r\n                            {\r\n                              client &&\r\n                                localStorage.setItem(\r\n                                  \"clientId\",\r\n                                  obj.familyMember._id\r\n                                );\r\n                            }\r\n                            {\r\n                              isIpo && localStorage.setItem(\"ipoId\", JSON.stringify(obj));\r\n                            }\r\n                            localStorage.removeItem(\"editPage\");\r\n                            localStorage.setItem(\"editPage\", currentPage ? currentPage : 1);\r\n                            history.push(`${editRouteName}`);\r\n                          }}\r\n                        />\r\n                      )}\r\n                      {ReadAction && (\r\n                        <img\r\n                          src={management ? viewIcon : ReadImg}\r\n                          alt=\"read\"\r\n                          style={{\r\n                            color: \"#B4B4B4\",\r\n                            cursor: \"pointer\",\r\n                          }}\r\n                          onClick={() => {\r\n                            localStorage.removeItem(\"viewId\");\r\n                            localStorage.setItem(\"viewId\", obj._id);\r\n                            history.push(`${editRouteName}`);\r\n                          }}\r\n                        />\r\n                      )}\r\n                      {!management && DeleteAction && (\r\n                        <img\r\n                          onClick={() => handleOpenModal(obj._id)}\r\n                          src={deleteIcon}\r\n                          alt=\"delete\"\r\n                          style={{\r\n                            color: \"#B4B4B4\",\r\n                            cursor: \"pointer\",\r\n                          }}\r\n                        />\r\n                      )}\r\n                    </span>\r\n                  </td>\r\n                )}\r\n              </tr>\r\n            );\r\n          })}\r\n        </tbody>\r\n        {console.log(management, \"mana\")}\r\n      </table>\r\n      {isPagination ? (\r\n        <></>\r\n      ) : (\r\n        <div className=\"my-4\">\r\n          <ReactPaginate\r\n            previousLabel={<FaCaretLeft />}\r\n            nextLabel={<FaCaretRight />}\r\n            pageCount={pageCount}\r\n            onPageChange={handlePageChange}\r\n            forcePage={currentPage - 1}\r\n            containerClassName={\"pagination\"}\r\n            previousClassName={\"pagination-previous\"}\r\n            nextClassName={\"pagination-next\"}\r\n            pageClassName={\"pagination-item\"}\r\n            breakClassName={\"pagination-item\"}\r\n            activeClassName={\"active_page\"}\r\n          />\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default TableComp;\r\n","import axios from \"axios\";\r\nimport { endpoints } from \"config/api\";\r\nimport { axiosErrorHandler } from \"./helpers/axiosHelpers\";\r\n\r\nexport const getLead = async (params) => {\r\n  const request = await axios({\r\n    method: \"get\",\r\n    url: endpoints.lead.LEAD_GET,\r\n    headers: {\r\n      Authorization: `Bearer ${localStorage.getItem(\"token\")}`,\r\n    },\r\n    params,\r\n  }).catch(axiosErrorHandler);\r\n  return request;\r\n};\r\n\r\nexport const getIpoList = async (params) => {\r\n  const request = await axios({\r\n    method: \"get\",\r\n    url: endpoints.lead.IPO_LIST,\r\n    headers: {\r\n      Authorization: `Bearer ${localStorage.getItem(\"token\")}`,\r\n    },\r\n    params,\r\n  }).catch(axiosErrorHandler);\r\n  return request;\r\n};\r\n\r\nexport const getDashboardDetails = async () => {\r\n  const request = await axios({\r\n    method: \"post\",\r\n    url: endpoints.lead.DASHBOARD_DETAILS,\r\n    headers: {\r\n      Authorization: `Bearer ${localStorage.getItem(\"token\")}`,\r\n    },\r\n  }).catch(axiosErrorHandler);\r\n  return request;\r\n};\r\n\r\nexport const updateIpo = async (body) => {\r\n  const request = await axios({\r\n    method: \"post\",\r\n    url: endpoints.lead.IPO_UPDATE,\r\n    headers: {\r\n      Authorization: `Bearer ${localStorage.getItem(\"token\")}`,\r\n    },\r\n    data: body,\r\n  }).catch(axiosErrorHandler);\r\n  return request;\r\n};\r\n","import React, { useState, useEffect, Fragment } from \"react\";\r\nimport \"./style.scss\";\r\nimport EmptyTable from \"component/common/TableComp/EmptyTable\";\r\nimport TableComp from \"component/common/TableComp/TableComp\";\r\nimport Loader from \"component/common/Loader\";\r\nimport { getIpoList } from \"service/leads\";\r\n\r\nconst IpoManagementComp = ({ipoManagement }) => {\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [data, setData] = useState([]);\r\n\r\n  const includedKeys = [\r\n    { label: \"Symbol\", value: \"symbol\" },\r\n    { label: \"Name\", value: \"name\" },\r\n    { label: \"Start Date\", value: \"biddingStartDate\" },\r\n    { label: \"End Date\", value: \"biddingEndDate\" },\r\n  ];\r\n\r\n  const fetchData = async (page) => { \r\n    try {\r\n      setIsLoading(true);\r\n      let params = {};\r\n      let response = await getIpoList(params);\r\n      if (response.status === 200) {\r\n        setData(response?.data?.data);\r\n      } else {\r\n        setData([]);\r\n      }\r\n    } catch (error) {\r\n      console.log(error);\r\n    } finally {\r\n      setIsLoading(false);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchData();\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      <div className=\"ipo px-5 py-3\">\r\n        <p className=\"ipo_title m-0\">IPO Management</p>\r\n        <div className=\"my-5\">\r\n          {isLoading ? (\r\n            <Loader\r\n              loading={isLoading}\r\n              className=\"d-flex align-items-center justify-content-center\"\r\n            />\r\n          ) : data.length > 0 ? (\r\n            <TableComp\r\n              data={data}\r\n              EditAction={ipoManagement?.edit}\r\n              includedKeys={includedKeys}\r\n              isPagination={true}\r\n              editRouteName={\"/admin/ipo-management/edit-ipo\"}\r\n              isIpo={true}\r\n            />\r\n          ) : (\r\n            <div className=\"\">\r\n              <EmptyTable\r\n                EditAction={ipoManagement?.edit}\r\n                includedKeys={includedKeys}\r\n              />\r\n              <p className=\"d-flex align-items-center justify-content-center mt-5 pt-5\">\r\n                No Data Available\r\n              </p>\r\n            </div>\r\n          )}\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default IpoManagementComp;\r\n","import React, { useEffect } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\n// Internal Component\r\nimport IpoManagementComp from \"component/Dashboard/IpoManagement/IpoManagementComp\";\r\n// Helpers\r\nimport { checkAndReturnViewableComponent, history } from \"helpers\";\r\nimport { getadminPrivileges } from \"helpers/privileges\";\r\n\r\nconst IpoManagement = ({ privilegesData = {} }) => {\r\n  const dispatch = useDispatch();\r\n  const { ipoManagement = {} } = privilegesData || {};\r\n\r\n  useEffect(() => {\r\n    getadminPrivileges(dispatch);\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    const redirectTo = checkAndReturnViewableComponent(\r\n      privilegesData,\r\n      ipoManagement\r\n    );\r\n    if (redirectTo) return history.push(redirectTo?.to);\r\n  }, [privilegesData]);\r\n  return (\r\n    <div>\r\n      <IpoManagementComp ipoManagement={ipoManagement} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default IpoManagement;\r\n","module.exports = __webpack_public_path__ + \"static/media/deleteIcon.b8b189cc.svg\";","module.exports = __webpack_public_path__ + \"static/media/editIcon.d54ed3bb.svg\";","module.exports = __webpack_public_path__ + \"static/media/ReadImg.96474dd0.svg\";","module.exports = __webpack_public_path__ + \"static/media/viewIcon.02c0b4b2.svg\";","import * as React from 'react';\nvar isValidElement = React.isValidElement;\nexport { isValidElement };\nexport function isFragment(child) {\n  return child && isValidElement(child) && child.type === React.Fragment;\n}\nexport function replaceElement(element, replacement, props) {\n  if (!isValidElement(element)) {\n    return replacement;\n  }\n  return /*#__PURE__*/React.cloneElement(element, typeof props === 'function' ? props(element.props || {}) : props);\n}\nexport function cloneElement(element, props) {\n  return replaceElement(element, element, props);\n}"],"sourceRoot":""}