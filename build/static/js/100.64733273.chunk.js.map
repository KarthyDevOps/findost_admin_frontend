{"version":3,"sources":["../node_modules/@material-ui/core/esm/Step/Step.js","../node_modules/@material-ui/core/esm/StepConnector/StepConnector.js","../node_modules/@material-ui/core/esm/Stepper/Stepper.js","../node_modules/@material-ui/core/esm/internal/svg-icons/CheckCircle.js","../node_modules/@material-ui/core/esm/internal/svg-icons/Warning.js","../node_modules/@material-ui/core/esm/StepIcon/StepIcon.js","../node_modules/@material-ui/core/esm/StepLabel/StepLabel.js","component/common/Stepper/Stepper.js"],"names":["Step","React","props","ref","_props$active","active","alternativeLabel","children","classes","className","_props$completed","completed","connectorProp","connector","_props$disabled","disabled","_props$expanded","expanded","index","last","orientation","other","_objectWithoutProperties","newChildren","_extends","clsx","root","map","child","icon","withStyles","horizontal","paddingLeft","paddingRight","vertical","flex","position","name","StepConnector","_props$alternativeLab","_props$orientation","line","lineHorizontal","lineVertical","theme","marginLeft","padding","top","left","right","display","borderColor","palette","type","grey","borderTopStyle","borderTopWidth","borderLeftStyle","borderLeftWidth","minHeight","defaultConnector","Stepper","_props$activeStep","activeStep","_props$connector","_props$nonLinear","nonLinear","childrenArray","toArray","steps","step","state","length","Paper","square","elevation","flexDirection","alignItems","createSvgIcon","d","_ref","cx","cy","r","StepIcon","_props$error","error","Warning","CheckCircle","SvgIcon","text","x","y","textAnchor","color","primary","main","fill","contrastText","fontSize","typography","caption","fontFamily","StepLabel","optional","StepIconComponentProp","StepIconComponent","StepIconProps","iconContainer","labelContainer","Typography","variant","component","label","muiName","cursor","secondary","fontWeight","textAlign","marginTop","flexShrink","width","signUpStepper","makeStyles","connect","DoctorTypeSet","home","selectedDoctorType","id","useParams","history","useHistory","useState","setActiveStep","stepsData","stepperDataNew","code","location","pathname","codeNew","useEffect","Number","style","background","key","height","borderRadius","border","justifyContent","src","margin"],"mappings":"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","file":"static/js/100.64733273.chunk.js","sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport { isFragment } from 'react-is';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nexport var styles = {\n  /* Styles applied to the root element. */\n  root: {},\n\n  /* Styles applied to the root element if `orientation=\"horizontal\"`. */\n  horizontal: {\n    paddingLeft: 8,\n    paddingRight: 8\n  },\n\n  /* Styles applied to the root element if `orientation=\"vertical\"`. */\n  vertical: {},\n\n  /* Styles applied to the root element if `alternativeLabel={true}`. */\n  alternativeLabel: {\n    flex: 1,\n    position: 'relative'\n  },\n\n  /* Pseudo-class applied to the root element if `completed={true}`. */\n  completed: {}\n};\nvar Step = /*#__PURE__*/React.forwardRef(function Step(props, ref) {\n  var _props$active = props.active,\n      active = _props$active === void 0 ? false : _props$active,\n      alternativeLabel = props.alternativeLabel,\n      children = props.children,\n      classes = props.classes,\n      className = props.className,\n      _props$completed = props.completed,\n      completed = _props$completed === void 0 ? false : _props$completed,\n      connectorProp = props.connector,\n      _props$disabled = props.disabled,\n      disabled = _props$disabled === void 0 ? false : _props$disabled,\n      _props$expanded = props.expanded,\n      expanded = _props$expanded === void 0 ? false : _props$expanded,\n      index = props.index,\n      last = props.last,\n      orientation = props.orientation,\n      other = _objectWithoutProperties(props, [\"active\", \"alternativeLabel\", \"children\", \"classes\", \"className\", \"completed\", \"connector\", \"disabled\", \"expanded\", \"index\", \"last\", \"orientation\"]);\n\n  var connector = connectorProp ? /*#__PURE__*/React.cloneElement(connectorProp, {\n    orientation: orientation,\n    alternativeLabel: alternativeLabel,\n    index: index,\n    active: active,\n    completed: completed,\n    disabled: disabled\n  }) : null;\n  var newChildren = /*#__PURE__*/React.createElement(\"div\", _extends({\n    className: clsx(classes.root, classes[orientation], className, alternativeLabel && classes.alternativeLabel, completed && classes.completed),\n    ref: ref\n  }, other), connector && alternativeLabel && index !== 0 ? connector : null, React.Children.map(children, function (child) {\n    if (! /*#__PURE__*/React.isValidElement(child)) {\n      return null;\n    }\n\n    if (process.env.NODE_ENV !== 'production') {\n      if (isFragment(child)) {\n        console.error([\"Material-UI: The Step component doesn't accept a Fragment as a child.\", 'Consider providing an array instead.'].join('\\n'));\n      }\n    }\n\n    return /*#__PURE__*/React.cloneElement(child, _extends({\n      active: active,\n      alternativeLabel: alternativeLabel,\n      completed: completed,\n      disabled: disabled,\n      expanded: expanded,\n      last: last,\n      icon: index + 1,\n      orientation: orientation\n    }, child.props));\n  }));\n\n  if (connector && !alternativeLabel && index !== 0) {\n    return /*#__PURE__*/React.createElement(React.Fragment, null, connector, newChildren);\n  }\n\n  return newChildren;\n});\nprocess.env.NODE_ENV !== \"production\" ? Step.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * Sets the step as active. Is passed to child components.\n   */\n  active: PropTypes.bool,\n\n  /**\n   * Should be `Step` sub-components such as `StepLabel`, `StepContent`.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * Mark the step as completed. Is passed to child components.\n   */\n  completed: PropTypes.bool,\n\n  /**\n   * Mark the step as disabled, will also disable the button if\n   * `StepButton` is a child of `Step`. Is passed to child components.\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * Expand the step.\n   */\n  expanded: PropTypes.bool\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiStep'\n})(Step);","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      flex: '1 1 auto'\n    },\n\n    /* Styles applied to the root element if `orientation=\"horizontal\"`. */\n    horizontal: {},\n\n    /* Styles applied to the root element if `orientation=\"vertical\"`. */\n    vertical: {\n      marginLeft: 12,\n      // half icon\n      padding: '0 0 8px'\n    },\n\n    /* Styles applied to the root element if `alternativeLabel={true}`. */\n    alternativeLabel: {\n      position: 'absolute',\n      top: 8 + 4,\n      left: 'calc(-50% + 20px)',\n      right: 'calc(50% + 20px)'\n    },\n\n    /* Pseudo-class applied to the root element if `active={true}`. */\n    active: {},\n\n    /* Pseudo-class applied to the root element if `completed={true}`. */\n    completed: {},\n\n    /* Pseudo-class applied to the root element if `disabled={true}`. */\n    disabled: {},\n\n    /* Styles applied to the line element. */\n    line: {\n      display: 'block',\n      borderColor: theme.palette.type === 'light' ? theme.palette.grey[400] : theme.palette.grey[600]\n    },\n\n    /* Styles applied to the root element if `orientation=\"horizontal\"`. */\n    lineHorizontal: {\n      borderTopStyle: 'solid',\n      borderTopWidth: 1\n    },\n\n    /* Styles applied to the root element if `orientation=\"vertical\"`. */\n    lineVertical: {\n      borderLeftStyle: 'solid',\n      borderLeftWidth: 1,\n      minHeight: 24\n    }\n  };\n};\nvar StepConnector = /*#__PURE__*/React.forwardRef(function StepConnector(props, ref) {\n  var active = props.active,\n      _props$alternativeLab = props.alternativeLabel,\n      alternativeLabel = _props$alternativeLab === void 0 ? false : _props$alternativeLab,\n      classes = props.classes,\n      className = props.className,\n      completed = props.completed,\n      disabled = props.disabled,\n      index = props.index,\n      _props$orientation = props.orientation,\n      orientation = _props$orientation === void 0 ? 'horizontal' : _props$orientation,\n      other = _objectWithoutProperties(props, [\"active\", \"alternativeLabel\", \"classes\", \"className\", \"completed\", \"disabled\", \"index\", \"orientation\"]);\n\n  return /*#__PURE__*/React.createElement(\"div\", _extends({\n    className: clsx(classes.root, classes[orientation], className, alternativeLabel && classes.alternativeLabel, active && classes.active, completed && classes.completed, disabled && classes.disabled),\n    ref: ref\n  }, other), /*#__PURE__*/React.createElement(\"span\", {\n    className: clsx(classes.line, {\n      'horizontal': classes.lineHorizontal,\n      'vertical': classes.lineVertical\n    }[orientation])\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? StepConnector.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiStepConnector'\n})(StepConnector);","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport Paper from '../Paper';\nimport StepConnector from '../StepConnector';\nexport var styles = {\n  /* Styles applied to the root element. */\n  root: {\n    display: 'flex',\n    padding: 24\n  },\n\n  /* Styles applied to the root element if `orientation=\"horizontal\"`. */\n  horizontal: {\n    flexDirection: 'row',\n    alignItems: 'center'\n  },\n\n  /* Styles applied to the root element if `orientation=\"vertical\"`. */\n  vertical: {\n    flexDirection: 'column'\n  },\n\n  /* Styles applied to the root element if `alternativeLabel={true}`. */\n  alternativeLabel: {\n    alignItems: 'flex-start'\n  }\n};\nvar defaultConnector = /*#__PURE__*/React.createElement(StepConnector, null);\nvar Stepper = /*#__PURE__*/React.forwardRef(function Stepper(props, ref) {\n  var _props$activeStep = props.activeStep,\n      activeStep = _props$activeStep === void 0 ? 0 : _props$activeStep,\n      _props$alternativeLab = props.alternativeLabel,\n      alternativeLabel = _props$alternativeLab === void 0 ? false : _props$alternativeLab,\n      children = props.children,\n      classes = props.classes,\n      className = props.className,\n      _props$connector = props.connector,\n      connectorProp = _props$connector === void 0 ? defaultConnector : _props$connector,\n      _props$nonLinear = props.nonLinear,\n      nonLinear = _props$nonLinear === void 0 ? false : _props$nonLinear,\n      _props$orientation = props.orientation,\n      orientation = _props$orientation === void 0 ? 'horizontal' : _props$orientation,\n      other = _objectWithoutProperties(props, [\"activeStep\", \"alternativeLabel\", \"children\", \"classes\", \"className\", \"connector\", \"nonLinear\", \"orientation\"]);\n\n  var connector = /*#__PURE__*/React.isValidElement(connectorProp) ? /*#__PURE__*/React.cloneElement(connectorProp, {\n    orientation: orientation\n  }) : null;\n  var childrenArray = React.Children.toArray(children);\n  var steps = childrenArray.map(function (step, index) {\n    var state = {\n      index: index,\n      active: false,\n      completed: false,\n      disabled: false\n    };\n\n    if (activeStep === index) {\n      state.active = true;\n    } else if (!nonLinear && activeStep > index) {\n      state.completed = true;\n    } else if (!nonLinear && activeStep < index) {\n      state.disabled = true;\n    }\n\n    return /*#__PURE__*/React.cloneElement(step, _extends({\n      alternativeLabel: alternativeLabel,\n      connector: connector,\n      last: index + 1 === childrenArray.length,\n      orientation: orientation\n    }, state, step.props));\n  });\n  return /*#__PURE__*/React.createElement(Paper, _extends({\n    square: true,\n    elevation: 0,\n    className: clsx(classes.root, classes[orientation], className, alternativeLabel && classes.alternativeLabel),\n    ref: ref\n  }, other), steps);\n});\nprocess.env.NODE_ENV !== \"production\" ? Stepper.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * Set the active step (zero based index).\n   * Set to -1 to disable all the steps.\n   */\n  activeStep: PropTypes.number,\n\n  /**\n   * If set to 'true' and orientation is horizontal,\n   * then the step label will be positioned under the icon.\n   */\n  alternativeLabel: PropTypes.bool,\n\n  /**\n   * Two or more `<Step />` components.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * An element to be placed between each step.\n   */\n  connector: PropTypes.element,\n\n  /**\n   * If set the `Stepper` will not assist in controlling steps for linear flow.\n   */\n  nonLinear: PropTypes.bool,\n\n  /**\n   * The stepper orientation (layout flow direction).\n   */\n  orientation: PropTypes.oneOf(['horizontal', 'vertical'])\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiStepper'\n})(Stepper);","import * as React from 'react';\nimport createSvgIcon from '../../utils/createSvgIcon';\n/**\n * @ignore - internal component.\n */\n\nexport default createSvgIcon( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M12 0a12 12 0 1 0 0 24 12 12 0 0 0 0-24zm-2 17l-5-5 1.4-1.4 3.6 3.6 7.6-7.6L19 8l-9 9z\"\n}), 'CheckCircle');","import * as React from 'react';\nimport createSvgIcon from '../../utils/createSvgIcon';\n/**\n * @ignore - internal component.\n */\n\nexport default createSvgIcon( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M1 21h22L12 2 1 21zm12-3h-2v-2h2v2zm0-4h-2v-4h2v4z\"\n}), 'Warning');","import * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport CheckCircle from '../internal/svg-icons/CheckCircle';\nimport Warning from '../internal/svg-icons/Warning';\nimport withStyles from '../styles/withStyles';\nimport SvgIcon from '../SvgIcon';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      display: 'block',\n      color: theme.palette.text.disabled,\n      '&$completed': {\n        color: theme.palette.primary.main\n      },\n      '&$active': {\n        color: theme.palette.primary.main\n      },\n      '&$error': {\n        color: theme.palette.error.main\n      }\n    },\n\n    /* Styles applied to the SVG text element. */\n    text: {\n      fill: theme.palette.primary.contrastText,\n      fontSize: theme.typography.caption.fontSize,\n      fontFamily: theme.typography.fontFamily\n    },\n\n    /* Pseudo-class applied to the root element if `active={true}`. */\n    active: {},\n\n    /* Pseudo-class applied to the root element if `completed={true}`. */\n    completed: {},\n\n    /* Pseudo-class applied to the root element if `error={true}`. */\n    error: {}\n  };\n};\n\nvar _ref = /*#__PURE__*/React.createElement(\"circle\", {\n  cx: \"12\",\n  cy: \"12\",\n  r: \"12\"\n});\n\nvar StepIcon = /*#__PURE__*/React.forwardRef(function StepIcon(props, ref) {\n  var _props$completed = props.completed,\n      completed = _props$completed === void 0 ? false : _props$completed,\n      icon = props.icon,\n      _props$active = props.active,\n      active = _props$active === void 0 ? false : _props$active,\n      _props$error = props.error,\n      error = _props$error === void 0 ? false : _props$error,\n      classes = props.classes;\n\n  if (typeof icon === 'number' || typeof icon === 'string') {\n    var className = clsx(classes.root, active && classes.active, error && classes.error, completed && classes.completed);\n\n    if (error) {\n      return /*#__PURE__*/React.createElement(Warning, {\n        className: className,\n        ref: ref\n      });\n    }\n\n    if (completed) {\n      return /*#__PURE__*/React.createElement(CheckCircle, {\n        className: className,\n        ref: ref\n      });\n    }\n\n    return /*#__PURE__*/React.createElement(SvgIcon, {\n      className: className,\n      ref: ref\n    }, _ref, /*#__PURE__*/React.createElement(\"text\", {\n      className: classes.text,\n      x: \"12\",\n      y: \"16\",\n      textAnchor: \"middle\"\n    }, icon));\n  }\n\n  return icon;\n});\nprocess.env.NODE_ENV !== \"production\" ? StepIcon.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * Whether this step is active.\n   */\n  active: PropTypes.bool,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * Mark the step as completed. Is passed to child components.\n   */\n  completed: PropTypes.bool,\n\n  /**\n   * Mark the step as failed.\n   */\n  error: PropTypes.bool,\n\n  /**\n   * The label displayed in the step icon.\n   */\n  icon: PropTypes.node\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiStepIcon'\n})(StepIcon);","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport Typography from '../Typography';\nimport StepIcon from '../StepIcon';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      display: 'flex',\n      alignItems: 'center',\n      '&$alternativeLabel': {\n        flexDirection: 'column'\n      },\n      '&$disabled': {\n        cursor: 'default'\n      }\n    },\n\n    /* Styles applied to the root element if `orientation=\"horizontal\"`. */\n    horizontal: {},\n\n    /* Styles applied to the root element if `orientation=\"vertical\"`. */\n    vertical: {},\n\n    /* Styles applied to the `Typography` component which wraps `children`. */\n    label: {\n      color: theme.palette.text.secondary,\n      '&$active': {\n        color: theme.palette.text.primary,\n        fontWeight: 500\n      },\n      '&$completed': {\n        color: theme.palette.text.primary,\n        fontWeight: 500\n      },\n      '&$alternativeLabel': {\n        textAlign: 'center',\n        marginTop: 16\n      },\n      '&$error': {\n        color: theme.palette.error.main\n      }\n    },\n\n    /* Pseudo-class applied to the `Typography` component if `active={true}`. */\n    active: {},\n\n    /* Pseudo-class applied to the `Typography` component if `completed={true}`. */\n    completed: {},\n\n    /* Pseudo-class applied to the root element and `Typography` component if `error={true}`. */\n    error: {},\n\n    /* Pseudo-class applied to the root element and `Typography` component if `disabled={true}`. */\n    disabled: {},\n\n    /* Styles applied to the `icon` container element. */\n    iconContainer: {\n      flexShrink: 0,\n      // Fix IE 11 issue\n      display: 'flex',\n      paddingRight: 8,\n      '&$alternativeLabel': {\n        paddingRight: 0\n      }\n    },\n\n    /* Pseudo-class applied to the root and icon container and `Typography` if `alternativeLabel={true}`. */\n    alternativeLabel: {},\n\n    /* Styles applied to the container element which wraps `Typography` and `optional`. */\n    labelContainer: {\n      width: '100%'\n    }\n  };\n};\nvar StepLabel = /*#__PURE__*/React.forwardRef(function StepLabel(props, ref) {\n  var _props$active = props.active,\n      active = _props$active === void 0 ? false : _props$active,\n      _props$alternativeLab = props.alternativeLabel,\n      alternativeLabel = _props$alternativeLab === void 0 ? false : _props$alternativeLab,\n      children = props.children,\n      classes = props.classes,\n      className = props.className,\n      _props$completed = props.completed,\n      completed = _props$completed === void 0 ? false : _props$completed,\n      _props$disabled = props.disabled,\n      disabled = _props$disabled === void 0 ? false : _props$disabled,\n      _props$error = props.error,\n      error = _props$error === void 0 ? false : _props$error,\n      expanded = props.expanded,\n      icon = props.icon,\n      last = props.last,\n      optional = props.optional,\n      _props$orientation = props.orientation,\n      orientation = _props$orientation === void 0 ? 'horizontal' : _props$orientation,\n      StepIconComponentProp = props.StepIconComponent,\n      StepIconProps = props.StepIconProps,\n      other = _objectWithoutProperties(props, [\"active\", \"alternativeLabel\", \"children\", \"classes\", \"className\", \"completed\", \"disabled\", \"error\", \"expanded\", \"icon\", \"last\", \"optional\", \"orientation\", \"StepIconComponent\", \"StepIconProps\"]);\n\n  var StepIconComponent = StepIconComponentProp;\n\n  if (icon && !StepIconComponent) {\n    StepIconComponent = StepIcon;\n  }\n\n  return /*#__PURE__*/React.createElement(\"span\", _extends({\n    className: clsx(classes.root, classes[orientation], className, disabled && classes.disabled, alternativeLabel && classes.alternativeLabel, error && classes.error),\n    ref: ref\n  }, other), icon || StepIconComponent ? /*#__PURE__*/React.createElement(\"span\", {\n    className: clsx(classes.iconContainer, alternativeLabel && classes.alternativeLabel)\n  }, /*#__PURE__*/React.createElement(StepIconComponent, _extends({\n    completed: completed,\n    active: active,\n    error: error,\n    icon: icon\n  }, StepIconProps))) : null, /*#__PURE__*/React.createElement(\"span\", {\n    className: classes.labelContainer\n  }, children ? /*#__PURE__*/React.createElement(Typography, {\n    variant: \"body2\",\n    component: \"span\",\n    display: \"block\",\n    className: clsx(classes.label, alternativeLabel && classes.alternativeLabel, completed && classes.completed, active && classes.active, error && classes.error)\n  }, children) : null, optional));\n});\nprocess.env.NODE_ENV !== \"production\" ? StepLabel.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * In most cases will simply be a string containing a title for the label.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * Mark the step as disabled, will also disable the button if\n   * `StepLabelButton` is a child of `StepLabel`. Is passed to child components.\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * Mark the step as failed.\n   */\n  error: PropTypes.bool,\n\n  /**\n   * Override the default label of the step icon.\n   */\n  icon: PropTypes.node,\n\n  /**\n   * The optional node to display.\n   */\n  optional: PropTypes.node,\n\n  /**\n   * The component to render in place of the [`StepIcon`](/api/step-icon/).\n   */\n  StepIconComponent: PropTypes.elementType,\n\n  /**\n   * Props applied to the [`StepIcon`](/api/step-icon/) element.\n   */\n  StepIconProps: PropTypes.object\n} : void 0;\nStepLabel.muiName = 'StepLabel';\nexport default withStyles(styles, {\n  name: 'MuiStepLabel'\n})(StepLabel);","import React, { useEffect } from \"react\";\r\nimport { useHistory, useParams } from \"react-router-dom\";\r\n\r\n// Styles\r\nimport Step from \"@material-ui/core/Step\";\r\nimport Stepper from \"@material-ui/core/Stepper\";\r\nimport StepLabel from \"@material-ui/core/StepLabel\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { connect } from \"react-redux\";\r\n\r\nconst signUpStepper = makeStyles((theme) => ({}));\r\n\r\nfunction getStepsNew() {\r\n  return [\"Basic\", \"Education\", \"Payment\"];\r\n}\r\n\r\nfunction getSteps() {\r\n  return [\"Basic\", \"Education\", \"Appointment\", \"Payment\"];\r\n}\r\n\r\nconst VerticalLinearStepper = ({ DoctorTypeSet }) => {\r\n  \r\n  const { id } = useParams();\r\n  const history = useHistory();\r\n  const classes = signUpStepper();\r\n  const [activeStep, setActiveStep] = React.useState();\r\n\r\n  const stepsData = {\r\n    \"/doctor/create-basic-details\": 0,\r\n    [`/doctor/create-education-details/${id}`]: 1,\r\n    [`/doctor/create-appointment/${id}`]: 2,\r\n    [`/doctor/create-payment-details/${id}`]: 3\r\n  };\r\n\r\n  const stepperDataNew = {\r\n    \"/doctor/create-basic-details\": 0,\r\n    [`/doctor/create-education-details/${id}`]: 1,    \r\n    [`/doctor/create-payment-details/${id}`]: 2\r\n  };\r\n\r\n  const code = stepsData[history.location?.pathname];\r\n  const codeNew = stepperDataNew[history.location?.pathname];\r\n  const steps = DoctorTypeSet == \"GP\" ? getStepsNew() : getSteps();\r\n  \r\n  useEffect(() => {\r\n    if (DoctorTypeSet == \"GP\") {\r\n      setActiveStep(codeNew);\r\n    } else {\r\n      setActiveStep(code);\r\n    }\r\n    \r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n      <div>\r\n        <div className={classes.root}>\r\n          <Stepper\r\n            activeStep={Number(activeStep)}\r\n            orientation=\"horizontal\"\r\n            style={{ background: \"none\" }}\r\n          >\r\n            {steps.map((label, index) => (\r\n              <Step key={index}>\r\n                <StepLabel\r\n                  icon={\r\n                    <span\r\n                      style={{\r\n                        color:\r\n                          code == index || code > index ? \"#FFFFFF\" : \"#545454\",\r\n                        background:\r\n                          code == index || code > index\r\n                            ? \"#0E69C2\"\r\n                            : \"transparent\",\r\n                        height: \"23px\",\r\n                        width: \"23px\",\r\n                        borderRadius: \"50%\",\r\n                        border:\r\n                          code == index || code > index\r\n                            ? \"transparent\"\r\n                            : \"1.5px solid black\",\r\n                        display: \"flex\",\r\n                        justifyContent: \"center\",\r\n                        alignItems: \"center\",\r\n                        fontSize: \"13px\",\r\n                        fontWeight: 700\r\n                      }}\r\n                    >\r\n                      {index + 1}\r\n                    </span>\r\n                  }\r\n                >\r\n                  {label}\r\n                  {index + 1 == steps.length ? null : (\r\n                    <img\r\n                      src={\"rightArrow\"}\r\n                      style={{ width: \"20px\", margin: \"0px 10px\" }}\r\n                    />\r\n                  )}\r\n                </StepLabel>\r\n              </Step>\r\n            ))}\r\n          </Stepper>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\n//export default VerticalLinearStepper;\r\n\r\nconst mapState = (state) => ({\r\n  DoctorTypeSet: state?.home?.selectedDoctorType,\r\n});\r\n\r\nexport default connect(mapState, null)(VerticalLinearStepper);"],"sourceRoot":""}