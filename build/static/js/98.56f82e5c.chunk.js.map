{"version":3,"sources":["component/common/ErrorMessage/index.js","component/common/LoginInput/index.js","component/Auth/Login/index.js","component/common/NormalButton/NormalButton.js","component/common/InputBox/InputBox.js","pages/Auth/Login.js","assets/images/Frame.svg","assets/images/lock.svg","assets/images/user.svg","assets/images/Rectangle.svg","assets/images/facebook_icon.svg","assets/images/instagram_icon.svg","assets/images/twitter_icon.svg"],"names":["FormErrorMessage","_ref","error","type","messages","React","createElement","className","LoginInput","props","placeholder","register","value","onChange","name","maxlength","icons","GB","onWheel","Fragment","ref","defaultValue","maxLength","event","currentTarget","blur","e","body","target","autoComplete","LoginComp","handleSubmit","errors","reset","setError","useForm","mode","isShowPassword","setIsShowPassword","useState","emailId","setemailId","password","setpassword","formSubmitted","setFormSubmitted","useDispatch","src","login_logo","alt","InputBox","Iconic","required","pattern","username_icon","minLength","validate","lowercase","test","containsDigit","containsSpecial","password_icon","AiOutlineEye","onClick","size","color","AiOutlineEyeInvisible","Link","to","NormalButton","loginButton1","label","async","email","inputs","response","LoginAPI","_response$data","_response$data$data","status","localStorage","removeItem","setItem","data","token","Toast","message","history","push","console","log","href","rel","twitter_logo","instagram_logo","facebook_logo","loginpage_frame","Component","render","id","addBnt","profileCreatNext","profileCreatNext1","profileCreatBack","uploadBrowseBtn","authButton1","disabled","authButton","loginButton","tableBtn","rightIcon","leftIcon","btnSecondary","profileBtn","outlineBtn","cancel","addProductbtn","isLoading","this","concat","Oval","height","width","grayedBox","Search","BsSearch","style","Login","getItem","Redirect","module","exports"],"mappings":"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","file":"static/js/98.56f82e5c.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nconst FormErrorMessage = ({ error, type, messages }) => {\r\n  if (!error) return null;\r\n\r\n  return (\r\n    <span className=\"text-danger fs-14\">\r\n      {messages[error.type] ? messages[error.type] : \"Error in field\"}\r\n    </span>\r\n  );\r\n};\r\nexport default FormErrorMessage;\r\n","import React from \"react\";\r\nimport \"./style.scss\";\r\n\r\nconst LoginInput = (props) => {\r\n  const {\r\n    placeholder = \"\",\r\n    register = {},\r\n    value = \"\",\r\n    type = \"text\",\r\n    onChange,\r\n    name = \"\",\r\n    maxlength = \"\",\r\n    icons = false,\r\n    GB = false,\r\n    onWheel = \"\",\r\n  } = props;\r\n  return (\r\n    <>\r\n      <input\r\n        name={name}\r\n        placeholder={placeholder}\r\n        className={\"inputBoxLogin\"}\r\n        ref={register}\r\n        defaultValue={value}\r\n        type={type}\r\n        maxLength={maxlength}\r\n        onWheel={(event) => event.currentTarget.blur()}\r\n        onChange={(e) => {\r\n          const body = {\r\n            target: {\r\n              name: e.target.name,\r\n              value: e.target.value,\r\n            },\r\n          };\r\n          if (onChange) onChange(body);\r\n        }}\r\n        autoComplete={\"off\"}\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default LoginInput;\r\n","import { useForm } from \"react-hook-form\";\r\nimport React, { useRef, useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { Toast } from \"service/toast\";\r\nimport { Link } from \"react-router-dom\";\r\nimport rectangle from \"../../../assets/images/Rectangle.svg\";\r\nimport { AiOutlineEye, AiOutlineEyeInvisible } from \"react-icons/ai\";\r\n// Styles\r\nimport \"./style.scss\";\r\n// Images\r\nimport instagram_logo from \"../../../assets/images/instagram_icon.svg\";\r\nimport facebook_logo from \"../../../assets/images/facebook_icon.svg\";\r\nimport twitter_logo from \"../../../assets/images/twitter_icon.svg\";\r\nimport username_icon from \"../../../assets/images/user.svg\";\r\nimport login_logo from \"../../../assets/images/findostLogo.svg\";\r\nimport password_icon from \"../../../assets/images/lock.svg\";\r\nimport loginpage_frame from \"../../../assets/images/Frame.svg\";\r\n// Internal components\r\nimport LoginInput from \"component/common/LoginInput\";\r\nimport FormErrorMessage from \"component/common/ErrorMessage\";\r\nimport NormalButton from \"component/common/NormalButton/NormalButton\";\r\n\r\n// Service\r\nimport { LoginAPI } from \"service/Auth\";\r\n\r\n// Helpers\r\nimport { history } from \"helpers\";\r\nimport Privileges from \"helpers/privileges\";\r\nimport { Encrypt } from \"helpers\";\r\nimport InputBox from \"component/common/InputBox/InputBox\";\r\nimport { adminData } from \"reducer/home\";\r\n\r\nconst LoginComp = () => {\r\n  const { register, handleSubmit, errors, reset, setError } = useForm({\r\n    mode: \"onChange\",\r\n  });\r\n  const [isShowPassword, setIsShowPassword] = useState(false);\r\n  const [emailId, setemailId] = useState(\"\");\r\n  const [password, setpassword] = useState(\"\");\r\n  const [formSubmitted, setFormSubmitted] = useState(false);\r\n  const dispatch = useDispatch();\r\n\r\n  const onSubmit = async (inputs) => {\r\n    try {\r\n      let body = {\r\n        email: inputs?.emailId,\r\n        password: inputs?.password,\r\n      };\r\n      const response = await LoginAPI(body);\r\n      if (response.status === 200) {\r\n        localStorage.removeItem(\"token\");\r\n        localStorage.setItem(\"token\", response?.data?.data?.token);\r\n        Toast({ type: \"success\", message: response.data.message });\r\n        reset({ emailId: \"\", password: \"\" });\r\n        history.push(\"/admin/dashboard\");\r\n        setFormSubmitted(false);\r\n      } else {\r\n        Toast({ type: \"error\", message: response.data.message });\r\n        setFormSubmitted(false);\r\n      }\r\n    } catch (e) {\r\n      console.log(\"e :>> \", e);\r\n      setFormSubmitted(false);\r\n    }\r\n  };\r\n  return (\r\n    <form>\r\n      <div className=\"login_page\">\r\n        <div className=\"container-fluid\">\r\n          <div className=\"row \">\r\n            <div className=\" login_filed col-lg-5 \">\r\n              <div className=\"row page  mt-3\">\r\n                <div className=\"login_logo col-lg-12 \">\r\n                  <img\r\n                    className=\"mx-auto my-auto d-block\"\r\n                    src={login_logo}\r\n                    alt=\"Login-logo\"\r\n                  />\r\n\r\n                  <h6 className=\"login\">Login </h6>\r\n                </div>\r\n                <>\r\n                  <div className=\"userbox mt-2\">\r\n                    <InputBox\r\n                      className=\"login_input\"\r\n                      type={\"email\"}\r\n                      placeholder=\"Email Id\"\r\n                      Iconic\r\n                      errors={errors}\r\n                      onChange={setemailId}\r\n                      name=\"emailId\"\r\n                      register={register({\r\n                        required: true,\r\n                        pattern: /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i,\r\n                      })}\r\n                    />\r\n                    <FormErrorMessage\r\n                      error={errors.emailId}\r\n                      messages={{\r\n                        required: \"Email is Required\",\r\n                        pattern: \"Invalid Email Id \",\r\n                      }}\r\n                    />\r\n                    <span className=\"userbox_icon\">\r\n                      <img src={username_icon} alt=\"icon\"></img>\r\n                    </span>\r\n                  </div>\r\n                </>\r\n\r\n                <div className=\"passwordbox mt-3\">\r\n                  <InputBox\r\n                    className=\"login_input\"\r\n                    placeholder=\"Password\"\r\n                    Iconic\r\n                    errors={formSubmitted ? errors : {}}\r\n                    type={isShowPassword ? \"text\" : \"password\"}\r\n                    name=\"password\"\r\n                    onChange={setpassword}\r\n                    register={register({\r\n                      required: \"Password is Required\",\r\n                      minLength: {\r\n                        value: 8,\r\n                      },\r\n                      maxLength: {\r\n                        value: 16,\r\n                      },\r\n                      pattern: {\r\n                        value: /^(?=.*[A-Z])/,\r\n                      },\r\n                      validate: {\r\n                        lowercase: (value) =>\r\n                          /^(?=.*[a-z])/.test(value) ||\r\n                          \"Password must contain at least one lowercase letter\",\r\n                        containsDigit: (value) =>\r\n                          /^(?=.*[0-9])/.test(value) ||\r\n                          \"Password must contain at least one numeric digit\",\r\n                        containsSpecial: (value) =>\r\n                          /^(?=.*[!@#$%^&*])/.test(value) ||\r\n                          \"Password must contain at least one special character\",\r\n                      },\r\n                    })}\r\n                  />\r\n                  {formSubmitted && (\r\n                    <FormErrorMessage\r\n                      error={errors.password}\r\n                      messages={{\r\n                        required: \"Password is Required\",\r\n                        minLength: \"Password must contain at least 8 letters\",\r\n                        maxLength:\r\n                          \"Password should contain at most 16 characters\",\r\n                        pattern:\r\n                          \"Password must contain at least one uppercase letter\",\r\n                        lowercase:\r\n                          \"Password must contain at least one lowercase letter\",\r\n                        containsDigit:\r\n                          \"Password must contain at least one Numeric\",\r\n                        containsSpecial:\r\n                          \"Password must contain at least one special character\",\r\n                      }}\r\n                    />\r\n                  )}\r\n\r\n                  <span className=\"eyeIcons\">\r\n                    <img src={password_icon} alt=\"icon\"></img>\r\n                  </span>\r\n                  <span className=\"eyeIcons\">\r\n                    {isShowPassword ? (\r\n                      <span className=\"cursor-pointer\">\r\n                        <AiOutlineEye\r\n                          onClick={() => setIsShowPassword(!isShowPassword)}\r\n                          size={25}\r\n                          color=\"#BDBDBD\"\r\n                        />\r\n                      </span>\r\n                    ) : (\r\n                      <span className=\"cursor-pointer\">\r\n                        <AiOutlineEyeInvisible\r\n                          onClick={() => setIsShowPassword(!isShowPassword)}\r\n                          size={25}\r\n                          color=\"#BDBDBD\"\r\n                        />\r\n                      </span>\r\n                    )}\r\n                  </span>\r\n                </div>\r\n\r\n                <div className=\"forget \">\r\n                  {errors.password ? (\r\n                    <div className=\"mt-4\">\r\n                      <Link to=\"/auth/forget\">\r\n                        <span className=\"forget\">Forgot Password?</span>\r\n                      </Link>\r\n                    </div>\r\n                  ) : (\r\n                    <Link to=\"/auth/forget\">\r\n                      <span className=\"forget\">Forgot Password?</span>\r\n                    </Link>\r\n                  )}\r\n\r\n                  <div\r\n                    onClick={() => setFormSubmitted(true)}\r\n                    className=\"login_btn  mt-3\"\r\n                  >\r\n                    <NormalButton\r\n                      loginButton1\r\n                      label=\"Login\"\r\n                      onClick={handleSubmit(onSubmit)}\r\n                    />\r\n                  </div>\r\n\r\n                  <div className=\"social col-lg-10 p-0 mt-3\">\r\n                    <p className=\" \"> Follow Us On </p>\r\n                  </div>\r\n                  <div className=\"social_logo\">\r\n                    <a\r\n                      href=\"https://twitter.com/\"\r\n                      target=\"_blank\"\r\n                      rel=\"noopener noreferrer\"\r\n                    >\r\n                      <img src={twitter_logo} alt=\"twitter-logo\" />\r\n                    </a>\r\n                    <a\r\n                      href=\"https://www.facebook.com/\"\r\n                      target=\"_blank\"\r\n                      rel=\"noopener noreferrer\"\r\n                    >\r\n                      <img src={instagram_logo} alt=\"instagram-logo\" />\r\n                    </a>\r\n                    <a\r\n                      href=\"https://www.instagram.com/\"\r\n                      target=\"_blank\"\r\n                      rel=\"noopener noreferrer\"\r\n                    >\r\n                      <img src={facebook_logo} alt=\"facebook-logo\" />\r\n                    </a>\r\n                  </div>\r\n                  <div className=\"d-flex justify-content-center mt-3\">\r\n                    <Link to=\"/auth/disclaimer\">\r\n                      <span className=\"disclaimer\">Disclaimer</span>\r\n                    </Link>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n\r\n            <div className=\"login_frame   col-lg-7\">\r\n              <div className=\"clip\"></div>\r\n              <div className=\"bg_slide\">\r\n                <img\r\n                  className=\" d-block mx-auto\"\r\n                  src={loginpage_frame}\r\n                  alt=\"\"\r\n                ></img>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default LoginComp;\r\n","import React, { Component } from \"react\";\r\nimport { Oval } from \"react-loader-spinner\";\r\n// import styles from \"./button.module.scss\";\r\nimport \"./normalButton.scss\";\r\n\r\nexport class NormalButton extends Component {\r\n  render() {\r\n    const {\r\n      className = \"\",\r\n      label = \"\",\r\n      onClick,\r\n      id,\r\n      addBnt,\r\n      profileCreatNext,\r\n      profileCreatNext1,\r\n      profileCreatBack,\r\n      uploadBrowseBtn,\r\n      authButton1,\r\n      type = \"submit\",\r\n      disabled = false,\r\n      authButton = false,\r\n      loginButton = false,\r\n      loginButton1 = false,\r\n      tableBtn = false,\r\n      rightIcon = \"\",\r\n      leftIcon = \"\",\r\n      btnSecondary = false,\r\n      profileBtn = false,\r\n      outlineBtn = false,\r\n      cancel = false,\r\n      addProductbtn = false,\r\n      isLoading = false, // Add isLoading prop for button loader\r\n    } = this.props;\r\n\r\n    return (\r\n      <div>\r\n        <button\r\n          id={id}\r\n          type={type}\r\n          className={`cursor-pointer \r\n                     ${authButton ? \"authButton\" : \"\"}\r\n                     ${profileCreatNext ? \"profileCreatNext\" : \"\"}\r\n                     ${profileCreatNext1 ? \"profileCreatNext1\" : \"\"}\r\n                     ${authButton1 ? \"authButton1\" : \"\"}\r\n                     ${profileCreatBack ? \"profileCreatBack\" : \"\"}\r\n                     ${loginButton ? \"loginButton\" : \"\"}\r\n                     ${loginButton1 ? \"loginButton1\" : \"\"}\r\n                     ${addBnt ? \"addBnt\" : \"\"}\r\n                     ${tableBtn ? \"tableBtn\" : \"\"}\r\n                     ${btnSecondary ? \"btnSecondary\" : \"\"}\r\n                     ${profileBtn ? \"profileBtn\" : \"\"}\r\n                     ${outlineBtn ? \"outlineBtn\" : \"\"}\r\n                     ${cancel ? \"cancelBtn \" : \"\"}\r\n                     ${addProductbtn ? \"addProductbtn \" : \"\"}\r\n                     ${uploadBrowseBtn ? \"uploadBrowseBtn \" : \"\"}\r\n                     ${className}`}\r\n          onClick={onClick}\r\n          disabled={disabled || isLoading}\r\n        >\r\n          {isLoading ? (\r\n            <span className=\"btn-loader  \">\r\n              {\" \"}\r\n              <>\r\n                <Oval color=\"#ffffff\" height={20} width={\"100%\"} />\r\n              </>\r\n              <>\r\n                <span className=\"m-3\">Loading</span>{\" \"}\r\n              </>\r\n            </span>\r\n          ) : (\r\n            <>\r\n              {leftIcon !== \"\" ? (\r\n                <span className={`btn-left-icon ${leftIcon}`}></span>\r\n              ) : null}\r\n              {label}\r\n              {rightIcon !== \"\" ? (\r\n                <span className={`btn-right-icon ${rightIcon}`}></span>\r\n              ) : null}\r\n            </>\r\n          )}\r\n        </button>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default NormalButton;\r\n","import React from \"react\";\r\nimport { BsSearch } from \"react-icons/bs\"\r\nimport \"./InputBox.scss\";\r\nconst InputBox = (props) => {\r\n  let {\r\n    placeholder = \"\",\r\n    register = {},\r\n    value = \"\",\r\n    type = \"text\",\r\n    onChange,\r\n    name = \"\",\r\n    maxlength = \"\",\r\n    icons = false,\r\n    GB = false,\r\n    onWheel = \"\",\r\n    grayedBox = false,\r\n    Iconic = false,\r\n    disabled = false,\r\n    maxLength,\r\n    Search = false,\r\n  } = props;\r\n  return (\r\n    <>\r\n      <div className=\"input_head\">\r\n        <input\r\n          disabled={disabled}\r\n          name={name}\r\n          placeholder={placeholder}\r\n          className={\r\n            disabled ? \"inputBoxGrayed\" :\r\n              grayedBox\r\n                ? \"inputBoxGrayed\"\r\n                : Iconic\r\n                  ? \"inputBoxStyle1\"\r\n                  : \"inputBoxStyle\"\r\n          }\r\n          ref={register}\r\n          defaultValue={value}\r\n          type={type}\r\n          maxLength={maxLength}\r\n          onWheel={(event) => event.currentTarget.blur()}\r\n          onChange={(e) => {\r\n            const body = {\r\n              target: {\r\n                name: e.target.name,\r\n                value: e.target.value,\r\n              },\r\n            };\r\n            if (onChange) onChange(body);\r\n          }}\r\n          autoComplete={\"off\"}\r\n        />\r\n        {Iconic && Search ? <i className=\"search_icon\"><BsSearch size={18} style={{ color: \"#7E7E7E\" }} /></i> : \"\"}\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default InputBox;\r\n","import React from \"react\";\r\nimport { Redirect } from 'react-router-dom';\r\n\r\nimport LoginComp from \"component/Auth/Login\";\r\n\r\nconst Login = () => {\r\n\r\n  if (localStorage.getItem('token')) return <Redirect to={'/admin'} />;\r\n\r\n  return (\r\n    <div>\r\n      <LoginComp />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Login;","module.exports = __webpack_public_path__ + \"static/media/Frame.5d9e13ec.svg\";","module.exports = __webpack_public_path__ + \"static/media/lock.1575ae5e.svg\";","module.exports = __webpack_public_path__ + \"static/media/user.c0982fd9.svg\";","module.exports = __webpack_public_path__ + \"static/media/Rectangle.4545a829.svg\";","module.exports = __webpack_public_path__ + \"static/media/facebook_icon.71c3ca90.svg\";","module.exports = __webpack_public_path__ + \"static/media/instagram_icon.c7399d7e.svg\";","module.exports = __webpack_public_path__ + \"static/media/twitter_icon.a9ffcaf4.svg\";"],"sourceRoot":""}