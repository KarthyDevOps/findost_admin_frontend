{"version":3,"sources":["helpers/validation.js"],"names":["PASSWORD_REGEX","spaceValidation","value","toString","trim","passwordValidation","test","ignoreNegativeValue","onlyNumbers","numberLetterValidation","maxLengthValidation","len","_String","String","length","minLengthValidation","_String2","experienceValidate","data","experienceYear","setError","errorName","errorType","shouldFocus","momentDates","map","x","moment","passingYear","filter","Boolean","minDate","min","diffYear","get","type","numberInput","event","keyCode","preventDefault"],"mappings":"kGAAA,8dAEA,MAAMA,EAAiB,yEAEVC,EAAmBC,IAAWA,GAAqC,KAA5BA,EAAMC,WAAWC,OAExDC,EAAsBH,GAAUA,GAASF,EAAeM,KAAKJ,GAE7DK,EAAuBL,GAAUA,GAASA,EAAQ,EAElDM,EAAeN,IAAUA,GAAQ,WAAWI,KAAKJ,GAEjDO,EAA0BP,IAAUA,GAAQ,iBAAiBI,KAAKJ,GAElEQ,EAAuBC,GAAST,IAAK,IAAAU,EAAA,OAAKV,IAAqB,QAAbU,EAAAC,OAAOX,UAAM,IAAAU,OAAA,EAAbA,EAAeE,SAAUH,GAE3EI,EAAuBJ,GAAST,IAAK,IAAAc,EAAA,OAAKd,IAAqB,QAAbc,EAAAH,OAAOX,UAAM,IAAAc,OAAA,EAAbA,EAAeF,SAAUH,GAE3EM,EAAqBA,CAACC,EAAMC,EAAgBC,EAAUC,EAAWC,EAAWC,KACrF,IAAQ,OAAJL,QAAI,IAAJA,OAAI,EAAJA,EAAMJ,QAAS,EAAG,CAClB,IAAIU,EAAkB,OAAJN,QAAI,IAAJA,OAAI,EAAJA,EAAMO,IAAIC,GAAKA,GAAKC,IAAQ,OAADD,QAAC,IAADA,OAAC,EAADA,EAAGE,cAAcC,OAAOC,SACrE,MAAMC,EAAUJ,IAAOK,IAAIR,GACrBS,EAAWN,MAASO,IAAI,QAAUP,IAAOI,GAASG,IAAI,QAE5D,IAAKf,GAAmBc,GAAYd,GAC5BC,GAAYC,GAAaC,EAEzB,OADAF,EAASC,EAAW,CAAEc,KAAMb,EAAWC,iBAChC,EAInB,OAAO,GAGEa,EAAcC,IACvB,GACwB,KAAd,OAALA,QAAK,IAALA,OAAK,EAALA,EAAOC,WACF,OAALD,QAAK,IAALA,OAAK,EAALA,EAAOC,UAAW,KAAW,OAALD,QAAK,IAALA,OAAK,EAALA,EAAOC,UAAW,KACrC,OAALD,QAAK,IAALA,OAAK,EAALA,EAAOC,UAAW,KAAW,OAALD,QAAK,IAALA,OAAK,EAALA,EAAOC,UAAW,GAE3C,OAAO,EAEPD,EAAME","file":"static/js/142.182ab237.chunk.js","sourcesContent":["import moment from 'moment';\r\n\r\nconst PASSWORD_REGEX = /^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)(?=.*[@$!%*?&])[A-Za-z\\d@$!%*?& ]{8,}$/s;\r\n\r\nexport const spaceValidation = (value) => (value) ? value.toString().trim() !== '' : true;\r\n\r\nexport const passwordValidation = (value) => value && PASSWORD_REGEX.test(value);\r\n\r\nexport const ignoreNegativeValue = (value) => value && value > 0;\r\n\r\nexport const onlyNumbers = (value) => value ? /^[0-9]+$/.test(value) : true;\r\n\r\nexport const numberLetterValidation = (value) => value ? /^[0-9a-zA-Z]+$/.test(value) : true;\r\n\r\nexport const maxLengthValidation = (len) => (value) => value ? String(value)?.length <= len : true;\r\n\r\nexport const minLengthValidation = (len) => (value) => value ? String(value)?.length >= len : true;\r\n\r\nexport const experienceValidate = (data, experienceYear, setError, errorName, errorType, shouldFocus) => {\r\n    if (data?.length > 0) {\r\n        let momentDates = data?.map(x => x && moment(x?.passingYear)).filter(Boolean);\r\n        const minDate = moment.min(momentDates);\r\n        const diffYear = moment().get('year') - moment(minDate).get('year');\r\n\r\n        if (+experienceYear && (diffYear < +experienceYear)) {\r\n            if (setError && errorName && errorType) {\r\n                setError(errorName, { type: errorType, shouldFocus });\r\n                return false;\r\n            }\r\n        }\r\n    }\r\n    return true;\r\n}\r\n\r\nexport const numberInput = event => {\r\n    if (\r\n        (event?.keyCode === 8) ||\r\n        (event?.keyCode >= 48 && event?.keyCode <= 57) ||\r\n        (event?.keyCode >= 37 && event?.keyCode <= 49)\r\n    ) {\r\n        return true;\r\n    } else {\r\n        event.preventDefault();\r\n    }\r\n}"],"sourceRoot":""}