{"version":3,"sources":["pages/Dashboard/ApManagement/ViewApManagement.js"],"names":["ViewApManagement","_ref","privilegesData","dispatch","useDispatch","apManagement","useEffect","getadminPrivileges","redirectTo","checkAndReturnViewableComponent","history","push","to","React","createElement","ViewApComp","apAccess"],"mappings":"kGAAA,4DAkCeA,UA3BUC,IAA8B,IAA7B,eAAEC,EAAiB,IAAID,EAC/C,MAAME,EAAWC,eACX,aAAEC,EAAe,IAAOH,GAAkB,GAkBhD,OAhBAI,oBAAU,KACRC,6BAAmBJ,IAClB,IAEHG,oBAAU,KACR,MAAME,EAAaC,0CACjBP,EACAG,GAEF,GAAIG,EAAY,OAAOE,UAAQC,KAAe,OAAVH,QAAU,IAAVA,OAAU,EAAVA,EAAYI,KAC/C,CAACV,IAOFW,IAAAC,cAAA,WACED,IAAAC,cAACC,UAAU,CAACC,SAAUX","file":"static/js/143.9cc5d798.chunk.js","sourcesContent":["import React, { useEffect } from \"react\";\r\nimport ViewApComp from \"component/Dashboard/ApManagement/ViewAp/ViewApComp\";\r\nimport { useDispatch } from \"react-redux\";\r\n// Helpers\r\nimport { checkAndReturnViewableComponent, history } from \"helpers\";\r\nimport { getadminPrivileges } from \"helpers/privileges\";\r\n\r\nconst ViewApManagement = ({ privilegesData = {} }) => {\r\n  const dispatch = useDispatch();\r\n  const { apManagement = {} } = privilegesData || {};\r\n\r\n  useEffect(() => {\r\n    getadminPrivileges(dispatch);\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    const redirectTo = checkAndReturnViewableComponent(\r\n      privilegesData,\r\n      apManagement\r\n    );\r\n    if (redirectTo) return history.push(redirectTo?.to);\r\n  }, [privilegesData]);\r\n\r\n  // access for AP management\r\n  // const apAccess = useSelector(\r\n  //   (state) => state?.home?.privileges?.apManagement\r\n  // );\r\n  return (\r\n    <div>\r\n      <ViewApComp apAccess={apManagement} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ViewApManagement;\r\n"],"sourceRoot":""}