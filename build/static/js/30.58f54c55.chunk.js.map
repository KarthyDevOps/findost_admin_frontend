{"version":3,"sources":["component/common/CheckBoxes/index.js","component/common/CheckBoxes/CheckBox.js","component/common/Icons.js","component/common/CheckBoxes/style.module.scss"],"names":["CheckBoxes","props","_props$options","_props$options2","_props$options2$","initialState","options","map","option","_props$value","multiselect","value","includes","status","checkBoxstatus","setCheckBoxStatus","useState","onClickHandler","data","checkbox","_data$filter","filter","undefined","onSetValues","type","name","length","parent","subparent","ailment","isChanged","find","onFocus","useEffect","React","createElement","Fragment","CheckBox","Object","assign","key","onClick","bind","isStroke","icon","Icon","label","className","concat","style","radio","btn","stroked","active","children","circleLable","fontSize","module","exports"],"mappings":"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","file":"static/js/30.58f54c55.chunk.js","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\n\r\nimport CheckBox from \"./CheckBox\";\r\nimport Icon from \"../Icons\";\r\n\r\nconst CheckBoxes = props => {\r\n  const initialState = props?.options?.map(option => {\r\n    if (props.multiselect && props?.value?.includes(option.value))\r\n      return { ...option, status: true };\r\n    else if (props.value === option.value) {\r\n      return { ...option, status: true };\r\n    }\r\n    return option;\r\n  });\r\n  const [checkBoxstatus, setCheckBoxStatus] = useState(initialState || []);\r\n\r\n  useEffect(() => {\r\n    setCheckBoxStatus(initialState);\r\n  }, [props?.options?.[0]?.status, props.value]);\r\n\r\n  function onClickHandler(value) {\r\n    const data = checkBoxstatus.map(checkbox => {\r\n      if (value === checkbox.value && (!checkbox.status || props.multiselect)) {\r\n        return { ...checkbox, status: !checkbox.status };\r\n      } else if (value !== checkbox.value) {\r\n        if (props.multiselect) return checkbox;\r\n        return { ...checkbox, status: false };\r\n      } else {\r\n        return checkbox;\r\n      }\r\n    });\r\n    setCheckBoxStatus(data);\r\n\r\n    if (props.multiselect) {\r\n      const checkbox = data\r\n        .filter(checkbox => checkbox.status == true)\r\n        ?.map(checkbox =>\r\n          ![undefined, null].includes(checkbox.value) ? checkbox.value : null\r\n        );\r\n      props.onSetValues({\r\n        type: \"set\",\r\n        name: props.name,\r\n        value: checkbox?.length > 0 ? checkbox : null,\r\n        parent: props?.parent,\r\n        subparent: props?.subparent,\r\n        ailment: props?.ailment,\r\n        isChanged: true,\r\n      });\r\n    } else {\r\n      const checkbox = data.find(checkbox => checkbox.value == value);\r\n      if (checkbox)\r\n        props.onSetValues({\r\n          type: \"set\",\r\n          name: props.name,\r\n          value: checkbox?.value,\r\n          parent: props?.parent,\r\n          ailment: props?.ailment,\r\n          isChanged: true,\r\n        });\r\n    }\r\n    props?.onFocus && props.onFocus();\r\n  }\r\n\r\n  return (\r\n    <>\r\n      {checkBoxstatus.length > 0 &&\r\n        checkBoxstatus.map(checkbox => {\r\n          return (\r\n            <>\r\n              <CheckBox\r\n                key={checkbox?.value}\r\n                {...checkbox}\r\n                onClick={onClickHandler.bind(null, checkbox.value)}\r\n                isStroke={!!checkbox.isStroke}\r\n              >\r\n                {checkbox?.icon ? (\r\n                  <Icon icon={checkbox.icon} />\r\n                ) : (\r\n                  <span>{checkbox.label}</span>\r\n                )}\r\n              </CheckBox>\r\n            </>\r\n          );\r\n        })}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default CheckBoxes;\r\n","import React from 'react'\r\n\r\nimport style from './style.module.scss'\r\n\r\nconst CheckBox = props => {\r\n    return (\r\n        <span {...props} className={`${props.icon ? style.radio : style.btn} ${props.isStroke && style.stroked} ${props.status ? style.active : ''}`}\r\n        >\r\n            {props.children}\r\n            {props.icon && <span className={style.circleLable} style={{ fontSize: props.fontSize }}>{props.label}</span>}\r\n        </span>\r\n    )\r\n}\r\n\r\nexport default CheckBox;","import React from \"react\";\r\n\r\n// import { ReactComponent as Male } from \"assets/icons/male.svg\";\r\n// import { ReactComponent as Female } from \"assets/icons/female.svg\";\r\n\r\nconst Icon = props => {\r\n  // switch (props.icon) {\r\n  //   case \"male\":\r\n  //     return <Male />;\r\n  //   case \"female\":\r\n  //     return <Female />;\r\n  //   case \"trans\":\r\n  //     return <Female />;\r\n  //   case \"none\":\r\n  //     return <Female />;\r\n  //   default:\r\n  //     return <></>;\r\n  // }\r\n};\r\n\r\nexport default Icon;\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"radio\":\"style_radio__3mLDi\",\"stroked\":\"style_stroked__8MLgn\",\"active\":\"style_active__1j_dj\",\"circleLable\":\"style_circleLable__qL8oy\",\"btn\":\"style_btn__16ZDw\",\"fs-1\":\"style_fs-1__Qrjdc\"};"],"sourceRoot":""}