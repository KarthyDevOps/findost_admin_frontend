{"version":3,"sources":["component/common/NormalButton/NormalButton.js","component/common/InputBox/InputBox.js","component/common/TableComp/TableComp.js","component/common/DeleteModal/DeleteModal.js","component/Dashboard/ClientsFamily/ClientsFamily.js","assets/images/SuccessImg.svg","assets/images/ErrorImg.svg","assets/images/ReadImg.svg","assets/images/deleteIcon.svg","assets/images/editIcon.svg","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithoutHoles.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableSpread.js"],"names":["NormalButton","this","props","className","label","onClick","id","addBnt","profileCreatNext","profileCreatNext1","profileCreatBack","authButton1","type","disabled","authButton","loginButton","tableBtn","rightIcon","leftIcon","btnSecondary","profileBtn","outlineBtn","cancel","addProductbtn","Component","InputBox","placeholder","register","value","onChange","name","maxlength","icons","GB","onWheel","grayedBox","Iconic","maxLength","Search","ref","defaultValue","event","currentTarget","blur","e","body","target","autoComplete","size","style","color","TableComp","data","EditAction","DeleteAction","ReadAction","includedKeys","pageCount","onPageChange","editRouteName","setCurrentPage","handleOpenModal","currentPage","onRowsSelect","useState","selectedRows","setSelectedRows","statusColors","active","inactive","open","accepted","inprogress","closed","failed","success","updatedRows","length","map","obj","_id","checked","key","rowId","includes","filter","handleRowSelect","item","hasOwnProperty","statusKey","toLowerCase","status","charAt","toUpperCase","slice","src","alt","moment","isValid","format","test","textOnlyValue","replace","editIcon","cursor","localStorage","removeItem","setItem","history","push","ReadImg","deleteIcon","previousLabel","nextLabel","selectedPage","selected","forcePage","containerClassName","previousClassName","nextClassName","pageClassName","breakClassName","activeClassName","DeleteModal","DeleteMessage","modalOpen","closeModal","handleDelete","centered","closable","ErrorImg","ClientsFamily","create","view","edit","remove","setPageCount","setData","isLoading","setIsLoading","searchStaff","setSearchStaff","role","bulkDelete","setBulkDelete","deleteId","show","modalVisible","setModalVisible","fetchClientList","page","params","limit","search","getClientList","response","list","console","log","pageMeta","handleDeleteItem","deleteClient","Toast","message","handleSearchChange","useCallback","debounceFunction","handleBulk","Object","values","handleBulkDelete","ids","bulkDeleteClient","useEffect","loading","module","exports","_toConsumableArray","arr","Array","isArray","arrayLikeToArray","iter","Symbol","iterator","from","unsupportedIterableToArray","TypeError"],"mappings":"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","file":"static/js/80.620632ea.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\n// import styles from \"./button.module.scss\";\r\nimport \"./normalButton.scss\";\r\nexport class NormalButton extends Component {\r\n  render() {\r\n    const {\r\n      className = \"\",\r\n      label = \"\",\r\n      onClick,\r\n      id,\r\n      addBnt,\r\n      profileCreatNext,\r\n      profileCreatNext1,\r\n      profileCreatBack,\r\n      authButton1,\r\n      type = \"submit\",\r\n      disabled = false,\r\n      authButton = false,\r\n      loginButton = false,\r\n      tableBtn = false,\r\n      rightIcon = \"\",\r\n      leftIcon=\"\",\r\n      btnSecondary = false,\r\n      profileBtn = false,\r\n      outlineBtn = false,\r\n      cancel =false,\r\n      addProductbtn= false,\r\n    } = this.props;\r\n\r\n    return (\r\n      <div>\r\n        <button\r\n          id={id}\r\n          type={type}\r\n          className={`cursor-pointer \r\n                     ${authButton ? \"authButton\" : \"\"}\r\n                     ${profileCreatNext ? \"profileCreatNext\" : \"\"}\r\n                     ${profileCreatNext1 ? \"profileCreatNext1\" : \"\"}\r\n                     ${authButton1 ? \"authButton1\" : \"\"}\r\n                     ${profileCreatBack ? \"profileCreatBack\" : \"\"}\r\n                     ${loginButton ? \"loginButton\" : \"\"}\r\n                     ${addBnt ? \"addBnt\" : \"\"}\r\n                     ${tableBtn ? \"tableBtn\" : \"\"}\r\n                     ${btnSecondary ? \"btnSecondary\" : \"\"}\r\n                     ${profileBtn ? \"profileBtn\" : \"\"}\r\n                     ${outlineBtn ? \"outlineBtn\" : \"\"}\r\n                     ${cancel? 'cancelBtn ':''}\r\n                     ${addProductbtn? 'addProductbtn ':''}\r\n                   \r\n                     ${className}`}\r\n          onClick={onClick}\r\n          disabled={disabled}\r\n        >\r\n          {leftIcon !== \"\" ? (\r\n            <span className={`btn-left-icon ${leftIcon}`}></span>\r\n          ) : null}\r\n          {label}\r\n          {rightIcon !== \"\" ? (\r\n            <span className={`btn-right-icon ${rightIcon}`}></span>\r\n          ) : null}\r\n        </button>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default NormalButton;\r\n","import React from \"react\";\r\nimport {BsSearch} from \"react-icons/bs\"\r\nimport \"./InputBox.scss\";\r\nconst InputBox = (props) => {\r\n  let {\r\n    placeholder = \"\",\r\n    register = {},\r\n    value = \"\",\r\n    type = \"text\",\r\n    onChange,\r\n    name = \"\",\r\n    maxlength = \"\",\r\n    icons = false,\r\n    GB = false,\r\n    onWheel = \"\",\r\n    grayedBox = false,\r\n    Iconic = false,\r\n    disabled = false,\r\n    maxLength,\r\n    Search = false,\r\n  } = props;\r\n  return (\r\n    <>\r\n    <div className=\"input_head\">\r\n      <input\r\n        disabled={disabled}\r\n        name={name}\r\n        placeholder={placeholder}\r\n        className={\r\n          grayedBox\r\n            ? \"inputBoxGrayed\"\r\n            : Iconic\r\n            ? \"inputBoxStyle1\"\r\n            : \"inputBoxStyle\"\r\n        }\r\n        ref={register}\r\n        defaultValue={value}\r\n        type={type}\r\n        maxLength={maxLength}\r\n        onWheel={(event) => event.currentTarget.blur()}\r\n        onChange={(e) => {\r\n          const body = {\r\n            target: {\r\n              name: e.target.name,\r\n              value: e.target.value,\r\n            },\r\n          };\r\n          if (onChange) onChange(body);\r\n        }}\r\n        autoComplete={\"off\"}\r\n      />\r\n      {Iconic && Search ?  <i className=\"search_icon\"><BsSearch size={18} style={{color : \"#7E7E7E\"}}/></i> : \"\"}\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default InputBox;\r\n","import React, { useState } from \"react\";\r\n// styles\r\nimport \"./style.scss\";\r\n// images\r\nimport editIcon from \"assets/images/editIcon.svg\";\r\nimport deleteIcon from \"assets/images/deleteIcon.svg\";\r\nimport ReadImg from \"assets/images/ReadImg.svg\";\r\n// services\r\nimport ReactPaginate from \"react-paginate\";\r\nimport { FaCaretLeft, FaCaretRight } from \"react-icons/fa\";\r\nimport moment from \"moment\";\r\n// helpers\r\nimport { history } from \"helpers\";\r\n\r\nfunction TableComp(props) {\r\n  const {\r\n    data,\r\n    EditAction,\r\n    DeleteAction,\r\n    ReadAction,\r\n    includedKeys,\r\n    pageCount,\r\n    onPageChange,\r\n    editRouteName,\r\n    setCurrentPage,\r\n    handleOpenModal,\r\n    currentPage,\r\n    onRowsSelect,\r\n  } = props;\r\n\r\n  const [selectedRows, setSelectedRows] = useState([]);\r\n  // Dynamic colors for Status KeyName\r\n  const statusColors = {\r\n    active: \"#27AE60\",\r\n    inactive: \"#EB5757\",\r\n    open: \"#EB5757\",\r\n    accepted: \"#2F80ED\",\r\n    inprogress: \"#F2C94C\",\r\n    closed: \"#27AE60\",\r\n    failed: \"#EB5757\",\r\n    success: \"#27AE60\",\r\n  };\r\n\r\n  const handlePageChange = (selectedPage) => {\r\n    setCurrentPage(selectedPage.selected + 1);\r\n    onPageChange(selectedPage.selected + 1);\r\n  };\r\n\r\n  const handleRowSelect = (rowId) => {\r\n    let updatedRows;\r\n    if (selectedRows.includes(rowId)) {\r\n      updatedRows = selectedRows.filter((id) => id !== rowId);\r\n    } else {\r\n      updatedRows = [...selectedRows, rowId];\r\n    }\r\n    setSelectedRows(updatedRows);\r\n    onRowsSelect(updatedRows);\r\n  };\r\n\r\n  const handleSelectAll = () => {\r\n    let updatedRows;\r\n    if (selectedRows.length === data.length) {\r\n      updatedRows = [];\r\n    } else {\r\n      const allRowIds = data.map((obj) => obj._id);\r\n      updatedRows = allRowIds;\r\n    }\r\n    setSelectedRows(updatedRows);\r\n    onRowsSelect(updatedRows);\r\n  };\r\n\r\n  return (\r\n    <div className=\"table-container\">\r\n      <table className=\"data-table\">\r\n        <thead>\r\n          <tr>\r\n            {DeleteAction && (\r\n              <>\r\n                <th className=\"empty_place\"></th>\r\n                <th className=\"checkBox_place\">\r\n                  <input\r\n                    type=\"checkbox\"\r\n                    onChange={handleSelectAll}\r\n                    checked={selectedRows.length === data.length}\r\n                    className=\"mt-2 check_box\"\r\n                  />\r\n                </th>\r\n              </>\r\n            )}\r\n            {includedKeys.map((key) => {\r\n              return (\r\n                <>\r\n                  <th className=\"\" key={key}>\r\n                    {key.label}\r\n                  </th>\r\n                </>\r\n              );\r\n            })}\r\n\r\n            {!DeleteAction && !ReadAction ? (\r\n              <>\r\n                <th className=\"checkBox_place\"> Actions</th>\r\n                <th className=\"checkBox_place\"></th>\r\n              </>\r\n            ) : (\r\n              <>\r\n                <th className=\"checkBox_place\">&nbsp;&nbsp;Actions</th>\r\n                <th className=\"empty_place\"></th>\r\n                <th className=\"empty_place\"></th>\r\n              </>\r\n            )}\r\n          </tr>\r\n        </thead>\r\n\r\n        <tbody>\r\n          {data.map((obj) => {\r\n            return (\r\n              <tr key={obj.id}>\r\n                {DeleteAction && (\r\n                  <>\r\n                    <td className=\"empty_place\"></td>\r\n                    <td className=\"checkBox_place\">\r\n                      <input\r\n                        type=\"checkbox\"\r\n                        onChange={() => handleRowSelect(obj._id)}\r\n                        checked={selectedRows.includes(obj._id)}\r\n                        className=\"mt-2 check_box\"\r\n                      />\r\n                    </td>\r\n                  </>\r\n                )}\r\n                {includedKeys.map((item) => {\r\n                  const key = item.value;\r\n                  // status keys color change\r\n                  if (obj.hasOwnProperty(key)) {\r\n                    const value = obj[key];\r\n                    const label = item.label;\r\n                    const statusKey = key.toLowerCase();\r\n                    if (statusKey.includes(\"status\")) {\r\n                      const status = value.toLowerCase();\r\n                      const color = statusColors[status] || \"black\";\r\n                      return (\r\n                        <td key={key}>\r\n                          <span style={{ color }}>\r\n                            {value.charAt(0).toUpperCase() + value.slice(1)}\r\n                          </span>\r\n                        </td>\r\n                      );\r\n                      // for id\r\n                    } else if (statusKey.includes(\"id\")) {\r\n                      return <td key={key}>{value}</td>;\r\n                      // date and time formatter\r\n                    } else if (statusKey.includes(\"ProductIcon\")) {\r\n                      return (\r\n                        <td key={key}>\r\n                          <img src={value} alt=\"\" />{\" \"}\r\n                        </td>\r\n                      );\r\n                      // date and time formatter\r\n                    } else if (\r\n                      moment(value, \"YYYY-MM-DDTHH:mm:ss.SSSZ\", true).isValid()\r\n                    ) {\r\n                      return (\r\n                        <td key={key}>\r\n                          {moment(value).format(\"MMM DD YYYY hh:mm a\")}\r\n                        </td>\r\n                      );\r\n                      // for HTML tags\r\n                    } else if (\r\n                      typeof value === \"string\" &&\r\n                      /<[a-z][\\s\\S]*>/i.test(value)\r\n                    ) {\r\n                      const textOnlyValue = value.replace(/<[^>]+>/g, \"\");\r\n                      return <td key={key}>{textOnlyValue}</td>;\r\n                      // for boolean\r\n                    } else {\r\n                      return (\r\n                        <td key={key}>\r\n                          {typeof value === \"boolean\" ? (\r\n                            value ? (\r\n                              <span style={{ color: \"#1D9E00\" }}>Active</span>\r\n                            ) : (\r\n                              <span style={{ color: \"#DD2025\" }}>InActive</span>\r\n                            )\r\n                          ) : (\r\n                            value\r\n                          )}\r\n                        </td>\r\n                      );\r\n                    }\r\n                  }\r\n                  return null;\r\n                })}\r\n\r\n                {EditAction && (\r\n                  <td>\r\n                   &nbsp;<img\r\n                      src={editIcon}\r\n                      alt=\"Edit\"\r\n                      style={{\r\n                        color: \"#B4B4B4\",\r\n                        cursor: \"pointer\",\r\n                      }}\r\n                      onClick={() => {\r\n                        localStorage.removeItem(\"editId\");\r\n                        localStorage.setItem(\"editId\", obj._id);\r\n                        history.push(`${editRouteName}`);\r\n                      }}\r\n                    />\r\n                  </td>\r\n                )}\r\n                {ReadAction && (\r\n                  <td>\r\n                    <img\r\n                      src={ReadImg}\r\n                      alt=\"read\"\r\n                      style={{\r\n                        color: \"#B4B4B4\",\r\n                        cursor: \"pointer\",\r\n                      }}\r\n                      onClick={() => {\r\n                        localStorage.removeItem(\"editId\");\r\n                        localStorage.setItem(\"editId\", obj._id);\r\n                        history.push(`${editRouteName}`);\r\n                      }}\r\n                    />\r\n                  </td>\r\n                )}\r\n                {DeleteAction && (\r\n                  <>\r\n                    <td\r\n                      onClick={() => handleOpenModal(obj._id)}\r\n                      className=\"mx-3\"\r\n                    >\r\n                      <img\r\n                        src={deleteIcon}\r\n                        alt=\"delete\"\r\n                        style={{\r\n                          color: \"#B4B4B4\",\r\n                          cursor: \"pointer\",\r\n                        }}\r\n                      />\r\n                    </td>\r\n                    <td className=\"empty_place\"></td>\r\n                  </>\r\n                )}\r\n              </tr>\r\n            );\r\n          })}\r\n        </tbody>\r\n      </table>\r\n      <div className=\"my-4\">\r\n        <ReactPaginate\r\n          previousLabel={<FaCaretLeft />}\r\n          nextLabel={<FaCaretRight />}\r\n          pageCount={pageCount}\r\n          onPageChange={handlePageChange}\r\n          forcePage={currentPage - 1}\r\n          containerClassName={\"pagination\"}\r\n          previousClassName={\"pagination-previous\"}\r\n          nextClassName={\"pagination-next\"}\r\n          pageClassName={\"pagination-item\"}\r\n          breakClassName={\"pagination-item\"}\r\n          activeClassName={\"active_page\"}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default TableComp;\r\n","import React, { useState } from \"react\";\r\nimport { Button, Modal } from \"antd\";\r\nimport \"./style.scss\";\r\nimport ErrorImg from \"assets/images/ErrorImg.svg\";\r\nimport successImg from \"assets/images/SuccessImg.svg\";\r\nimport NormalButton from \"../NormalButton/NormalButton\";\r\nconst DeleteModal = ({\r\n  DeleteMessage,\r\n  modalOpen,\r\n  closeModal,\r\n  handleDelete,\r\n}) => {\r\n  return (\r\n    <>\r\n      <Modal open={modalOpen} centered closable={false}>\r\n        <div className=\"p-5\">\r\n          {DeleteMessage && <p className=\"delete_text m-0\">{DeleteMessage}</p>}\r\n          {DeleteMessage && (\r\n            <div className=\"delete_Img\">\r\n              <img src={ErrorImg} alt=\"\" />\r\n            </div>\r\n          )}\r\n          {DeleteMessage && (\r\n            <div className=\"d-flex align-items-center justify-content-center\">\r\n              <div className=\"col-6\">\r\n                <NormalButton\r\n                  className=\"authButton1\"\r\n                  label={\"No\"}\r\n                  onClick={closeModal}\r\n                />\r\n              </div>\r\n              <div className=\"col-6\">\r\n                <NormalButton\r\n                  className=\"loginButton\"\r\n                  label={\"Yes\"}\r\n                  onClick={handleDelete}\r\n                />\r\n              </div>\r\n            </div>\r\n          )}\r\n        </div>\r\n      </Modal>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default DeleteModal;\r\n","import React, { useState, useEffect, useCallback } from \"react\";\r\n//styles\r\nimport \"./style.scss\";\r\n//internal components\r\nimport InputBox from \"component/common/InputBox/InputBox\";\r\nimport TableComp from \"component/common/TableComp/TableComp\";\r\nimport Loader from \"component/common/Loader\";\r\nimport DeleteModal from \"component/common/DeleteModal/DeleteModal\";\r\nimport NormalButton from \"component/common/NormalButton/NormalButton\";\r\n//service\r\nimport { bulkDeleteClient, deleteClient, getClientList } from \"service/Auth\";\r\nimport { Toast } from \"service/toast\";\r\n//helper\r\nimport { debounceFunction } from \"helpers\";\r\n\r\nconst ClientsFamily = ({ create, view, edit, remove }) => {\r\n  const [pageCount, setPageCount] = useState(1);\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const [data, setData] = useState([]);\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [searchStaff, setSearchStaff] = useState(\"\");\r\n  const [role, setRole] = useState(\"\");\r\n  const [status, setStatus] = useState(\"\");\r\n  const [bulkDelete, setBulkDelete] = useState(false);\r\n  const [deleteId, setDeleteId] = useState([]);\r\n  const [modalVisible, setModalVisible] = useState({\r\n    id: null,\r\n    show: false,\r\n  });\r\n  const includedKeys = [\r\n    {\r\n      label: \"Client Id\",\r\n      value: \"clientId\",\r\n    },\r\n    {\r\n      label: \"Client Name\",\r\n      value: \"clientName\",\r\n    },\r\n    {\r\n      label: \"Email Id\",\r\n      value: \"email\",\r\n    },\r\n    {\r\n      label: \"Date of Birth\",\r\n      value: \"dateOfBirth\",\r\n    },\r\n    {\r\n      label: \"Relative Name\",\r\n      value: \"relativeName\",\r\n    },\r\n    {\r\n      label: \"Relationship\",\r\n      value: \"relationShip\",\r\n    },\r\n  ];\r\n\r\n  const fetchClientList = async (page) => {\r\n    setIsLoading(true);\r\n    try {\r\n      let params = {\r\n        page: page,\r\n        limit: 10,\r\n        search: searchStaff,\r\n      };\r\n      let response = await getClientList(params);\r\n      if (response.status === 200 && response?.data?.data?.list) {\r\n        console.log(\"response\", response?.data?.data);\r\n        setData(response?.data?.data?.list);\r\n        setPageCount(response?.data?.data?.pageMeta?.pageCount);\r\n        setCurrentPage(response?.data?.data?.pageMeta?.currentPage);\r\n      } else {\r\n        setData([]);\r\n      }\r\n    } catch (err) {\r\n      console.log(\"err\", err);\r\n    } finally {\r\n      setIsLoading(false);\r\n    }\r\n  };\r\n\r\n  const handlePageChange = (page) => {\r\n    setCurrentPage(page.selected);\r\n    fetchClientList(page);\r\n  };\r\n\r\n  const handleOpenModal = (id) => {\r\n    setModalVisible({\r\n      id: id,\r\n      show: true,\r\n    });\r\n  };\r\n\r\n  const handleDeleteItem = async () => {\r\n    if (modalVisible.show && modalVisible.id) {\r\n      let params = {\r\n        id: modalVisible.id,\r\n      };\r\n      let response = await deleteClient(params);\r\n      if (response.status === 200) {\r\n        Toast({ type: \"success\", message: response.data.message });\r\n        fetchClientList(currentPage);\r\n      }\r\n    }\r\n    setModalVisible({ show: false, id: null });\r\n  };\r\n\r\n  const handleSearchChange = useCallback(\r\n    debounceFunction((value) => {\r\n      setSearchStaff(value);\r\n    }, 500),\r\n    []\r\n  );\r\n\r\n  const handleBulk = async (id) => {\r\n    if (id.length > 0) {\r\n      setBulkDelete(true);\r\n      deleteId.length = 0;\r\n      deleteId.push(...Object.values(id));\r\n    } else {\r\n      setBulkDelete(false);\r\n    }\r\n  };\r\n\r\n  const handleBulkDelete = async () => {\r\n    if (deleteId.length > 0) {\r\n      let body = {\r\n        ids: deleteId,\r\n      };\r\n      let response = await bulkDeleteClient(body);\r\n      if (response.status === 200) {\r\n        Toast({ type: \"success\", message: response.data.message });\r\n        fetchClientList(currentPage);\r\n      }\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchClientList(currentPage);\r\n  }, [searchStaff, role, status]);\r\n\r\n  return (\r\n    <div className=\"px-5 py-3 clients_family\">\r\n      <h6>Client’s Family</h6>\r\n      <div className=\"row align-items-center\">\r\n        <div className=\"col-4\">\r\n          <InputBox\r\n            className=\"login_input Notification_input\"\r\n            type={\"text\"}\r\n            value={searchStaff}\r\n            onChange={(e) => handleSearchChange(e.target.value)}\r\n            placeholder=\"Search by Id, Username, Email\"\r\n            name=\"search\"\r\n            Iconic\r\n            Search\r\n          />\r\n        </div>\r\n        {/* <div className=\"col-md-2\">\r\n          <CustomController\r\n            name={\"role\"}\r\n            control={control}\r\n            error={errors?.role}\r\n            defaultValue={role}\r\n            rules={{ required: false }}\r\n            render={({ onChange, ...fields }) => {\r\n              return (\r\n                <NormalMultiSelect\r\n                  {...fields}\r\n                  placeholder={\"Filter by Role\"}\r\n                  options={roleOptions}\r\n                  name=\"role\"\r\n                  handleChange={(e, { value } = {}) => {\r\n                    onChange(value);\r\n                    setRole(value);\r\n                  }}\r\n                />\r\n              );\r\n            }}\r\n          />\r\n        </div>\r\n        <div className=\"col-md-2\">\r\n          <CustomController\r\n            name={\"status\"}\r\n            control={control}\r\n            error={errors?.status}\r\n            defaultValue={status}\r\n            rules={{ required: false }}\r\n            render={({ onChange, ...fields }) => {\r\n              return (\r\n                <NormalMultiSelect\r\n                  {...fields}\r\n                  placeholder={\"Filter by Status\"}\r\n                  options={statusOptions}\r\n                  name=\"status\"\r\n                  handleChange={(e, { value } = {}) => {\r\n                    onChange(value);\r\n                    setStatus(value);\r\n                  }}\r\n                />\r\n              );\r\n            }}\r\n          />\r\n        </div> */}\r\n        <div className=\"col-2\"></div>\r\n        <div className=\"col-md-2\">\r\n          {bulkDelete && (\r\n            <NormalButton\r\n              className=\"authButton1\"\r\n              label={\"Delete\"}\r\n              onClick={handleBulkDelete}\r\n            />\r\n          )}\r\n        </div>\r\n      </div>\r\n      <div className=\" mt-4 p-3\">\r\n        {isLoading ? (\r\n          <Loader\r\n            loading={isLoading}\r\n            className=\"d-flex align-items-center justify-content-center\"\r\n          />\r\n        ) : data.length > 0 ? (\r\n          <TableComp\r\n            data={data}\r\n            EditAction={edit}\r\n            DeleteAction={remove}\r\n            includedKeys={includedKeys}\r\n            pageCount={pageCount}\r\n            currentPage={currentPage}\r\n            setBulkDelete={setBulkDelete}\r\n            handleOpenModal={handleOpenModal}\r\n            onRowsSelect={handleBulk}\r\n            onPageChange={handlePageChange}\r\n            setCurrentPage={setCurrentPage}\r\n            editRouteName={\"/admin/clients-family/edit-client\"}\r\n          />\r\n        ) : (\r\n          <div className=\"d-flex align-items-center justify-content-center \">\r\n            No Data Available\r\n          </div>\r\n        )}\r\n      </div>\r\n      <div>\r\n        <DeleteModal\r\n          modalOpen={modalVisible.show}\r\n          closeModal={() => setModalVisible({ id: null, show: false })}\r\n          handleDelete={handleDeleteItem}\r\n          DeleteMessage={\"Are you sure you want to delete Staff?\"}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ClientsFamily;\r\n","module.exports = __webpack_public_path__ + \"static/media/SuccessImg.4b68588c.svg\";","module.exports = __webpack_public_path__ + \"static/media/ErrorImg.b30f2c03.svg\";","module.exports = __webpack_public_path__ + \"static/media/ReadImg.96474dd0.svg\";","module.exports = __webpack_public_path__ + \"static/media/deleteIcon.b8b189cc.svg\";","module.exports = __webpack_public_path__ + \"static/media/editIcon.d54ed3bb.svg\";","import arrayWithoutHoles from \"./arrayWithoutHoles\";\nimport iterableToArray from \"./iterableToArray\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray\";\nimport nonIterableSpread from \"./nonIterableSpread\";\nexport default function _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableSpread();\n}","import arrayLikeToArray from \"./arrayLikeToArray\";\nexport default function _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return arrayLikeToArray(arr);\n}","export default function _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && Symbol.iterator in Object(iter)) return Array.from(iter);\n}","export default function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}"],"sourceRoot":""}